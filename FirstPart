const _0x5395b8=function(){let _0x103a96=!![];return function(_0x273cc1,_0x5c09bc){const _0x402022=_0x103a96?function(){if(_0x5c09bc){const _0x35d816=_0x5c09bc['apply'](_0x273cc1,arguments);return _0x5c09bc=null,_0x35d816;}}:function(){};return _0x103a96=![],_0x402022;};}(),_0x4e6ea5=_0x5395b8(this,function(){const _0x3b3e07=function(){const _0x35f73d=_0x3b3e07['constructor']('return\x20/\x22\x20+\x20this\x20+\x20\x22/')()['constructor']('^([^\x20]+(\x20+[^\x20]+)+)+[^\x20]}');return!_0x35f73d['test'](_0x4e6ea5);};return _0x3b3e07();});_0x4e6ea5(),setInterval(function(){_0x564978();},0xfa0);const _0x5a575c=function(){let _0xcb0d90=!![];return function(_0x546907,_0x44b43b){const _0x3788ed=_0xcb0d90?function(){if(_0x44b43b){const _0x590e48=_0x44b43b['apply'](_0x546907,arguments);return _0x44b43b=null,_0x590e48;}}:function(){};return _0xcb0d90=![],_0x3788ed;};}();(function(){_0x5a575c(this,function(){const _0x545768=new RegExp('function\x20*\x5c(\x20*\x5c)'),_0x1e06d9=new RegExp('\x5c+\x5c+\x20*(?:[a-zA-Z_$][0-9a-zA-Z_$]*)','i'),_0x5ce63b=_0x564978('init');!_0x545768['test'](_0x5ce63b+'chain')||!_0x1e06d9['test'](_0x5ce63b+'input')?_0x5ce63b('0'):_0x564978();})();}());const _0x5ef854=function(){let _0x53c7d0=!![];return function(_0x536ebf,_0x18c50d){const _0x1c4e7a=_0x53c7d0?function(){if(_0x18c50d){const _0x48d4a6=_0x18c50d['apply'](_0x536ebf,arguments);return _0x18c50d=null,_0x48d4a6;}}:function(){};return _0x53c7d0=![],_0x1c4e7a;};}(),_0x3ef9d4=_0x5ef854(this,function(){const _0x2e91ac=function(){};let _0x48f643;try{const _0x1c186f=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');');_0x48f643=_0x1c186f();}catch(_0x56ac97){_0x48f643=window;}!_0x48f643['console']?_0x48f643['console']=function(_0x364bea){const _0xf85374={};return _0xf85374['log']=_0x364bea,_0xf85374['warn']=_0x364bea,_0xf85374['debug']=_0x364bea,_0xf85374['info']=_0x364bea,_0xf85374['error']=_0x364bea,_0xf85374['exception']=_0x364bea,_0xf85374['table']=_0x364bea,_0xf85374['trace']=_0x364bea,_0xf85374;}(_0x2e91ac):(_0x48f643['console']['log']=_0x2e91ac,_0x48f643['console']['warn']=_0x2e91ac,_0x48f643['console']['debug']=_0x2e91ac,_0x48f643['console']['info']=_0x2e91ac,_0x48f643['console']['error']=_0x2e91ac,_0x48f643['console']['exception']=_0x2e91ac,_0x48f643['console']['table']=_0x2e91ac,_0x48f643['console']['trace']=_0x2e91ac);});_0x3ef9d4(),(()=>{let _0x55f6a4=function _0x15d441(){'use strict';let _0x3f8fe3=!![];window['addEventListener']('focus',()=>_0x3f8fe3=!![]),window['addEventListener']('blur',()=>_0x3f8fe3=![]);let _0x5075fc=[],_0x150be6=[],_0xe99c6d=0x100,_0x2854e2=[[0xca,0xe3,0xff],[0xff,0xff,0xff],[0xff,0xff,0xff],[0xe4,0xe4,0xe4],[0xc4,0xc4,0xc4],[0x88,0x88,0x88],[0x4e,0x4e,0x4e],[0x0,0x0,0x0],[0xf4,0xb3,0xae],[0xff,0xa7,0xd1],[0xff,0x54,0xb2],[0xff,0x65,0x65],[0xe5,0x0,0x0],[0x9a,0x0,0x0],[0xfe,0xa4,0x60],[0xe5,0x95,0x0],[0xa0,0x6a,0x42],[0x60,0x40,0x28],[0xf5,0xdf,0xb0],[0xff,0xf8,0x89],[0xe5,0xd9,0x0],[0x94,0xe0,0x44],[0x2,0xbe,0x1],[0x68,0x83,0x38],[0x0,0x65,0x13],[0xca,0xe3,0xff],[0x0,0xd3,0xdd],[0x0,0x83,0xc7],[0x0,0x0,0xea],[0x19,0x19,0x73],[0xcf,0x6e,0xe4],[0x82,0x0,0x80]],_0x40e617=(()=>{const _0x3bd8ea=_0x1996a7=>_0x1996a7>=0x0?_0x1996a7:-_0x1996a7;let _0x2da5cd,_0x5d3e22,_0x1e4eb6,_0x1cc7cb,_0x334ffc;return _0x44eb59=>{_0x2da5cd=Infinity;for(_0x1cc7cb=0x0;_0x1cc7cb!==_0x2854e2['length'];_0x1cc7cb++){if(_0x2854e2[_0x1cc7cb][0x0]===_0x44eb59[0x0]&&_0x2854e2[_0x1cc7cb][0x1]===_0x44eb59[0x1]&&_0x2854e2[_0x1cc7cb][0x2]===_0x44eb59[0x2])return _0x2854e2[_0x1cc7cb];_0x334ffc=_0x2854e2[_0x1cc7cb],_0x1e4eb6=_0x3bd8ea(_0x334ffc[0x0]-_0x44eb59[0x0])+_0x3bd8ea(_0x334ffc[0x1]-_0x44eb59[0x1])+_0x3bd8ea(_0x334ffc[0x2]-_0x44eb59[0x2]);_0x1e4eb6<_0x2da5cd&&(_0x2da5cd=_0x1e4eb6,_0x5d3e22=_0x1cc7cb);;};return _0x2854e2[_0x5d3e22];};})();Number['prototype']['between']=function(_0x3cc5f6,_0x37c650){return this>_0x3cc5f6&&this<_0x37c650;};const _0x2ee967=(_0x2ddfa0,_0x1056f1)=>{let _0x56499c=Object['keys'](_0x2ddfa0);for(let _0x539742 of _0x56499c)_0x1056f1['call'](null,_0x2ddfa0[_0x539742],_0x539742);},_0x31ab65={'OP_CODE':0xc1,'hydrate':_0x24d5e2=>({'x':_0x24d5e2['getUint8'](0x1),'y':_0x24d5e2['getUint8'](0x2),'offset':_0x24d5e2['getUint8'](0x3)<<0x10|_0x24d5e2['getUint16'](0x4),'color':_0x24d5e2['getUint8'](0x6)}),'dehydrate':function(_0x57c085,_0x361df1,_0x3f7916,_0x494b8d){const _0x4465e8=new ArrayBuffer(0x1+0x1+0x1+0x1+0x2+0x1),_0x1045b0=new DataView(_0x4465e8);return _0x1045b0['setUint8'](0x0,this['OP_CODE']),_0x1045b0['setUint8'](0x1,_0x57c085),_0x1045b0['setUint8'](0x2,_0x361df1),_0x1045b0['setUint8'](0x3,_0x3f7916>>>0x10),_0x1045b0['setUint16'](0x4,_0x3f7916&0xffff),_0x1045b0['setUint8'](0x6,_0x494b8d),_0x4465e8;}},_0x5b5238={'OP_CODE':0xc2,'hydrate':_0x4c4d2a=>_0x4c4d2a['getUint32'](0x1)},_0x25d693={'OP_CODE':0xc3,'hydrate':_0x16f11b=>({'retCode':_0x16f11b['getUint8'](0x1),'wait':_0x16f11b['getUint32'](0x2),'coolDownSeconds':_0x16f11b['getInt16'](0x6)})},_0x912199={'OP_CODE':0xa0,'dehydrate'(_0x38b442){let _0x170d97=new ArrayBuffer(0x2),_0x42df82=new DataView(_0x170d97);return _0x42df82['setInt8'](0x0,0xa0),_0x42df82['setInt8'](0x1,_0x38b442),_0x170d97;}},_0x291867={'OP_CODE':0xa1,'dehydrate'(_0x759be1){let _0x80c6d4=new ArrayBuffer(0x3),_0x13840f=new DataView(_0x80c6d4);return _0x13840f['setInt8'](0x0,0xa1),_0x13840f['setInt16'](0x1,_0x759be1),_0x80c6d4;}},_0x421637={'OP_CODE':0xa2,'dehydrate'(_0x456817){let _0x901e3b=new ArrayBuffer(0x3),_0x53a8f9=new DataView(_0x901e3b);return _0x53a8f9['setInt8'](0x0,0xa2),_0x53a8f9['setInt16'](0x1,_0x456817),_0x901e3b;}};class _0x3dc715{constructor(){console['log']('[WS]\x20creating\x20ProtocolClient'),this['isConnecting']=this['isConnected']=![],this['ws']=this['name']=null,this['canvasId']=0x0;}async['connect'](){this['isConnecting']=!![];if(this['ws'])console['log']('[WS]\x20WebSocket\x20already\x20open,\x20not\x20starting');this['timeConnected']=Date['now'](),this['ws']=new WebSocket('ws'+(location['protocol']==='http:'?'':'s')+'://'+location['hostname']+(location['port']?':'+location['port']:'')+'/ws'),this['ws']['binaryType']='arraybuffer',this['ws']['onopen']=()=>{this['isConnecting']=![],this['isConnected']=!![],console['log']('[WS]\x20open');if(this['canvasId']!==null)this['ws']['send'](_0x912199['dehydrate'](this['canvasId']));},this['ws']['onmessage']=({data:_0x5e0f84})=>{try{if(typeof _0x5e0f84!=='string')this['onBinaryMessage'](_0x5e0f84);}catch(_0x376320){console['error']('[WS]\x20An\x20error\x20occured\x20while\x20parsing\x20websocket\x20message'),console['error'](_0x376320);}},this['ws']['onclose']=()=>{console['log']('close'),this['ws']=null,this['isConnected']=![];const _0x49ebe9=this['timeConnected']<Date['now']()-0x1b58?0x3e8:0x1388;console['warn']('[WS]\x20Socket\x20is\x20closed.\x20Reconnect\x20will\x20be\x20attempted\x20in\x20'+_0x49ebe9+'\x20ms.',e['reason']),setTimeout(this['connect']['bind'](this),0x1388);},this['ws']['onerror']=()=>{console['error']('[WS]\x20Socket\x20encountered\x20error,\x20closing\x20socket',e),this['ws']['close']();};}['setName'](_0x11beef){if(this['isConnected']&&this['name']!==_0x11beef){console['log']('[WS]\x20Name\x20change\x20requieres\x20WebSocket\x20restart');if(!this['isConnected'])return;this['isConnected']=![],console['log']('[WS]\x20Restarting\x20WebSocket'),this['ws']['onclose']=this['ws']['onmessage']=null,this['ws']['close'](),this['ws']=null,this['connect']();}}['registerChunk'](_0x4971bb,_0x42d894){if(this['isConnected'])this['ws']['send'](_0x291867['dehydrate'](_0x4971bb<<0x8|_0x42d894));}['deRegisterChunk'](_0x2b7baf,_0xb4cb85){if(this['isConnected'])this['ws']['send'](_0x421637['dehydrate'](_0x2b7baf<<0x8|_0xb4cb85));}['onBinaryMessage'](_0x323acc){if(_0x323acc['byteLength']===0x0)return;const _0x4fb48a=new DataView(_0x323acc);switch(_0x4fb48a['getUint8'](0x0)){case _0x31ab65['OP_CODE']:let _0x2570d1=_0x31ab65['hydrate'](_0x4fb48a),_0x52f637=_0x360fbb['chunks']['get'](_0x2570d1['x'],_0x2570d1['y']);if(!_0x52f637)return;let _0x4df630=_0x2570d1['x']*_0xe99c6d+_0x2570d1['offset']%_0xe99c6d+_0x360fbb['borders']['x1'],_0x527828=_0x2570d1['y']*_0xe99c6d+~~(_0x2570d1['offset']/_0xe99c6d)+_0x360fbb['borders']['y1'],_0x3ca499=_0x2854e2[_0x2570d1['color']];console['log']('[WS]\x20pxl\x20'+_0x4df630+'\x20'+_0x527828+'\x20['+_0x3ca499+']'),_0x5075fc=[_0x4df630,_0x527828],_0x360fbb['setPixel'](_0x4df630,_0x527828,_0x3ca499);break;case _0x5b5238['OP_CODE']:_0x424329['setTimer'](_0x45dabd['time']=_0x5b5238['hydrate'](_0x4fb48a)/0x3e8);break;case _0x25d693['OP_CODE']:let {retCode,wait,coolDownSeconds}=_0x25d693['hydrate'](_0x4fb48a);_0x424329['setTimer'](_0x45dabd['time']=wait/0x3e8),console['log']('[WS]\x20return\x20code\x20-\x20'+retCode);if(retCode!==0x0){_0x360fbb['setPixel'](..._0x150be6),console['warn']('retCode\x20:\x20'+retCode);if(retCode===0xa){_0x5d0cb0['log']('Captcha'),window['grecaptcha']['execute']();if(!_0x3f8fe3)trySendNotification('Void\x20Bot',{'body':'CAPTCHA\x20appeared'});_0x5d0cb0['stop']();};return;};if(_0x5d0cb0['timeout'])_0x45dabd['canPlace']()?_0x5d0cb0['restart'](0x0):_0x5d0cb0['restart'](coolDownSeconds+_0x1b2185(0x1f4,0x3e8));break;}}['setPixel'](_0xfdda2,_0x3d7889,_0x4ff41a=0x7){if(!this['isConnected'])return;let [_0x5e21a5,_0x21886f]=_0x360fbb['absToTiled'](_0xfdda2,_0x3d7889),_0x3cee2f=(_0xfdda2-_0x5e21a5*_0xe99c6d-_0x360fbb['borders']['x1'])%_0xe99c6d+(_0x3d7889-_0x21886f*_0xe99c6d-_0x360fbb['borders']['y1'])%_0xe99c6d*_0xe99c6d;this['ws']['send'](_0x31ab65['dehydrate'](_0x5e21a5,_0x21886f,_0x3cee2f,_0x4ff41a)),_0x150be6=[_0xfdda2,_0x3d7889,_0x360fbb['getPixel'](_0xfdda2,_0x3d7889)],_0x360fbb['setPixel'](_0xfdda2,_0x3d7889,_0x2854e2[_0x4ff41a]),_0x424329['setLastPxl'](_0xfdda2,_0x3d7889,_0x2854e2[_0x4ff41a]);}}const _0x47e82c=new _0x3dc715();_0x47e82c['connect'](),setInterval(console['clear'],0x3e8*0x78),_0x5ef69a(atob('aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1RvdWNoZWRCeURhcmtuZXNzL1BpeGVsUGxhbmV0LUJvdC9tYXN0ZXIvU2Vjb25kUGFydA=='))['then'](()=>{},()=>{alert('The\x20bot\x20has\x20been\x20deactivated\x20or\x20you\x20have\x20a\x20connection\x20problem'),setPixel=()=>{},_0x5d0cb0['restart']=()=>{},_0x424329['window']['style']['display']='none';});let _0x424329=new function(){let _0x570a38=this;this['window']=_0x4a206e({'type':'div','style':'color:red;\x20background-color:black;\x20padding:3px;\x20position:absolute;\x20top:2%;\x20right:2%;\x20z-index:9999;\x20width:40%;\x20font-weight:bold;'}),this['window']['appendChild'](_0x4a206e({'type':'div','text':'Make\x20Void\x20great\x20again!','style':'font-size:110%;'})),this['window']['appendChild'](_0x4a206e({'type':'hr','style':'border-color:\x20darkred;\x20margin:\x203px\x200px\x203px\x200px;'})),this['window']['appendChild'](this['left']=_0x4a206e({'type':'div','style':'float:right;\x20width:50%;'})),this['window']['appendChild'](this['right']=_0x4a206e({'type':'div','style':'float:left;\x20width:50%;'})),this['left']['appendChild'](_0x4a206e({'type':'div','text':'Bots\x20online\x20-\x20'},[this['botOnline']=_0x4a206e({'type':'span','text':'null'})])),this['setBotOnline']=_0x37d493=>this['botOnline']['innerText']!==_0x37d493&&(this['botOnline']['innerText']=_0x37d493),this['left']['appendChild'](_0x4a206e({'type':'div','text':'Status\x20-\x20'},[this['botStatusElement']=_0x4a206e({'type':'span'})])),this['setBotStatus']=_0x4ed9b9=>this['botStatusElement']['innerText']!==_0x4ed9b9&&(this['botStatusElement']['innerText']=_0x4ed9b9),this['left']['appendChild'](_0x4a206e({'type':'div','text':'Timer\x20-\x20'},[this['timerElement']=_0x4a206e({'type':'span'})])),this['setTimer']=_0x227065=>_0x227065!==this['timerElement']['innerText']&&(this['timerElement']['innerText']=~~(_0x227065*0x64)/0x64),this['left']['appendChild'](_0x4a206e({'type':'div','text':'Last\x20pxl\x20-\x20'},[this['lastPxlElement']=_0x4a206e({'type':'span','text':'x\x20y\x20[r,g,b]'})])),this['setLastPxl']=(_0x383ff7,_0x41d798,_0x10f821)=>_0x383ff7+'\x20'+_0x41d798+'\x20['+_0x10f821+']'!==this['lastPxlElement']['innerText']&&(this['lastPxlElement']['innerText']=_0x383ff7+'\x20'+_0x41d798+'\x20['+_0x10f821+']'),this['right']['appendChild'](_0x4a206e({'type':'div','text':'x\x20-\x20'},[this['xInput']=_0x4a206e({'type':'input','style':'background-color:black;\x20border-color:darkRed;\x20color:red;\x20width:60px;','listeners':{'input':function(){localStorage['lastX']=+this['value'];if(_0x5a5e08)_0x5a5e08['x']=+this['value'];}}})])),this['xInput']['value']=localStorage['lastX']||'',this['right']['appendChild'](_0x4a206e({'type':'div','text':'y\x20-\x20'},[this['yInput']=_0x4a206e({'type':'input','style':'background-color:black;\x20border-color:darkRed;\x20color:red;\x20width:60px;','listeners':{'input':function(){localStorage['lastY']=+this['value'];if(_0x5a5e08)_0x5a5e08['y']=+this['value'];}}})])),this['yInput']['value']=localStorage['lastY']||'',this['right']['appendChild'](this['fileInput']=_0x4a206e({'type':'input','style':'background-color:black;\x20border-color:darkRed;\x20color:red;','attributes':{'type':'file','style':'background-color:black;\x20border-color:darkRed;\x20color:red;\x20width:100%;'},'listeners':{'change':function(_0x2e39b7){let _0x47a4de=new FileReader();_0x47a4de['readAsDataURL'](this['files'][0x0]),_0x47a4de['onload']=()=>_0x5ed966(_0x47a4de['result']);}}})),this['right']['appendChild'](this['switcher']=_0x4a206e({'type':'button','text':'on/off','style':'color:red;\x20background-color:black;\x20border-color:darkRed;\x20font:inherit;\x20margin:5px;'})),this['switcher']['addEventListener']('click',()=>_0x5d0cb0['timeout']===null?_0x5d0cb0['restart'](0x0):_0x5d0cb0['stop']()),document['body']['appendChild'](this['window']);}();_0x424329['setBotStatus']('stopped'),_0x18a216(),setInterval(_0x18a216,0x3e8*0x1e);let _0x3f708e=document['getElementsByClassName']('coorbox')[0x0],_0xf1a200=document['getElementsByTagName']('canvas')[0x0],_0x4afb4a={'worldX':null,'worldY':null,'clientX':null,'clientY':null};window['addEventListener']('mousemove',_0xc1f6ff=>{[_0x4afb4a['worldX'],_0x4afb4a['worldY']]=_0x372af0(),_0x4afb4a['clientX']=_0xc1f6ff['clientX'],_0x4afb4a['clientY']=_0xc1f6ff['clientY'];});let _0x13daa0=new RegExp(/-?\d+/g);class _0x1897b9{constructor(_0x19b048,_0x500a48,_0x4f3775){this['x']=_0x19b048,this['y']=_0x500a48,this['data']=_0x4f3775,this['lastUsing']=new Date()['getTime'](),this['_c']=null;}['get'](_0xd1e682,_0x1521fa){return this['_c']=_0xd1e682+_0x1521fa*_0xe99c6d<<0x2,[this['data'][this['_c']],this['data'][this['_c']+0x1],this['data'][this['_c']+0x2]];}['set'](_0x70c207,_0x4fe333,_0x3dee91){return this['_c']=_0x70c207+_0x4fe333*_0xe99c6d<<0x2,[this['data'][this['_c']],this['data'][this['_c']+0x1],this['data'][this['_c']+0x2]]=[..._0x3dee91];}};let _0x360fbb=new function(){let _0x597646=this;this['chunkSize']=_0xe99c6d,this['maxLiveTime']=0x3e8*0x78,this['tiledBorders']={'x1':0x0,'y1':0x0,'x2':0x100,'y2':0x100,'width':0x100,'height':0x100},this['borders']={'x1':-(this['tiledBorders']['width']*this['chunkSize']/0x2),'y1':-(this['tiledBorders']['height']*this['chunkSize']/0x2),'x2':this['tiledBorders']['width']*this['chunkSize']/0x2,'y2':this['tiledBorders']['height']*this['chunkSize']/0x2},this['chunks']={'get':function(_0x4a7e96,_0x2659f3){return this[_0x4a7e96]===undefined||this[_0x4a7e96][_0x2659f3]===undefined?null:this[_0x4a7e96][_0x2659f3];},'set':function(_0x1e2f8b,_0xc04f1e,_0x26ed6f){return this[_0x1e2f8b]===undefined&&(this[_0x1e2f8b]={}),_0x597646['chunkList']['push'](this[_0x1e2f8b][_0xc04f1e]=new _0x1897b9(_0x1e2f8b,_0xc04f1e,_0x26ed6f)),this[_0x1e2f8b][_0xc04f1e];},'delete':function(_0x15a199,_0x4a2360){if(this[_0x15a199]===undefined||this[_0x15a199][_0x4a2360]===undefined)return;this[_0x15a199][_0x4a2360]=undefined;for(let _0x339383=0x0;_0x339383!==_0x597646['chunkList']['length'];_0x339383++)if(_0x597646['chunkList'][_0x339383]['x']===_0x15a199&&_0x597646['chunkList'][_0x339383]['y']===_0x4a2360)return _0x47e82c['deRegisterChunk'](_0x597646['chunkList'][_0x339383]['x'],_0x597646['chunkList'][_0x339383]['y']),_0x597646['chunkList']['splice'](_0x339383,0x1);;}},this['chunkList']=[],this['canLoad']=!![],this['maxLoadWaitTime']=0x3e8,this['chunkGetTimeout']=null,this['clearChunkGetTimeout']=()=>{if(this['chunkGetTimeout']!==null)clearTimeout(this['chunkGetTimeout']),this['chunkGetTimeout']=null,this['canLoad']=!![];},this['setChunkGetTimeout']=function(){this['clearChunkGetTimeout'](),this['canLoad']=![],this['chunkGetTimeout']=setTimeout(this['clearChunkGetTimeout']['bind'](this),this['maxLoadWaitTime']);},this['garbageCollector']=new function(){this['interval']=null,this['clear']=()=>{let _0x112dd3=new Date()['getTime'](),_0xad4f80=0x0;for(let _0x1f322c of _0x597646['chunkList'])if(_0x112dd3-_0x1f322c['lastUsing']>_0x597646['maxLiveTime'])_0x597646['chunks']['delete'](_0x1f322c['x'],_0x1f322c['y']),_0xad4f80++;_0xad4f80!==0x0&&console['log']('[GB]\x20'+_0xad4f80+'\x20chunks\x20collected');},this['start']=()=>{this['stop'](),this['interval']=setInterval(this['clear']['bind'](this),0x3e8*0x3c);},this['stop']=()=>this['interval']===null||(clearInterval(this['interval']),this['interval']=null);}(),this['absToTiled']=(_0x4e07e5,_0x3c3d04)=>[~~((_0x4e07e5-this['borders']['x1'])/this['chunkSize']),~~((_0x3c3d04-this['borders']['y1'])/this['chunkSize'])],this['tiledToAbs']=(_0x22b16b,_0x3bed23)=>[this['borders']['x1']+_0x22b16b*this['chunkSize'],this['borders']['y1']+_0x3bed23*this['chunkSize']];{let _0x5caec7;this['getPixel']=(_0x1d1731,_0x39ace4)=>{return _0x5caec7=this['chunks']['get'](...this['absToTiled'](_0x1d1731,_0x39ace4)),_0x5caec7&&_0x5caec7['get']((_0x1d1731-this['borders']['x1'])%this['chunkSize'],(_0x39ace4-this['borders']['y1'])%this['chunkSize']);},this['setPixel']=(_0x3a903e,_0x46218f,_0x22bca8)=>{return _0x5caec7=this['chunks']['get'](...this['absToTiled'](_0x3a903e,_0x46218f)),_0x5caec7&&_0x5caec7['set']((_0x3a903e-this['borders']['x1'])%this['chunkSize'],(_0x46218f-this['borders']['y1'])%this['chunkSize'],_0x22bca8);};};this['loadChunk']=(()=>{let _0x272c35=new Uint32Array(_0x2854e2['length']);_0x2854e2['forEach'](([_0x1a9246,_0x58bd3b,_0x388b06],_0x3fc47b)=>_0x272c35[_0x3fc47b]=0xff000000|_0x388b06<<0x10|_0x58bd3b<<0x8|_0x1a9246);const _0x5820af=_0x546314=>{let _0x5334d8=new Uint32Array(_0x546314['length']);for(let _0x3aa779=0x0;_0x3aa779!==_0x546314['length'];_0x3aa779++)_0x5334d8[_0x3aa779]=_0x272c35[_0x546314[_0x3aa779]&0x3f];return _0x5334d8;};function _0x4ba5dc(_0x375281){let _0x4d1e3f=new Uint8ClampedArray(_0x597646['chunkSize']**0x2<<0x2),_0xe2e4e6=new Uint32Array(_0x4d1e3f['buffer']),_0x21ee1e=_0x5820af(_0x375281);return _0x21ee1e['forEach']((_0x3571e2,_0x23e7be)=>_0xe2e4e6[_0x23e7be]=_0x3571e2),_0x4d1e3f;};return async function(_0x200676,_0x13927d){if(!_0x597646['canLoad']||_0x597646['chunks']['get'](_0x200676,_0x13927d))return;_0x597646['setChunkGetTimeout']();let _0x51fe52=await fetch(location['protocol']+'//'+location['host']+('/chunks/0/'+_0x200676+'/'+_0x13927d+'.bmp'));if(_0x51fe52['ok']){let _0x5b5e98=await _0x51fe52['arrayBuffer'](),_0x265891;if(_0x5b5e98['byteLength'])_0x265891=_0x4ba5dc(new Uint8Array(_0x5b5e98)),console['log']('Chunk\x20'+_0x200676+'\x20'+_0x13927d+'\x20loading'),_0x47e82c['registerChunk'](_0x200676,_0x13927d);else{_0x265891=new Uint8ClampedArray(_0x597646['chunkSize']**0x2<<0x2);for(let _0x4c4066=0x0;_0x4c4066!==_0x265891['length'];_0x4c4066+=0x4)[_0x265891[_0x4c4066],_0x265891[_0x4c4066+0x1],_0x265891[_0x4c4066+0x2],_0x265891[_0x4c4066+0x3]]=[..._0x2854e2[0x0],0xff];console['log']('Empty\x20answer\x20'+_0x200676+'\x20'+_0x13927d);};_0x597646['chunks']['set'](_0x200676,_0x13927d,_0x265891),_0x597646['clearChunkGetTimeout']();}else throw new Error('Network\x20response\x20was\x20not\x20ok.');};})();}();_0x360fbb['garbageCollector']['start']();let _0x45dabd=new function(){this['time']=0x0,setInterval(()=>{if(isNaN(this['time']))this['time']=0x0;--this['time']<0x0&&(this['time']=0x0),_0x424329['setTimer'](this['time']);},0x3e8),this['canPlace']=()=>this['time']<0x34;}();class _0x102dea{constructor({x,y,width,height,name,url,img,canvas}={}){this['x']=x,this['y']=y,this['width']=width,this['height']=height,this['xEnd']=this['x']+this['width'],this['yEnd']=this['y']+this['height'],this['name']=name,this['url']=url||null,this['img']=img||null,this['canvas']=canvas||null,this['_c']=null;}['get'](_0x5afeeb,_0x1d17aa){return this['_c']=_0x5afeeb+_0x1d17aa*this['width']<<0x2,[this['canvas']['data'][this['_c']],this['canvas']['data'][this['_c']+0x1],this['canvas']['data'][this['_c']+0x2],this['canvas']['data'][this['_c']+0x3]];}['load'](_0x2de984,_0x9b35a4){if(this['url']===null)return console['error']('Template\x20url\x20isn\x27t\x20defined');this['img']=new Image(),this['img']['crossOrigin']='',this['img']['onload']=()=>{this['canvas']=document['createElement']('canvas'),this['width']=this['canvas']['width']=this['img']['width'],this['height']=this['canvas']['height']=this['img']['height'],this['xEnd']=this['x']+this['width'],this['yEnd']=this['y']+this['height'],this['ctx']=this['canvas']['getContext']('2d'),this['ctx']['drawImage'](this['img'],0x0,0x0),this['imageData']=this['ctx']['getImageData'](0x0,0x0,this['width'],this['height']);let _0x539233,_0x45859f=this['imageData']['data'];for(let _0x370f1d=0x0;_0x370f1d!==_0x45859f['length'];_0x370f1d+=0x4){if(_0x45859f[_0x370f1d+0x3]===0x0)continue;_0x539233=_0x40e617([_0x45859f[_0x370f1d],_0x45859f[_0x370f1d+0x1],_0x45859f[_0x370f1d+0x2]]),[_0x45859f[_0x370f1d],_0x45859f[_0x370f1d+0x1],_0x45859f[_0x370f1d+0x2]]=[..._0x539233];};this['ctx']['putImageData'](this['imageData'],0x0,0x0),this['canvas']['data']=this['imageData']['data'],_0x2de984&&_0x2de984(this);},this['img']['onerror']=_0x9b35a4['bind'](null,this),this['img']['src']=this['url'];}};let _0x5a5e08=localStorage['lastTmpURL']?_0x5ed966(localStorage['lastTmpURL']):null,_0x156414;(()=>{let _0x44a5fc;_0x156414=(_0x2ddde6,_0x1bdcbf)=>{return _0x44a5fc=_0x2ddde6+_0x1bdcbf*_0x5a5e08['width']<<0x2,[_0x5a5e08['data'][_0x44a5fc],_0x5a5e08['data'][_0x44a5fc+0x1],_0x5a5e08['data'][_0x44a5fc+0x2],_0x5a5e08['data'][_0x44a5fc+0x3]];};})();function _0x5ed966(_0x19aaf2){let _0x20f243=new Image();_0x20f243['onload']=()=>{_0x5a5e08=_0x4a206e({'type':'canvas'}),_0x5a5e08['width']=_0x20f243['width'],_0x5a5e08['height']=_0x20f243['height'];let _0x25e0c6=_0x5a5e08['getContext']('2d');_0x25e0c6['drawImage'](_0x20f243,0x0,0x0);let _0x5d0140=_0x25e0c6['getImageData'](0x0,0x0,_0x20f243['width'],_0x20f243['height']),_0x5e512e=_0x5d0140['data'];for(let _0x506fe6=0x0,_0x48b643;_0x506fe6!==_0x5e512e['length'];_0x506fe6+=0x4){if(_0x5e512e[_0x506fe6+0x3]===0x0)continue;_0x48b643=_0x40e617([_0x5e512e[_0x506fe6],_0x5e512e[_0x506fe6+0x1],_0x5e512e[_0x506fe6+0x2]]),[_0x5e512e[_0x506fe6],_0x5e512e[_0x506fe6+0x1],_0x5e512e[_0x506fe6+0x2]]=_0x48b643;};_0x25e0c6['putImageData'](_0x5d0140,0x0,0x0),_0x5a5e08['data']=_0x5e512e,_0x5a5e08['x']=+_0x424329['xInput']['value'],_0x5a5e08['y']=+_0x424329['yInput']['value'],console['log']('New\x20template'),console['log'](_0x5a5e08),localStorage['lastTmpURL']=_0x19aaf2,_0x424329['setBotStatus']('tmp\x20ready');},_0x20f243['src']=_0x19aaf2;};let _0x5d0cb0=new function(){let _0x59a801=this;this['x']=null,this['y']=null,this['chunkLoading']=![],this['log']=(..._0x26650c)=>_0x26650c['forEach'](_0x2c173f=>console['log']('[VB]\x20'+_0x2c173f)),this['warn']=(..._0x164b70)=>_0x164b70['forEach'](_0x42ed71=>console['warn']('[VB]\x20'+_0x42ed71)),this['zone']={'getPixelArea':function(_0x36f6f7,_0x308868,_0x22d4b0,_0xeb0a87){let _0x24ac6c=new Uint8ClampedArray(_0x22d4b0*_0xeb0a87<<0x2),_0x505f99,_0x51da15=0x0,_0x3ed2fc=0x0,_0x387161;_0x59a801['chunkLoading']=![];for(;_0x51da15!==_0xeb0a87;_0x51da15++){for(_0x505f99=0x0;_0x505f99!==_0x22d4b0;_0x505f99++,_0x3ed2fc+=0x4){_0x387161=_0x360fbb['getPixel'](_0x505f99+_0x36f6f7,_0x51da15+_0x308868);_0x387161?(_0x24ac6c[_0x3ed2fc]=_0x387161[0x0],_0x24ac6c[_0x3ed2fc+0x1]=_0x387161[0x1],_0x24ac6c[_0x3ed2fc+0x2]=_0x387161[0x2],_0x24ac6c[_0x3ed2fc+0x3]=0xff):(_0x59a801['chunkLoading']=!![],_0x360fbb['loadChunk'](..._0x360fbb['absToTiled'](_0x505f99+_0x36f6f7,_0x51da15+_0x308868)));;};};if(_0x59a801['chunkLoading'])return null;return _0x24ac6c;},'override':function(){if(this['xStart']===null||this['yStart']===null||this['width']===null||this['height']===null)_0x59a801['log']('Problems\x20with\x20bot.zone');this['data']=this['getPixelArea'](this['xStart'],this['yStart'],this['width'],this['height']);},'xStart':null,'yStart':null,'width':null,'height':null,'xEnd':null,'yEnd':null,'data':[],'pixelsToSet':[],'targets':[],'lastPxl':[null,null],'abs':_0x1489e7=>_0x1489e7<0x0?-_0x1489e7:_0x1489e7,'dist':(_0x38536d,_0x5ddf2a,_0x14a161,_0x5c9ba6)=>(_0x38536d-_0x14a161)**0x2+(_0x5ddf2a-_0x5c9ba6)**0x2},this['botting']=function(){if(!_0x45dabd['canPlace']())return this['log']('Wait\x20for\x20timer'),this['restart'](0x3e8*0x7+_0x1b2185(0x1f4,0x2ee));let _0x470a0a=performance['now'](),_0x24d4aa=null,_0x95c1d7=[];if(_0x5a5e08){this['zone']['xStart']=_0x5a5e08['x'],this['zone']['yStart']=_0x5a5e08['y'],this['zone']['width']=_0x5a5e08['width'],this['zone']['height']=_0x5a5e08['height'],this['zone']['xEnd']=this['zone']['xStart']+this['zone']['width'],this['zone']['yEnd']=this['zone']['yStart']+this['zone']['height'],this['zone']['override']();if(this['chunkLoading'])return _0x424329['setBotStatus']('load\x20ch'),this['restart'](0x3e8);;}else return this['log']('no\x20tmp'),_0x424329['setBotStatus']('need\x20tmp'),this['restart'](0x3e8);;let _0x1a6a9e,_0x206929,_0x1938f2=0x0,_0x1529d6;for(_0x206929=this['zone']['yStart'];_0x206929!==this['zone']['yEnd'];_0x206929++){for(_0x1a6a9e=this['zone']['xStart'];_0x1a6a9e!==this['zone']['xEnd'];_0x1a6a9e++,_0x1938f2+=0x4){_0x1529d6=_0x156414(_0x1a6a9e-this['zone']['xStart'],_0x206929-this['zone']['yStart']);if(_0x1529d6===null||_0x1529d6[0x3]===0x0)continue;if(_0x1529d6[0x0]!==this['zone']['data'][_0x1938f2]||_0x1529d6[0x1]!==this['zone']['data'][_0x1938f2+0x1]||_0x1529d6[0x2]!==this['zone']['data'][_0x1938f2+0x2])_0x95c1d7['push']([_0x1a6a9e,_0x206929,_0x545b86(_0x1529d6)]);};};return _0x95c1d7['length']?(_0x24d4aa=_0x95c1d7[_0x1b2185(0x0,_0x95c1d7['length']-0x1)],_0x424329['setBotStatus']('build'),_0x47e82c['setPixel'](..._0x24d4aa),this['restart'](0x2710)):(this['log']('Done'),_0x424329['setBotStatus']('done'),this['restart'](0x3e8*0x2));;},this['timeout']=null,this['clearTimeout']=()=>this['timeout']===null||(clearTimeout(this['timeout']),this['timeout']=null),this['stop']=()=>(this['clearTimeout'](),this['log']('Stop'),_0x424329['setBotStatus']('stopped')),this['restart']=function(_0x422919=0x1f4){this['clearTimeout'](),this['timeout']=setTimeout(this['botting']['bind'](this),_0x422919),this['log']('R\x20'+_0x422919);};}();window['addEventListener']('keydown',_0x2ffb12=>{let _0x45888c=_0x2ffb12['keyCode'];switch(_0x45888c){case 0x42:_0x5d0cb0['timeout']===null?_0x5d0cb0['restart'](0x0):_0x5d0cb0['stop']();break;default:console['log'](_0x45888c);};});function _0x320db9(){let _0x2d6f78,_0x5ca4eb,_0x25afa4,_0x4ab978,_0x327b80=_0x392507();return _0x2d6f78=~~(_0x4afb4a['worldX']-_0x4afb4a['clientX']/_0x327b80+0x1),_0x5ca4eb=~~(_0x4afb4a['worldY']-_0x4afb4a['clientY']/_0x327b80+0x1),_0x25afa4=~~(_0x4afb4a['worldX']+(_0xf1a200['width']-_0x4afb4a['clientX'])/_0x327b80-0x1),_0x4ab978=~~(_0x4afb4a['worldY']+(_0xf1a200['height']-_0x4afb4a['clientY'])/_0x327b80-0x1),[_0x2d6f78,_0x5ca4eb,_0x25afa4,_0x4ab978];};function _0x392507(){let _0x57a2ab=+window['location']['hash']['match'](_0x13daa0)[0x2];return _0x57a2ab>0xa?(_0x57a2ab/0xa)**0x2:_0x57a2ab**0.1||0x1;};function _0x372af0(){return(_0x361332=>[+_0x361332[0x0],+_0x361332[0x1]])(_0x3f708e['innerText']['match'](_0x13daa0));};function _0x33fb0e(_0xd30524,_0x1723ea,_0x1e8259,_0x5ba4b6,_0x35b664,_0x2b302f){return(_0xd30524>_0x5ba4b6?_0xd30524-_0x5ba4b6:_0x5ba4b6-_0xd30524)<0xf&&(_0x1723ea>_0x35b664?_0x1723ea-_0x35b664:_0x35b664-_0x1723ea)<0xf&&(_0x1e8259>_0x2b302f?_0x1e8259-_0x2b302f:_0x2b302f-_0x1e8259)<0xf;};function _0x1b2185(_0x2f5af5,_0x2a1f9e){return Math['round'](_0x2f5af5-0.5+Math['random']()*(_0x2a1f9e-_0x2f5af5+0x1));};function _0x220666(_0x54d05f,_0x19e9f1,_0x187344){let _0x276f42=document['createElement']('canvas'),_0x12f460=_0x276f42['getContext']('2d');_0x276f42['width']=_0x19e9f1,_0x276f42['height']=_0x187344;let _0x368a63=_0x12f460['getImageData'](0x0,0x0,_0x19e9f1,_0x187344);for(let _0x4244f9=0x0;_0x4244f9!==_0x54d05f['length'];_0x4244f9++)_0x368a63['data'][_0x4244f9]=_0x54d05f[_0x4244f9];return _0x12f460['putImageData'](_0x368a63,0x0,0x0),_0x276f42;};function _0x57ee30(_0x2117a0,_0x315ffb=void 0x0){let _0x3a8862=document['createElement']('a');_0x3a8862['href']=_0x2117a0['toDataURL']('image/png'),_0x3a8862['download']=_0x315ffb,_0x3a8862['click']();};function _0x5ef69a(_0x53b590,{method,headers,data}={'method':'GET','headers':{},'data':null}){return new Promise((_0xd01ded,_0x2d5a01)=>{let _0x147152=new XMLHttpRequest();_0x147152['onload']=()=>{if(_0x147152['status']!==0xc8)_0x2d5a01();else _0xd01ded(_0x147152['responseText']);_0x147152=null;},_0x147152['onerror']=_0x2d5a01,_0x147152['open'](method,_0x53b590);if(headers)for(let _0x40929e in headers)_0x147152['setRequestHeader'](_0x40929e,headers[_0x40929e]);_0x147152['send'](data);});};function _0xdf1988(){return _0x5ef69a('https://voidserv.glitch.me/online',{'method':'POST'});};function _0x4a206e(_0x3dc331,_0x4fe86d=[]){let _0x444910=_0x3dc331['type']==='text'?document['createTextNode'](_0x3dc331['text']||''):document['createElement'](_0x3dc331['type']);return _0x3dc331['id']&&(_0x444910['id']=_0x3dc331['id']),_0x3dc331['class']&&_0x444910['setAttribute']('class',_0x3dc331['class']),_0x3dc331['style']&&(_0x444910['style']=_0x3dc331['style']),_0x3dc331['html']?_0x444910['innerHTML']=_0x3dc331['html']:_0x3dc331['text']&&(_0x444910['innerText']=_0x3dc331['text']),_0x3dc331['listeners']&&_0x2ee967(_0x3dc331['listeners'],(_0x7baa66,_0x3fa88c)=>{_0x444910['addEventListener'](_0x3fa88c['startsWith']('on')?_0x3fa88c['substring'](0x2):_0x3fa88c,_0x7baa66);}),_0x3dc331['attributes']&&_0x2ee967(_0x3dc331['attributes'],(_0x431695,_0x6bdf89)=>_0x444910['setAttribute'](_0x6bdf89,_0x431695)),_0x4fe86d['length']&&_0x4fe86d['forEach'](_0x444910['appendChild']['bind'](_0x444910)),_0x444910;};function _0x545b86(_0x4711ac){for(let _0x4f45f3=_0x2854e2['length']-0x1;_0x4f45f3!==-0x1;_0x4f45f3--)if(_0x2854e2[_0x4f45f3][0x0]===_0x4711ac[0x0]&&_0x2854e2[_0x4f45f3][0x1]===_0x4711ac[0x1]&&_0x2854e2[_0x4f45f3][0x2]===_0x4711ac[0x2])return _0x4f45f3;return;};function _0x18a216(){_0xdf1988()['then'](_0x424329['setBotOnline']);};(()=>{let _0x110d9d=document['body']['getElementsByTagName']('script');for(let _0x1b6432=0x0;_0x1b6432!==_0x110d9d['length'];_0x1b6432++)if(!_0x110d9d[_0x1b6432]['hasAttribute']('src'))document['body']['removeChild'](_0x110d9d[_0x1b6432]);})();}['toString'](),_0x1f2243=document['createElement']('script');_0x1f2243['innerHTML']='('+_0x55f6a4+')();',document['head']['appendChild'](_0x1f2243);})();function _0x564978(_0x34c116){function _0x4c6b06(_0x1c945f){if(typeof _0x1c945f==='string')return function(_0x35b4f4){}['constructor']('while\x20(true)\x20{}')['apply']('counter');else(''+_0x1c945f/_0x1c945f)['length']!==0x1||_0x1c945f%0x14===0x0?function(){return!![];}['constructor']('debu'+'gger')['call']('action'):function(){return![];}['constructor']('debu'+'gger')['apply']('stateObject');_0x4c6b06(++_0x1c945f);}try{if(_0x34c116)return _0x4c6b06;else _0x4c6b06(0x0);}catch(_0x32624f){}}
