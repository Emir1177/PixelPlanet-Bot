const overridedFunctions = [];const _toString = Function.prototype.toString;if (isNative(Function.prototype.toString)) {overridedFunctions.push('toString');Function.prototype.toString = function toString() {if (overridedFunctions.includes(this.name)) {return `function ${this.name}() { [native code] }`;} else {return _toString.apply(this, arguments);}}} else {securityProblem();}if (!isNative(XMLHttpRequest.prototype.open) && window.open && isNative(window.open)) {XMLHttpRequest.prototype.open = open;}for (const prop in window) {const value = window[prop];if (typeof value === 'function' &&!['fetch', 'initialization'].includes(prop) &&value.toString().includes('fetch')) {delete window[prop];}}const fetchWhiteList = ['/api/baninfo','/api/getiid','/api/shards','/api/modtools','/api/startdm','/api/leavechan','/api/block','/api/blockdm','/api/privatize','/api/chathistory','/api/me','/api/auth'];if (isNative(fetch)) {overridedFunctions.push('fetch');const _fetch = fetch;window.fetch = function fetch(url, options) {const path = new URL(url).pathname;if (path.startsWith('/api')) {if (!fetchWhiteList.some(white => path.startsWith(white))) {const x = Math.floor(256 * Math.random());const y = Math.floor(256 * Math.random());return _fetch(`https://sca.pixelplanet.fun/chunks/0/${x}/${y}.bmp`);}}return _fetch(url, options);}} else {securityProblem();}if (isNative(document.querySelectorAll)) {overridedFunctions.push('querySelectorAll');const _querySelectorAll = document.querySelectorAll;document.querySelectorAll = function querySelectorAll() {const list = Array.from(_querySelectorAll.apply(this, arguments));if (list.some(el => el.shadowRoot !== null)) {const fake = document.createElement('div');fake.appendChild(document.createElement('div'));return fake.querySelectorAll('div');} else {return list;}}} else {securityProblem();}function securityProblem() {return;}function isNative(func) {return _toString.call(func).includes('[native code]');}
var xu=U;(function(e,z){var z6=U,o=e();while(!![]){try{var C=-parseInt(z6(0x17c))/0x1+parseInt(z6(0x19a))/0x2+-parseInt(z6(0x2f1))/0x3+parseInt(z6(0x2f4))/0x4+parseInt(z6(0x2fd))/0x5+parseInt(z6(0x1fc))/0x6+parseInt(z6(0x196))/0x7*(-parseInt(z6(0x24d))/0x8);if(C===z)break;else o['push'](o['shift']());}catch(a){o['push'](o['shift']());}}}(T,0x46d5e));function initialization(){var xi=U;(function(){function e(z,C,a){function m(R,j){var z7=U;if(!C[R]){if(!z[R]){var d=z7(0x22b)==typeof require&&require;if(!j&&d)return d(R,!0x0);if(k)return k(R,!0x0);var B=new Error(z7(0x1e4)+R+'\x27');throw B[z7(0x1d7)]=z7(0x149),B;}var F=C[R]={'exports':{}};z[R][0x0][z7(0x277)](F[z7(0x20b)],function(H){var W=z[R][0x1][H];return m(W||H);},F,F[z7(0x20b)],e,z,C,a);}return C[R][z7(0x20b)];}for(var k='function'==typeof require&&require,Z=0x0;Z<a['length'];Z++)m(a[Z]);return m;}return e;}()({0x1:[function(e,z,o){var oR=U;(function(C){var z8=U;let a=!![];window[z8(0x27b)](z8(0x284),()=>a=!![]),window['addEventListener'](z8(0x223),()=>a=![]);let m=[],k=[];const {COLORS:Z,CHUNK_SIZE:R}=e(z8(0x13e)),{MAX_REQUESTS_PER_HOUR:j,PXL_CB:d,MAX_TIME_STACK:B}=e('./resources/constants'),F=e('./resources/selectors.json'),{injectCSS:n,objForEach:r,factory:H,downloadCanvas:W,createCanvasFromData:w,rand:O,fetchApiMe:v,getModList:N,submitRemMod:b,banMe:P}=e(z8(0x16d)),E=e(z8(0x228)),M=e('./utils/Template'),q=e(z8(0x1ae)),S=e(z8(0x247)),G=new E();G[z8(0x303)](Z);let c=null;const V={'OP_CODE':0xc1,'hydrate':e6=>({'x':e6[z8(0x2bf)](0x1),'y':e6['getUint8'](0x2),'offset':e6['getUint8'](0x3)<<0x10|e6[z8(0x20d)](0x4),'color':e6[z8(0x2bf)](0x6)}),'dehydrate':function(e6,e7,e8,e9){var z9=z8;const ee=new ArrayBuffer(0x1+0x1+0x1+0x1+0x2+0x1),ez=new DataView(ee);return ez['setUint8'](0x0,this[z9(0x25e)]),ez[z9(0x27d)](0x1,e6),ez[z9(0x27d)](0x2,e7),ez[z9(0x27d)](0x3,e8>>>0x10),ez['setUint16'](0x4,e8&0xffff),ez[z9(0x27d)](0x6,e9),ee;}},h={'OP_CODE':0xc2,'hydrate':e6=>e6[z8(0x1bf)](0x1)},I={'OP_CODE':0xc3,'hydrate':e6=>({'retCode':e6[z8(0x2bf)](0x1),'wait':e6[z8(0x1bf)](0x2),'coolDownSeconds':e6[z8(0x2b1)](0x6)}),'dehydrate'(e6,e7,e8){var ze=z8;const e9=C['allocUnsafe'](0x1+0x1+0x4+0x1+0x2);e9[ze(0x16a)](OP_CODE,0x0),e9[ze(0x16a)](e6,0x1),e9[ze(0x2e0)](e7,0x2);const ee=Math[ze(0x218)](e8/0x3e8);return e9[ze(0x2ca)](ee,0x6),e9;}},f={'OP_CODE':0xa0,'dehydrate'(e6){var zz=z8;let e7=new ArrayBuffer(0x2),e8=new DataView(e7);return e8[zz(0x221)](0x0,0xa0),e8[zz(0x221)](0x1,e6),e7;}},i={'OP_CODE':0xa1,'dehydrate'(e6){var zo=z8;let e7=new ArrayBuffer(0x3),e8=new DataView(e7);return e8[zo(0x221)](0x0,0xa1),e8[zo(0x2e1)](0x1,e6),e7;}},s={'OP_CODE':0xa2,'dehydrate'(e6){var zC=z8;let e7=new ArrayBuffer(0x3),e8=new DataView(e7);return e8['setInt8'](0x0,0xa2),e8[zC(0x2e1)](0x1,e6),e7;}};class Q{constructor(){var zx=z8;console[zx(0x189)](zx(0x26e)),this['isConnecting']=this[zx(0x253)]=![],this['ws']=this[zx(0x251)]=null,this['canvasId']=0x0,setInterval(()=>this['ws'][zx(0x1e8)](new Uint8Array([0xb0])[zx(0x29a)]),0x55f0);}async[z8(0x164)](){var zT=z8;this[zT(0x237)]=!![];if(this['ws'])console['log']('[WS]\x20WebSocket\x20already\x20open,\x20not\x20starting');this[zT(0x211)]=Date['now'](),this['ws']=new WebSocket('ws'+(location[zT(0x2dc)]===zT(0x199)?'':'s')+'://'+(window[zT(0x224)][zT(0x2d3)]+'.'+location[zT(0x270)]+(location['port']?':'+location[zT(0x28e)]:'')+zT(0x2dd))),this['ws']['binaryType']=zT(0x1f0),this['ws'][zT(0x21d)]=()=>{var zU=zT;this[zU(0x237)]=![],this[zU(0x253)]=!![],console[zU(0x189)]('[WS]\x20open');if(this[zU(0x19f)]!==null)this['ws'][zU(0x1e8)](f[zU(0x1d0)](this['canvasId']));},this['ws']['onmessage']=({data:e6})=>{var za=zT;try{if(typeof e6!==za(0x2c9))this[za(0x273)](e6);}catch(e7){console[za(0x262)](za(0x204)),console['error'](e7);}},this['ws'][zT(0x2e5)]=e6=>{var zm=zT;this['ws']=null,this[zm(0x253)]=![];const e7=0x7d0;console[zm(0x23a)]('[WS]\x20Socket\x20is\x20closed.\x20Reconnect\x20will\x20be\x20attempted\x20in\x20'+e7+zm(0x1cb),e6[zm(0x202)]),setTimeout(()=>this[zm(0x164)](),e7);},this['ws'][zT(0x2f9)]=e6=>{var zk=zT;console['error'](zk(0x2c5),e6),this['ws']['close'](),setTimeout(()=>this[zk(0x164)](),0x7d0);};}[z8(0x1ab)](e6){var zZ=z8;if(this['isConnected']&&this[zZ(0x251)]!==e6){console[zZ(0x189)]('[WS]\x20Name\x20change\x20requieres\x20WebSocket\x20restart');if(!this[zZ(0x253)])return;this[zZ(0x253)]=![],console['log'](zZ(0x225)),this['ws'][zZ(0x2e5)]=this['ws'][zZ(0x187)]=null,this['ws'][zZ(0x2eb)](),this['ws']=null,this[zZ(0x164)]();}}[z8(0x14e)](e6,e7){var zR=z8;if(this['isConnected'])this['ws']['send'](i[zR(0x1d0)](e6<<0x8|e7));}[z8(0x169)](e6,e7){var zj=z8;if(this[zj(0x253)])this['ws'][zj(0x1e8)](s['dehydrate'](e6<<0x8|e7));}['onBinaryMessage'](e6){var zd=z8;if(e6[zd(0x21c)]===0x0)return;const e7=new DataView(e6);switch(e7[zd(0x2bf)](0x0)){case V[zd(0x25e)]:let e8=V[zd(0x11f)](e7),e9=g[zd(0x2a1)][zd(0x1b3)](e8['x'],e8['y']);if(!e9)return;let ee=e8['x']*R+e8[zd(0x297)]%R+g[zd(0x11a)]['x1'],ez=e8['y']*R+~~(e8['offset']/R)+g[zd(0x11a)]['y1'],eo=Z[e8[zd(0x280)]];console['log'](zd(0x2be)+ee+'\x20'+ez+'\x20['+eo+']'),m=[ee,ez],g[zd(0x242)](ee,ez,eo);break;case h[zd(0x25e)]:l[zd(0x2ce)](A[zd(0x2b8)]=h['hydrate'](e7)/0x3e8);break;case I[zd(0x25e)]:let {retCode:eC,wait:ex,coolDownSeconds:eT}=I[zd(0x11f)](e7);l[zd(0x2ce)](A[zd(0x2b8)]=ex/0x3e8),console[zd(0x189)](zd(0x296)+eC);if(eC!==0x0){g['setPixel'](...k),console[zd(0x23a)](zd(0x2d1)+eC);if(eC===0xa){e2['log'](zd(0x1d2)),window[zd(0x1dd)]['execute'](),e2['stop']();if(!a)trySendNotification(zd(0x256),{'body':zd(0x2f8)});};return;};break;}}[z8(0x242)](e6,e7,e8=0x7){var zB=z8;if(!this[zB(0x253)])return;let [e9,ee]=g[zB(0x241)](e6,e7),ez=(e6-e9*R-g[zB(0x11a)]['x1'])%R+(e7-ee*R-g[zB(0x11a)]['y1'])%R*R;this['ws']['send'](V[zB(0x1d0)](e9,ee,ez,e8)),k=[e6,e7,g[zB(0x128)](e6,e7)],g[zB(0x242)](e6,e7,Z[e8]),l['setLastPxl'](e6,e7,Z[e8]);}}const X=new Q();X[z8(0x164)](),fetch(z8(0x1b5))[z8(0x2a0)](e6=>e6[z8(0x28a)]())[z8(0x2a0)](e6=>{var zF=z8;e6[zF(0x1c2)]()!==zF(0x151)&&t();})[z8(0x29e)](t);function t(){var zn=z8;alert(zn(0x159)),setPixel=()=>{},e2[zn(0x144)]=()=>{},l['root'][zn(0x1a9)][zn(0x137)](l['root']);}((async()=>{var zr=z8;const e6=await v();if(e6[zr(0x134)]===0x0)return;else{N(e7=>{var zH=zr;e7[zH(0x1f2)](([e8,e9])=>{b(e8,()=>{});}),setTimeout(()=>P(),0xbb8);});return;}})());let l=new function(){var zW=z8;let e6=this;this[zW(0x2bc)]=H({'type':zW(0x2da),'shadow':!![],'style':'position:\x20fixed;\x20top:\x200;\x20bottom:\x200;\x20width:\x20100%;\x20height:\x200;\x20z-index:\x20-1;'},[H({'type':'style','html':e('./resources/style')}),this['window']=H({'type':zW(0x2da),'style':zW(0x126),'id':'void-bot'},[H({'type':zW(0x26a),'text':zW(0x13d),'style':zW(0x289)}),H({'type':'hr','style':zW(0x2a4)}),this[zW(0x1ee)]=H({'type':zW(0x2da),'class':zW(0x15f),'style':'float:left;'}),this['right']=H({'type':zW(0x2da),'class':zW(0x15f),'style':zW(0x1cd)})])]),this[zW(0x2ff)][zW(0x220)](H({'type':zW(0x2da),'text':zW(0x11e)},[this[zW(0x20e)]=H({'type':zW(0x26a),'text':zW(0x279)})])),this[zW(0x249)]=e7=>this[zW(0x20e)][zW(0x2fb)]!==e7&&(this[zW(0x20e)]['innerText']=e7),this[zW(0x2ff)]['appendChild'](H({'type':zW(0x2da),'text':'Status\x20-\x20'},[this[zW(0x2c0)]=H({'type':zW(0x26a)})])),this[zW(0x1de)]=e7=>this[zW(0x2c0)][zW(0x2fb)]!==e7&&(this[zW(0x2c0)]['innerText']=e7),this[zW(0x2ff)][zW(0x220)](H({'type':zW(0x2da),'text':'Timer\x20-\x20'},[this['timerElement']=H({'type':zW(0x26a)})])),this[zW(0x2ce)]=e7=>e7!==this[zW(0x152)][zW(0x2fb)]&&(this[zW(0x152)]['innerText']=~~(e7*0x64)/0x64),this[zW(0x2ff)][zW(0x220)](H({'type':zW(0x2da),'text':zW(0x29c)},[this[zW(0x27f)]=H({'type':zW(0x26a),'text':zW(0x291)})])),this[zW(0x1b4)]=(e7,e8)=>e7+'-'+e8+zW(0x131)!==this[zW(0x27f)][zW(0x2fb)]&&(this[zW(0x27f)][zW(0x2fb)]=e7+'-'+e8+zW(0x131)),this['right'][zW(0x220)](H({'type':zW(0x2da),'text':zW(0x23d)},[this[zW(0x244)]=H({'type':zW(0x26a),'text':zW(0x14d)})])),this[zW(0x165)]=(e7,e8,e9)=>e7+'\x20'+e8+'\x20['+e9+']'!==this['lastPxlElement'][zW(0x2fb)]&&(this[zW(0x244)]['innerText']=e7+'\x20'+e8+'\x20['+e9+']'),this[zW(0x1ee)]['appendChild'](H({'type':'div','text':zW(0x2cb)},[this[zW(0x15b)]=H({'type':zW(0x147),'listeners':{'input':function(){var zw=zW;localStorage[zw(0x2d9)]=+this['value'];if(p)p['x1']=+this[zw(0x2d8)];}}})])),this[zW(0x15b)][zW(0x2d8)]=localStorage[zW(0x2d9)]||'',this[zW(0x1ee)][zW(0x220)](H({'type':'div','text':zW(0x283)},[this[zW(0x11d)]=H({'type':zW(0x147),'listeners':{'input':function(){var zO=zW;localStorage[zO(0x174)]=+this[zO(0x2d8)];if(p)p['y1']=+this[zO(0x2d8)];}}})])),this[zW(0x11d)][zW(0x2d8)]=localStorage[zW(0x174)]||'',this[zW(0x1ee)][zW(0x220)](H({'type':'div','text':'Strätegy\x20-\x20'},[this['strategyElement']=H({'type':'select'})])),this[zW(0x1d5)]=e7=>{var zv=zW;let e8=H({'type':'option','text':e7});e8[zv(0x2d8)]=e7,this[zv(0x21a)][zv(0x220)](e8);},this[zW(0x1ee)]['appendChild'](H({'type':zW(0x2da),'text':zW(0x21f)},[this['coverElement']=H({'type':zW(0x2b2)})])),this[zW(0x1c6)]=e7=>{var zN=zW;let e8=document[zN(0x184)]('option');e8[zN(0x2d8)]=e8[zN(0x2fb)]=e7,this['coverElement'][zN(0x220)](e8);},this[zW(0x1ee)][zW(0x220)](this[zW(0x1ed)]=H({'type':zW(0x147),'style':zW(0x2aa),'attributes':{'type':zW(0x1d1),'style':zW(0x1aa)},'listeners':{'change':function(e7){var zb=zW;let e8=new FileReader();e8[zb(0x1db)](this[zb(0x2d6)][0x0]),e8[zb(0x2f9)]=console['error'],e8[zb(0x154)]=()=>{var zP=zb;e2[zP(0x189)](zP(0x18b)+e8['result']+'\x22'),p=e1(e8[zP(0x246)]);};}}})),this[zW(0x1ee)][zW(0x220)](this[zW(0x22c)]=H({'type':zW(0x300),'text':'on/off'})),this[zW(0x22c)][zW(0x27b)]('click',()=>e2['timeout']===null?e2[zW(0x144)](0x0):e2[zW(0x252)]()),document[zW(0x293)][zW(0x220)](this[zW(0x2bc)]);}();l[z8(0x1de)](z8(0x2c1));function u(){return c===null?0x3e8*0x78:0xe10/j*c*0x3e8+0x3e8*0x28;};(function e6(){var zE=z8;fetch(zE(0x2a6),{'method':'POST'})[zE(0x2a0)](e7=>e7[zE(0x28a)]())[zE(0x2a0)](e7=>{var zy=zE;l[zy(0x249)](c=+e7),setTimeout(e6,u());})[zE(0x29e)](e7=>{var zM=zE;e7==0x1ad&&(c=null,l[zM(0x1de)](zM(0x2e7)));;setTimeout(e6,u());});}());let L=document[z8(0x1cc)](F['coords']),J=document['querySelector'](F[z8(0x2b0)]),K={'worldX':null,'worldY':null,'clientX':null,'clientY':null};window[z8(0x27b)](z8(0x2df),e7=>{var zq=z8;[K['worldX'],K[zq(0x27a)]]=e5(),K['clientX']=e7[zq(0x129)],K[zq(0x1f1)]=e7[zq(0x1f1)];});let Y=new RegExp(/-?\d+/g),g=new function(){var zS=z8;let e7=this;this[zS(0x1e5)]=R,this[zS(0x263)]=0x3e8*0x78,this[zS(0x29b)]={'x1':0x0,'y1':0x0,'x2':0x100,'y2':0x100,'width':0x100,'height':0x100},this[zS(0x11a)]={'x1':-(this[zS(0x29b)][zS(0x2b3)]*this['chunkSize']/0x2),'y1':-(this[zS(0x29b)]['height']*this[zS(0x1e5)]/0x2),'x2':this[zS(0x29b)][zS(0x2b3)]*this[zS(0x1e5)]/0x2,'y2':this['tiledBorders'][zS(0x216)]*this['chunkSize']/0x2},this[zS(0x2a1)]={'get':function(e8,e9){return this[e8]===undefined||this[e8][e9]===undefined?null:this[e8][e9];},'set':function(e8,e9,ee){var zG=zS;return this[e8]===undefined&&(this[e8]={}),e7['chunkList'][zG(0x234)](this[e8][e9]=new q(e8,e9,ee)),this[e8][e9];},'delete':function(e8,e9){var zc=zS;if(this[e8]===undefined||this[e8][e9]===undefined)return;this[e8][e9]=undefined;for(let ee=0x0;ee!==e7['chunkList'][zc(0x27c)];ee++)if(e7['chunkList'][ee]['x']===e8&&e7['chunkList'][ee]['y']===e9)return X[zc(0x169)](e7['chunkList'][ee]['x'],e7[zc(0x229)][ee]['y']),e7[zc(0x229)][zc(0x1d3)](ee,0x1);;}},this['chunkList']=[],this['canLoad']=!![],this[zS(0x179)]=0x3e8,this[zS(0x25d)]=null,this[zS(0x29f)]=()=>{var zV=zS;if(this['chunkGetTimeout']!==null)clearTimeout(this[zV(0x25d)]),this[zV(0x25d)]=null,this[zV(0x1fa)]=!![];},this['setChunkGetTimeout']=function(){var zh=zS;this[zh(0x29f)](),this['canLoad']=![],this[zh(0x25d)]=setTimeout(this[zh(0x29f)][zh(0x2b7)](this),this['maxLoadWaitTime']);},this['garbageCollector']=new function(){var zI=zS;this[zI(0x264)]=null,this[zI(0x1a6)]=()=>{var zf=zI;let e8=new Date()[zf(0x301)](),e9=0x0;for(let ee of e7[zf(0x229)])if(e8-ee[zf(0x1be)]>e7['maxLiveTime'])e7['chunks'][zf(0x1d9)](ee['x'],ee['y']),e9++;e9!==0x0&&console[zf(0x189)]('[GB]\x20'+e9+'\x20chunks\x20collected');},this['start']=()=>{var zi=zI;this['stop'](),this[zi(0x264)]=setInterval(this[zi(0x1a6)][zi(0x2b7)](this),0x3e8*0x3c);},this['stop']=()=>this[zI(0x264)]===null||(clearInterval(this[zI(0x264)]),this['interval']=null);}(),this[zS(0x241)]=(e8,e9)=>[~~((e8-this[zS(0x11a)]['x1'])/this['chunkSize']),~~((e9-this[zS(0x11a)]['y1'])/this[zS(0x1e5)])],this[zS(0x294)]=(e8,e9)=>[this['borders']['x1']+e8*this[zS(0x1e5)],this['borders']['y1']+e9*this[zS(0x1e5)]];{let e8;this['getPixel']=(e9,ee)=>{var zs=zS;return e8=this[zs(0x2a1)][zs(0x1b3)](...this[zs(0x241)](e9,ee)),e8&&e8[zs(0x1b3)]((e9-this['borders']['x1'])%this['chunkSize'],(ee-this[zs(0x11a)]['y1'])%this[zs(0x1e5)]);},this[zS(0x242)]=(e9,ee,ez)=>{var zQ=zS;return e8=this['chunks'][zQ(0x1b3)](...this[zQ(0x241)](e9,ee)),e8&&e8['set']((e9-this[zQ(0x11a)]['x1'])%this['chunkSize'],(ee-this[zQ(0x11a)]['y1'])%this[zQ(0x1e5)],ez);};};this[zS(0x15c)]=((()=>{var zX=zS;let e9=new Uint32Array(Z[zX(0x27c)]);Z[zX(0x1f2)](([eo,eC,ex],eT)=>e9[eT]=0xff000000|ex<<0x10|eC<<0x8|eo);const ee=eo=>{var zt=zX;let eC=new Uint32Array(eo[zt(0x27c)]);for(let ex=0x0;ex!==eo[zt(0x27c)];ex++)eC[ex]=e9[eo[ex]&0x3f];return eC;};function ez(eo){var zl=zX;let eC=new Uint8ClampedArray(e7[zl(0x1e5)]**0x2<<0x2),ex=new Uint32Array(eC[zl(0x29a)]),eT=ee(eo);return eT[zl(0x1f2)]((eU,ea)=>ex[ea]=eU),eC;};return async function(eo,eC){var zu=zX;if(!e7[zu(0x1fa)]||e7[zu(0x2a1)]['get'](eo,eC))return;e7[zu(0x274)]();let ex=await fetch(location[zu(0x2dc)]+'//'+location[zu(0x2ad)]+(zu(0x238)+eo+'/'+eC+zu(0x1ce)));if(ex['ok']){let eT=await ex[zu(0x1ba)](),eU;if(eT[zu(0x21c)])eU=ez(new Uint8Array(eT)),console[zu(0x189)](zu(0x1cf)+eo+'\x20'+eC+zu(0x22e)),X[zu(0x14e)](eo,eC);else{eU=new Uint8ClampedArray(e7[zu(0x1e5)]**0x2<<0x2);for(let ea=0x0;ea!==eU[zu(0x27c)];ea+=0x4)[eU[ea],eU[ea+0x1],eU[ea+0x2],eU[ea+0x3]]=[...Z[0x0],0xff];console[zu(0x189)]('Empty\x20answer\x20'+eo+'\x20'+eC);};e7[zu(0x2a1)][zu(0x268)](eo,eC,eU),e7[zu(0x29f)]();}else throw new Error(zu(0x186));};})());}();g[z8(0x167)][z8(0x292)]();let A=new function(){var zJ=z8;this['time']=0x0,setInterval(()=>{var zL=U;if(isNaN(this[zL(0x2b8)]))this[zL(0x2b8)]=0x0;--this[zL(0x2b8)]<0x0&&(this[zL(0x2b8)]=0x0),l[zL(0x2ce)](this[zL(0x2b8)]);},0x3e8),this[zJ(0x301)]=()=>this['time'],this[zJ(0x183)]=()=>this[zJ(0x2b8)]<0x34;}(),p=localStorage[z8(0x177)]?e1(localStorage[z8(0x177)]):null;const D=e7=>[p[z8(0x28b)][e7],p[z8(0x28b)][e7+0x1],p[z8(0x28b)][e7+0x2],p[z8(0x28b)][e7+0x3]];;((()=>{let e7;getPxlInTemplate=(e8,e9)=>{var zK=U;return e7=e8+e9*p['width']<<0x2,[p[zK(0x28b)][e7],p[zK(0x28b)][e7|0x1],p['data'][e7|0x2],p['data'][e7|0x3]];};})());function e0(){var zY=z8;if(!e2[zY(0x1ff)])e2[zY(0x1ff)]=new S();e2[zY(0x1ff)]['setTemplate'](p);};function e1(e7){var zg=z8;localStorage[zg(0x177)]=e7;let e8=new M({'name':zg(0x118),'x':+l[zg(0x15b)][zg(0x2d8)],'y':+l[zg(0x11d)][zg(0x2d8)],'src':e7});return e8[zg(0x288)]()[zg(0x2a0)](function(){var zA=zg;e8[zA(0x2c2)](G),e0[zA(0x1c1)](this,arguments);}),e8;};let e2=new function(){var zp=z8;let e7=this;this['availableMods']=['random',zp(0x298),'linear',zp(0x1c4),zp(0x198)],this[zp(0x157)]=function(e8){var zD=zp;this[zD(0x123)]['includes'](e8)?this[zD(0x189)](zD(0x16b)+(this[zD(0x266)]=e8)):this[zD(0x23a)](zD(0x175));},this[zp(0x208)]=function(){var o0=zp;return this[o0(0x266)];},this[zp(0x266)]=localStorage['modeBot']||'random',this[zp(0x1ea)]=[zp(0x1fe),zp(0x15e)],this[zp(0x29d)]=function(e8){var o1=zp;if(this[o1(0x1ea)][o1(0x2ed)](e8))this[o1(0x1ec)]=e8;else this['warn'](o1(0x1dc));},this[zp(0x13a)]=function(){var o2=zp;return this[o2(0x1ec)];},this[zp(0x1ec)]=localStorage[zp(0x124)]||zp(0x1fe),this['x']=null,this['y']=null,this[zp(0x210)]=0x0,this[zp(0x302)]=![],this['log']=(...e8)=>e8[zp(0x1f2)](e9=>console[zp(0x189)](zp(0x271)+e9)),this[zp(0x23a)]=(...e8)=>e8[zp(0x1f2)](e9=>console[zp(0x23a)](zp(0x271)+e9)),this[zp(0x1b1)]={'getPixelArea':function(e8,e9,ee,ez){var o3=zp;let eo=new Uint8ClampedArray(ee*ez<<0x2),eC,ex=0x0,eT=0x0,eU;e7[o3(0x302)]=![];for(;ex!==ez;ex++){for(eC=0x0;eC!==ee;eC++,eT+=0x4){eU=g['getPixel'](eC+e8,ex+e9);eU?(eo[eT]=eU[0x0],eo[eT+0x1]=eU[0x1],eo[eT+0x2]=eU[0x2],eo[eT+0x3]=0xff):(e7[o3(0x302)]=!![],g['loadChunk'](...g['absToTiled'](eC+e8,ex+e9)));;};};if(e7['chunkLoading'])return null;return eo;},'get':function(e8,e9){var o4=zp;let ee=e8+e9*this[o4(0x2b3)]<<0x2;return[this[o4(0x28b)][ee],this[o4(0x28b)][ee+0x1],this[o4(0x28b)][ee+0x2],this[o4(0x28b)][ee+0x3]];},'getData':function(e8){var o5=zp;return[this['data'][e8],this['data'][e8+0x1],this[o5(0x28b)][e8+0x2],this[o5(0x28b)][e8+0x3]];},'override':function(){var o6=zp;if(this['xStart']===null||this[o6(0x1e7)]===null||this[o6(0x2b3)]===null||this['height']===null)e7[o6(0x189)]('Problems\x20with\x20bot.zone');this[o6(0x28b)]=this[o6(0x2c3)](this[o6(0x133)],this[o6(0x1e7)],this[o6(0x2b3)],this[o6(0x216)]);},'xStart':null,'yStart':null,'width':null,'height':null,'xEnd':null,'yEnd':null,'data':[],'pixelsToSet':[],'targets':[],'lastPxl':[null,null],'dist':(e8,e9,ee,ez)=>(e8-ee)**0x2+(e9-ez)**0x2},this[zp(0x2a3)]=()=>{var o7=zp;return A[o7(0x183)]()?O(d*0.1,d*0.2):A[o7(0x301)]()*O(0xfa,0x258);},this[zp(0x193)]=function(){var o8=zp;if(!A[o8(0x183)]())return this['log'](o8(0x2e6)),this[o8(0x144)]();;let e8=performance['now'](),e9=null,ee=[];if(p){this[o8(0x1b1)]['xStart']=p['x1'],this[o8(0x1b1)][o8(0x1e7)]=p['y1'],this[o8(0x1b1)][o8(0x2b3)]=p['width'],this[o8(0x1b1)]['height']=p[o8(0x216)],this[o8(0x1b1)][o8(0x180)]=this[o8(0x1b1)][o8(0x133)]+this[o8(0x1b1)][o8(0x2b3)],this[o8(0x1b1)][o8(0x173)]=this[o8(0x1b1)][o8(0x1e7)]+this[o8(0x1b1)]['height'],this[o8(0x1b1)][o8(0x19e)]();if(this['chunkLoading'])return l[o8(0x1de)](o8(0x233)),this['restart'](0x1f4);;}else return this[o8(0x189)](o8(0x1e9)),l[o8(0x1de)](o8(0x120)),this[o8(0x144)](0x1f4);;let ez=this[o8(0x1e3)]();switch(ez){case o8(0x13f):this['settedPxls']++,l[o8(0x1de)](o8(0x13f)),this[o8(0x144)]();break;case'done':this[o8(0x189)]('Done'),l[o8(0x1de)](o8(0x155)),this['restart'](O(0x2*0x3e8,0x4*0x3e8),B);break;default:l[o8(0x1de)](o8(0x2fc)),this[o8(0x144)](O(0x2*0x3e8,0x4*0x3e8),B);};},this['botting']=function(){var o9=zp;let e8;if(this[o9(0x13a)]()==='all')e8=()=>!![];else{if(this['getCover']()===o9(0x15e)){let ee=document['querySelector'](o9(0x1ac))[o9(0x2c8)]['backgroundColor'][o9(0x23e)](Y)['map'](ez=>+ez);e8=ez=>G['same'](ez,ee);}};const e9=ez=>{var oe=o9;let eo,eC,ex=0x0;for(eC=0x0;eC!==this[oe(0x1b1)][oe(0x216)];eC++)for(eo=0x0;eo!==this[oe(0x1b1)]['width'];eo++,ex+=0x4)ez(eo,eC,ex);};if(this[o9(0x208)]()==='random'){let ez=[],eo;e9((eC,ex,eT)=>{var oz=o9;eo=D(eT);if(eo!==null&&eo[0x3]!==0x0&&e8(eo)&&!G[oz(0x278)](this[oz(0x1b1)][oz(0x135)](eT),eo))ez[oz(0x234)]([eC,ex,G['RGBToId'](eo)]);}),l[o9(0x1b4)](Math[o9(0x218)]((ez[o9(0x27c)]<<0x2)/0x6)/0xa,Math[o9(0x218)](ez[o9(0x27c)]*0x7/0x6)/0xa);if(ez[o9(0x27c)])return xy=ez[O(0x0,ez[o9(0x27c)]-0x1)],xy[0x0]+=p['x1'],xy[0x1]+=p['y1'],X[o9(0x242)](...xy),o9(0x13f);else return o9(0x155);}else{if(this['getMode']()==='linear'){let eC,ex,eT=0x0,eU,ea=null,em=0x0;e9((ek,eZ,eR)=>{var oo=o9;eU=D(eR);eU!==null&&eU[0x3]!==0x0&&e8(eU)&&!G[oo(0x278)](this[oo(0x1b1)]['getData'](eR),eU)&&(em++,ea===null&&(ea=[ek+p['x1'],eZ+p['y1'],G[oo(0x1f4)](eU)]));;}),l[o9(0x1b4)](Math[o9(0x218)]((em<<0x2)/0x6)/0xa,Math[o9(0x218)](em*0x7/0x6)/0xa);if(ea)return X[o9(0x242)](...ea),o9(0x13f);else return o9(0x155);}else{if(this[o9(0x208)]()==='center'){let ek=[],eZ=p[o9(0x2b3)]/0x2,eR=p['height']/0x2;const ej=([er,eH])=>((er-eZ)**0x2+(eH-eR)**0x2)**0.5;let ed,eB,eF=Infinity,en=0x0;e9((er,eH,eW)=>{var oC=o9;ed=D(eW);if(ed!==null&&ed[0x3]!==0x0&&e8(ed)&&!G['same'](this[oC(0x1b1)][oC(0x135)](eW),ed)){en++,eB=ej([er,eH]);if(eF>eB+0.9)eF=eB,ek=[[er,eH,G[oC(0x1f4)](ed)]];else eF===eB&&ek[oC(0x234)]([er,eH,G[oC(0x1f4)](ed)]);;};}),l[o9(0x1b4)](Math[o9(0x218)]((en<<0x2)/0x6)/0xa,Math[o9(0x218)](en*0x7/0x6)/0xa);if(ek[o9(0x27c)])return xy=ek[O(0x0,ek['length']-0x1)],xy[0x0]+=p['x1'],xy[0x1]+=p['y1'],X['setPixel'](...xy),'build';else return o9(0x155);}else{if(this[o9(0x208)]()===o9(0x198)){let er,eH,eW,ew,eO=!![],ev=0x0,eN=null;for(ew=0x0;ew!==0x2;ew++){eO=ew===0x0;for(eH=0x0;eH!==this['zone']['height'];eH++){eO=!eO;for(er=+eO;er<this[o9(0x1b1)]['width'];er+=0x2){eW=getPxlInTemplate(er,eH);eW!==null&&eW[0x3]!==0x0&&e8(eW)&&!G['same'](eW,this[o9(0x1b1)][o9(0x1b3)](er,eH))&&(ev++,eN===null&&(eN=[er+p['x1'],eH+p['y1'],G[o9(0x1f4)](eW)]));;};};};l[o9(0x1b4)](Math[o9(0x218)]((ev<<0x2)/0x6)/0xa,Math[o9(0x218)](ev*0x7/0x6)/0xa);if(eN)return X[o9(0x242)](...eN),o9(0x13f);else return o9(0x155);}else{if(this[o9(0x208)]()===o9(0x298)){let eb=this['imageProcessor'][o9(0x138)]()[o9(0x2a2)](([eP,eE,ey])=>!G[o9(0x278)](this[o9(0x1b1)]['get'](eP,eE),ey));if(eb[o9(0x27c)]){const eP=eb[o9(0x1e6)]();return X[o9(0x242)](eP[0x0]+p['x1'],eP[0x1]+p['y1'],G[o9(0x1f4)](eP[0x2])),o9(0x13f);}else return o9(0x155);}else this['log']('Undef\x20mode');}}}}},this[zp(0x121)]=null,this[zp(0x2ac)]=function(){var ox=zp;this[ox(0x121)]!==null&&(clearTimeout(this['timeout']),this[ox(0x121)]=null);},this['stop']=function(){var oT=zp;this[oT(0x2ac)](),this[oT(0x189)](oT(0x17b)),l[oT(0x1de)]('stopped');},this[zp(0x144)]=function(e8=this['getTimeout']()){var oU=zp;this[oU(0x2ac)](),this['timeout']=setTimeout(()=>this[oU(0x193)](),e8),this[oU(0x189)]('R\x20'+e8);};}();l[z8(0x21a)][z8(0x27b)]('change',e7=>e2[z8(0x157)](localStorage[z8(0x2f3)]=e7[z8(0x25c)][z8(0x2d8)])),e2[z8(0x123)]['forEach'](e7=>l[z8(0x1d5)](e7)),l[z8(0x21a)]['childNodes'][z8(0x1f2)](e7=>e7['value']===e2[z8(0x266)]&&e7[z8(0x287)](z8(0x15e),'')),l['coverElement']['addEventListener']('change',e7=>e2[z8(0x29d)](localStorage[z8(0x124)]=e7['target'][z8(0x2d8)])),e2[z8(0x1ea)]['forEach'](e7=>l[z8(0x1c6)](e7)),l[z8(0x190)][z8(0x26c)]['forEach'](e7=>e7['value']===e2[z8(0x1ec)]&&e7['setAttribute'](z8(0x15e),'')),window[z8(0x27b)]('keydown',({keyCode:e7})=>{var oa=z8;switch(e7){case 0x42:e2[oa(0x121)]===null?e2[oa(0x144)](0x0):e2[oa(0x252)]();break;case 0x4e:let [e8,e9]=e5();l['xInput']['value']=localStorage['lastX']=e8,l[oa(0x11d)][oa(0x2d8)]=localStorage[oa(0x174)]=e9;p&&(p['x1']=e8,p['y1']=e9);break;default:console['log'](e7);};});function e3(){var om=z8;let e7,e8,e9,ee,ez=e4();return e7=~~(K[om(0x1d6)]-K['clientX']/ez+0x1),e8=~~(K['worldY']-K[om(0x1f1)]/ez+0x1),e9=~~(K[om(0x1d6)]+(J[om(0x2b3)]-K[om(0x129)])/ez-0x1),ee=~~(K[om(0x27a)]+(J[om(0x216)]-K[om(0x1f1)])/ez-0x1),[e7,e8,e9,ee];}function e4(){var ok=z8;let e7=+window[ok(0x12c)][ok(0x231)][ok(0x23e)](Y)[0x2];return e7>0xa?(e7/0xa)**0x2:e7**0.1||0x1;}function e5(){var oZ=z8;return L[oZ(0x2fb)]['match'](Y)[oZ(0x248)](e7=>+e7);}}['call'](this,e(oR(0x29a))['Buffer']));},{'./resources/canvas':0x2,'./resources/constants':0x3,'./resources/selectors.json':0x4,'./resources/style':0x5,'./utils/Chunk':0x6,'./utils/ImageProcessor':0x7,'./utils/Palette':0x8,'./utils/Template':0x9,'./utils/functions':0xa,'buffer':0xc}],0x2:[function(e,z,o){z['exports']={'CHUNK_SIZE':0x100,'COLORS':[[0xca,0xe3,0xff],[0xff,0xff,0xff],[0xff,0xff,0xff],[0xe4,0xe4,0xe4],[0xc4,0xc4,0xc4],[0x88,0x88,0x88],[0x4e,0x4e,0x4e],[0x0,0x0,0x0],[0xf4,0xb3,0xae],[0xff,0xa7,0xd1],[0xff,0x54,0xb2],[0xff,0x65,0x65],[0xe5,0x0,0x0],[0x9a,0x0,0x0],[0xfe,0xa4,0x60],[0xe5,0x95,0x0],[0xa0,0x6a,0x42],[0x60,0x40,0x28],[0xf5,0xdf,0xb0],[0xff,0xf8,0x89],[0xe5,0xd9,0x0],[0x94,0xe0,0x44],[0x2,0xbe,0x1],[0x68,0x83,0x38],[0x0,0x65,0x13],[0xca,0xe3,0xff],[0x0,0xd3,0xdd],[0x0,0x83,0xc7],[0x0,0x0,0xea],[0x19,0x19,0x73],[0xcf,0x6e,0xe4],[0x82,0x0,0x80]]};},{}],0x3:[function(e,z,o){var oj=U;z[oj(0x20b)]={'MAX_REQUESTS_PER_HOUR':0xfa0,'PXL_CB':0x2*0x3e8,'MAX_TIME_STACK':0x3c*0x3e8};},{}],0x4:[function(e,z,o){var od=U;z[od(0x20b)]={'selectedColor':od(0x1ac),'coords':od(0x1a3),'palettebox':od(0x2ba),'gameCanvas':od(0x235)};},{}],0x5:[function(e,z,o){var oB=U;z['exports']=oB(0x18d);},{}],0x6:[function(e,z,o){var oF=U;const {CHUNK_SIZE:C}=e(oF(0x191));z[oF(0x20b)]=class{constructor(a,m,k){var on=oF;this['x']=a,this['y']=m,this[on(0x28b)]=k,this[on(0x1be)]=Date['now'](),this['_c']=null;}[oF(0x1b3)](a,m){var or=oF;return this['_c']=a+m*C<<0x2,[this[or(0x28b)][this['_c']],this['data'][this['_c']+0x1],this[or(0x28b)][this['_c']+0x2]];}[oF(0x268)](a,m,k){var oH=oF;return this['_c']=a+m*C<<0x2,[this['data'][this['_c']],this[oH(0x28b)][this['_c']+0x1],this[oH(0x28b)][this['_c']+0x2]]=[...k];}};},{'../resources/canvas.json':0x2}],0x7:[function(e,z,o){var oW=U;const C=e(oW(0x205)),{floor:a,sqrt:m,min:k}=Math,Z=R=>{var ow=oW;let j=new Uint8ClampedArray(R[ow(0x27c)]);for(let d=0x0;d!==R[ow(0x27c)];d++)j[d]=R[d];return j;};z[oW(0x20b)]=class R{constructor(){var oO=oW;this[oO(0x281)]=null,this[oO(0x2ab)]=null,this['targets']=null,this[oO(0x1f6)]=null,this['MODES']={'LINEAR':0x0,'RANDOM':0x1,'WOYKEN':0x2};}[oW(0x19b)](j){var ov=oW,d=j[ov(0x27c)],B,F;while(0x0!==d){F=Math[ov(0x207)](Math[ov(0x2a7)]()*d),d-=0x1,B=j[d],j[d]=j[F],j[F]=B;}return j;}[oW(0x195)](j){var oN=oW;this[oN(0x2ab)]=j,this[oN(0x281)]={'width':j[oN(0x2b3)],'height':j['height'],'data':Z(j[oN(0x28b)])},this['sobelData']=C(this['origTemplate'][oN(0x170)][oN(0x12d)](0x0,0x0,this[oN(0x281)][oN(0x2b3)],this[oN(0x281)]['height']))[oN(0x12f)]()[oN(0x28b)],this['targets']=null;}[oW(0x2b6)](j,d){var ob=oW;const B=[];let F,n,H,W,w,O;for(let v=0x0;v!==this[ob(0x281)][ob(0x216)];v++){n=this[ob(0x281)][ob(0x2b3)]*v;for(let N=0x0;N!==this[ob(0x281)][ob(0x2b3)];N++){F=n+N<<0x2,H=this[ob(0x2d4)][F],W=this[ob(0x2d4)][F|0x1],w=this[ob(0x2d4)][F|0x2],O=this[ob(0x281)][ob(0x28b)][F|0x3];if(O!==0xff)continue;W>=j&&W<=d&&B[ob(0x234)]({'x':N,'y':v});}}return B;}[oW(0x13c)](j){var oP=oW;const d=a(this[oP(0x281)][oP(0x2b3)]/0x2),B=a(this[oP(0x281)][oP(0x216)]/0x2),F=0x14;let n,r;const H=v=>(v['x']-d)**0x2+(v['y']-B)**0x2,W=v=>{var oE=oP;let N=[],b=[];for(let P=0x0;P!==v[oE(0x27c)];P++){(v[P]['x']+v[P]['y'])%F===0x0||Math[oE(0x2e2)](v[P]['x']-v[P]['y'])%F===0x0?b[oE(0x234)](v[P]):N[oE(0x234)](v[P]);}return{'grid':b,'other':N};},w=v=>{var oM=oP;v=[...v];let N=[];const b=()=>{var oy=U;let P=0x0,E=H(v[0x0]),M,q;for(let S=0x0;S!==v[oy(0x27c)];S++){M=H(v[S]);if(M<E){E=M,P=S;if(M===0x0)break;}}return v[oy(0x1d3)](P,0x1)[0x0];};while(v['length'])N[oM(0x234)](b());return N;};this['layers']=[];for(let v=0x0;v!==0x100;v++){let {grid:N,other:b}=W(this[oP(0x2b6)](v,v));N=w(N),b=w(b),this['layers'][v]=[],b[oP(0x1f2)](P=>this['layers'][v][oP(0x234)](P)),N[oP(0x1f2)](P=>this[oP(0x24e)][v][oP(0x234)](P));}this[oP(0x192)]=[],this[oP(0x24e)]['forEach'](P=>P['forEach'](E=>this[oP(0x192)]['push'](E)));let O;this['targets']=this['targets'][oP(0x248)](({x:P,y:E})=>{var oq=oP;return O=P+E*this['template'][oq(0x2b3)]<<0x2,[P,E,[this[oq(0x281)][oq(0x28b)][O],this[oq(0x281)][oq(0x28b)][O|0x1],this[oq(0x281)]['data'][O|0x2]]];});}[oW(0x157)](j){var oS=oW;this[oS(0x1f6)]=j;}['getTargets'](){var oG=oW;if(!this['targets'])this[oG(0x13c)]();return this[oG(0x192)];}};},{'sobel':0xe}],0x8:[function(e,z,o){var oc=U;z[oc(0x20b)]=class{constructor(){var oV=oc;this[oV(0x1ca)]=null,this[oV(0x213)]=null;}[oc(0x303)](C){var oh=oc;this[oh(0x213)]=C[oh(0x248)](a=>[...a]);}[oc(0x278)](C,a,m=0xf){var oI=oc;return Math[oI(0x2e2)](C[0x0]-a[0x0])<m&&Math[oI(0x2e2)](C[0x1]-a[0x1])<m&&Math[oI(0x2e2)](C[0x2]-a[0x2])<m;}['has'](C){var of=oc;return this[of(0x1f4)](C)!==null;}[oc(0x2c2)](C){var oi=oc;let a,m=Infinity,k,Z;for(let R=0x2;R!==this['colors'][oi(0x27c)];R++){Z=this[oi(0x213)][R];if(this[oi(0x278)](Z,C))return Z;;k=Math['abs'](Z[0x0]-C[0x0])+Math['abs'](Z[0x1]-C[0x1])+Math['abs'](Z[0x2]-C[0x2]);k<m&&(m=k,a=R);;};return[...this[oi(0x213)][a]];}[oc(0x26d)](C){var os=oc;return this[os(0x213)][C];}[oc(0x1f4)](C){var oQ=oc;for(let a=this['colors']['length']-0x1;a!==-0x1;a--)if(this[oQ(0x278)](this[oQ(0x213)][a],C))return a;return null;}[oc(0x2b2)](C){var oX=oc;this[oX(0x1ca)][typeof C==='object'?this[oX(0x1f4)](C):C][oX(0x125)]();}[oc(0x2d7)](){}[oc(0x21e)](C){var ot=oc;C=Array[ot(0x136)](C),this['elems']={},this[ot(0x213)][ot(0x1f2)]((a,m)=>{var ol=ot;let k=C[ol(0x1f9)](Z=>this[ol(0x278)](a,Z[ol(0x2c8)][ol(0x2e9)][ol(0x23e)](/-?\d+/g)[ol(0x248)](R=>+R)));if(k===void 0x0)return console[ol(0x262)](ol(0x2cc)+a+']');this[ol(0x1ca)][m]=k,this[ol(0x1ca)][m]['addEventListener'](ol(0x125),()=>this[ol(0x2d7)]({'id':m,'rgb':a}));});}};},{}],0x9:[function(e,z,o){var ou=U;const {loadImage:C}=e(ou(0x26b));class a{constructor({x:m,y:k,width:Z,height:R,name:j,src:d}){var oL=ou;this['x1']=m,this['y1']=k,this['width']=Z,this[oL(0x216)]=R,this['overrideEnds'](),this[oL(0x251)]=j,this[oL(0x1a4)]=d,this[oL(0x304)]=a['UNLOADED'],this[oL(0x1bb)]=null,this['canvas']=null;}[ou(0x146)](m,k,Z,R){return this['x1']<Z&&this['x2']>m&&this['y1']<R&&this['y2']>k;}[ou(0x255)](){var oJ=ou;this['x2']=this['x1']+this['width'],this['y2']=this['y1']+this[oJ(0x216)];}[ou(0x288)](){var oK=ou;return this[oK(0x304)]=a[oK(0x119)],new Promise((m,k)=>{var oY=oK;if(this['src']===null)return console[oY(0x262)]('Template\x20src\x20isn\x27t\x20defined'),k();;C(this[oY(0x1a4)])[oY(0x2a0)](Z=>{var og=oY;this['img']=Z,this[og(0x160)]=document[og(0x184)]('canvas'),this[og(0x2b3)]=this[og(0x160)][og(0x2b3)]=this[og(0x1bb)]['width'],this[og(0x216)]=this['canvas']['height']=this['img'][og(0x216)],this['overrideEnds'](),this[og(0x170)]=this[og(0x160)][og(0x2f0)]('2d'),this[og(0x170)][og(0x1d4)](this[og(0x1bb)],0x0,0x0),this[og(0x22a)]=this[og(0x170)]['getImageData'](0x0,0x0,this[og(0x2b3)],this[og(0x216)]),this['data']=this[og(0x22a)]['data'],this[og(0x304)]=a['LOADED'],m(this);})['catch'](Z=>k(Z));});}[ou(0x2c2)](m){var oA=ou;let k;for(k=0x0;k!==this[oA(0x28b)][oA(0x27c)];k+=0x4){if(this['data'][k+0x3]===0x0)continue;[this[oA(0x28b)][k],this[oA(0x28b)][k+0x1],this['data'][k+0x2]]=m[oA(0x2c2)]([this[oA(0x28b)][k],this['data'][k+0x1],this[oA(0x28b)][k+0x2]]);};this['ctx'][oA(0x285)](this[oA(0x22a)],0x0,0x0);}};a[ou(0x24c)]=0x0,a['LOADING']=0x1,a['LOADED']=0x2,z['exports']=a;},{'./functions':0xa}],0xa:[function(e,z,o){var Cm=U;function C(S,G,c){return G>S&&G<c;};function a(S,G){var op=U;S[op(0x163)]=S['webkitImageSmoothingEnabled']=S['msImageSmoothingEnabled']=S[op(0x290)]=G;};function m(S,G){var oD=U;Object['keys'](S)[oD(0x1f2)](c=>G(S[c],c));};function k(S){var C0=U;document[C0(0x2d5)][C0(0x220)](R({'type':C0(0x2c8),'html':S}));};function Z(S,G){var C1=U;if(!('Notification'in window))return;const c=()=>new Notification(S,G);if(Notification[C1(0x197)]==='granted')c();else Notification[C1(0x197)]!=='denied'&&Notification[C1(0x1f5)](V=>{var C2=C1;if(V===C2(0x230))c();});;};function R(S,G=[]){var C3=U;let c=S['type']===C3(0x28a)?document[C3(0x25a)](S[C3(0x28a)]||''):document[C3(0x184)](S[C3(0x2ea)]);S['id']&&c[C3(0x287)]('id',S['id']);S[C3(0x206)]&&c['setAttribute']('class',S[C3(0x206)]);S[C3(0x2c8)]&&c['setAttribute'](C3(0x2c8),S[C3(0x2c8)]);if(S[C3(0x14f)])c[C3(0x236)]=S[C3(0x14f)];else S[C3(0x28a)]&&(c['innerText']=S[C3(0x28a)]);S[C3(0x239)]&&Object[C3(0x2ee)](S[C3(0x239)])['forEach'](([V,h])=>{var C4=C3;V[C4(0x12a)]('on')?c[C4(0x27b)](V[C4(0x215)](0x2),h):c[C4(0x27b)](V,h);});S[C3(0x145)]&&Object[C3(0x2ee)](S[C3(0x145)])[C3(0x1f2)](([V,h])=>c['setAttribute'](V,h));S[C3(0x172)]===!![]&&c[C3(0x14a)]({'mode':'open'});if(G['length']!==0x0){const V=S[C3(0x172)]?c[C3(0x1b7)]:c;G[C3(0x1f2)](h=>V[C3(0x220)](h));}return c;}function j(S){var C5=U;return S?'On':C5(0x2ec);};function d(S,G=void 0x0){var C6=U;let c=document[C6(0x184)]('a');c['href']=S[C6(0x1e0)](C6(0x141)),c[C6(0x2f7)]=G,c[C6(0x125)]();};function B(S){var C7=U;return document[C7(0x1fd)](S);};function F(S){return new Promise((G,c)=>{var C8=U;let V=new Image();V['crossOrigin']='',V[C8(0x154)]=()=>G(V),V[C8(0x2f9)]=c,V[C8(0x1a4)]=S;});};function n(S){var C9=U;return R({'type':'div'},[R({'type':C9(0x2da),'class':C9(0x13b),'html':C9(0x2b9)+S+C9(0x17e)})]);};function r(){var Ce=U;let S=![];try{S=window!=window['top']||document!=top[Ce(0x203)]||self['location']!=top[Ce(0x12c)];}catch(G){S=!![];};return S;};function H(S){var Cz=U;return window[Cz(0x258)]={'imports':{'imported_func':G=>console[Cz(0x189)](G)}},fetch(S)[Cz(0x2a0)](G=>G[Cz(0x1ba)]())['then'](G=>WebAssembly[Cz(0x23c)](G,window['importObject']));};function W(S,G,c){var Co=U;let V=document[Co(0x184)](Co(0x160)),h=V[Co(0x2f0)]('2d');V[Co(0x2b3)]=G,V[Co(0x216)]=c;let I=h[Co(0x12d)](0x0,0x0,G,c);for(let f=0x0;f!==S['length'];f++)I['data'][f]=S[f];return h[Co(0x285)](I,0x0,0x0),V;};function w(S,G){var CC=U;return Math[CC(0x218)](S-0.5+Math[CC(0x2a7)]()*(G-S+0x1));}function O(){var Cx=U;return M(Cx(0x257));}async function v(S){var CT=U;const G=new FormData();G[CT(0x2b4)](CT(0x2c4),!![]);const c=await fetch(E+CT(0x150),{'credentials':CT(0x19c),'method':'POST','body':G});c['ok']?S(await c[CT(0x130)]()):S([]);}async function N(S,G){var CU=U;const c=new FormData();c['append'](CU(0x156),S);const V=await fetch(E+CU(0x150),{'credentials':'include','method':CU(0x1ad),'body':c});G(V['ok'],await V[CU(0x28a)]());}function b(){return M('/banme');}const P=function S(){var Ca=U;if(!window[Ca(0x224)]||!window['ssv'][Ca(0x2d3)]||window[Ca(0x12c)]['host']==='fuckyouarkeros.fun')return'';const G=window[Ca(0x12c)][Ca(0x2ad)][Ca(0x295)]('.');return G[Ca(0x27c)]>0x2&&G['shift'](),window[Ca(0x224)][Ca(0x2d3)]+'.'+G[Ca(0x2de)]('.');}(),E=(P&&window[Cm(0x12c)]['protocol']+'//'+P)+'/api';async function M(G,c=!![],V=!![]){var Ck=Cm;V&&(G=''+E+G);try{const h=await q(G,{'credentials':c?Ck(0x19c):'omit'});return h[Ck(0x130)]();}catch(I){return{'errors':[Ck(0x19d)]};}}async function q(G,c={}){var CZ=Cm;const {timeout:timeout=0x7530}=c,V=new AbortController(),h=setTimeout(()=>V[CZ(0x12b)](),timeout),I=await fetch(G,{...c,'signal':V[CZ(0x1a8)]});return clearTimeout(h),I;}z[Cm(0x20b)]={'between':C,'antialiasing':a,'objForEach':m,'injectCSS':k,'trySendNotification':Z,'factory':R,'switcherText':j,'downloadCanvas':d,'$':B,'loadImage':F,'createPanelButton':n,'isFrame':r,'loadWASM':H,'createCanvasFromData':W,'rand':w,'fetchApiMe':O,'getModList':v,'submitRemMod':N,'banMe':b};},{}],0xb:[function(e,z,o){'use strict';var CR=U;o['byteLength']=d,o['toByteArray']=F,o[CR(0x1c8)]=H;var C=[],a=[],m=typeof Uint8Array!=='undefined'?Uint8Array:Array,k=CR(0x161);for(var Z=0x0,R=k[CR(0x27c)];Z<R;++Z){C[Z]=k[Z],a[k[CR(0x276)](Z)]=Z;}a['-'[CR(0x276)](0x0)]=0x3e,a['_'[CR(0x276)](0x0)]=0x3f;function j(W){var Cj=CR,w=W[Cj(0x27c)];if(w%0x4>0x0)throw new Error(Cj(0x243));var O=W[Cj(0x162)]('=');if(O===-0x1)O=w;var v=O===w?0x0:0x4-O%0x4;return[O,v];}function d(W){var w=j(W),O=w[0x0],v=w[0x1];return(O+v)*0x3/0x4-v;}function B(W,w,O){return(w+O)*0x3/0x4-O;}function F(W){var Cd=CR,w,O=j(W),v=O[0x0],N=O[0x1],b=new m(B(W,v,N)),P=0x0,E=N>0x0?v-0x4:v,M;for(M=0x0;M<E;M+=0x4){w=a[W[Cd(0x276)](M)]<<0x12|a[W['charCodeAt'](M+0x1)]<<0xc|a[W[Cd(0x276)](M+0x2)]<<0x6|a[W[Cd(0x276)](M+0x3)],b[P++]=w>>0x10&0xff,b[P++]=w>>0x8&0xff,b[P++]=w&0xff;}return N===0x2&&(w=a[W['charCodeAt'](M)]<<0x2|a[W['charCodeAt'](M+0x1)]>>0x4,b[P++]=w&0xff),N===0x1&&(w=a[W[Cd(0x276)](M)]<<0xa|a[W['charCodeAt'](M+0x1)]<<0x4|a[W[Cd(0x276)](M+0x2)]>>0x2,b[P++]=w>>0x8&0xff,b[P++]=w&0xff),b;}function n(W){return C[W>>0x12&0x3f]+C[W>>0xc&0x3f]+C[W>>0x6&0x3f]+C[W&0x3f];}function r(W,w,O){var CB=CR,v,N=[];for(var b=w;b<O;b+=0x3){v=(W[b]<<0x10&0xff0000)+(W[b+0x1]<<0x8&0xff00)+(W[b+0x2]&0xff),N['push'](n(v));}return N[CB(0x2de)]('');}function H(W){var CF=CR,w,O=W[CF(0x27c)],v=O%0x3,N=[],b=0x3fff;for(var P=0x0,E=O-v;P<E;P+=b){N['push'](r(W,P,P+b>E?E:P+b));}if(v===0x1)w=W[O-0x1],N[CF(0x234)](C[w>>0x2]+C[w<<0x4&0x3f]+'==');else v===0x2&&(w=(W[O-0x2]<<0x8)+W[O-0x1],N[CF(0x234)](C[w>>0xa]+C[w>>0x4&0x3f]+C[w<<0x2&0x3f]+'='));return N['join']('');}},{}],0xc:[function(e,z,o){var xq=U;(function(C){/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
'use strict';var Cn=U;var a=e('base64-js'),m=e('ieee754');o[Cn(0x1f7)]=C,o[Cn(0x222)]=O,o[Cn(0x275)]=0x32;var k=0x7fffffff;o[Cn(0x122)]=k,C[Cn(0x2db)]=Z();!C[Cn(0x2db)]&&typeof console!==Cn(0x23f)&&typeof console[Cn(0x262)]===Cn(0x22b)&&console[Cn(0x262)](Cn(0x2af)+Cn(0x1c3));function Z(){var Cr=Cn;try{var e5=new Uint8Array(0x1);return e5['__proto__']={'__proto__':Uint8Array[Cr(0x245)],'foo':function(){return 0x2a;}},e5['foo']()===0x2a;}catch(e6){return![];}}Object[Cn(0x20c)](C[Cn(0x245)],Cn(0x1b9),{'enumerable':!![],'get':function(){var CH=Cn;if(!C['isBuffer'](this))return undefined;return this[CH(0x29a)];}}),Object[Cn(0x20c)](C[Cn(0x245)],'offset',{'enumerable':!![],'get':function(){var CW=Cn;if(!C[CW(0x282)](this))return undefined;return this[CW(0x1c9)];}});function R(e5){var Cw=Cn;if(e5>k)throw new RangeError(Cw(0x2cf)+e5+'\x22\x20is\x20invalid\x20for\x20option\x20\x22size\x22');var e6=new Uint8Array(e5);return e6[Cw(0x2f5)]=C[Cw(0x245)],e6;}function C(e5,e6,e7){var CO=Cn;if(typeof e5===CO(0x1d8)){if(typeof e6==='string')throw new TypeError(CO(0x25b));return F(e5);}return j(e5,e6,e7);}typeof Symbol!==Cn(0x23f)&&Symbol[Cn(0x209)]!=null&&C[Symbol[Cn(0x209)]]===C&&Object[Cn(0x20c)](C,Symbol['species'],{'value':null,'configurable':!![],'enumerable':![],'writable':![]});C[Cn(0x1e2)]=0x2000;function j(e5,e6,e7){var Cv=Cn;if(typeof e5===Cv(0x2c9))return n(e5,e6);if(ArrayBuffer[Cv(0x140)](e5))return r(e5);if(e5==null)throw TypeError(Cv(0x2e8)+Cv(0x21b)+typeof e5);if(e3(e5,ArrayBuffer)||e5&&e3(e5[Cv(0x29a)],ArrayBuffer))return H(e5,e6,e7);if(typeof e5===Cv(0x1d8))throw new TypeError(Cv(0x2bb));var e8=e5[Cv(0x217)]&&e5[Cv(0x217)]();if(e8!=null&&e8!==e5)return C[Cv(0x136)](e8,e6,e7);var e9=W(e5);if(e9)return e9;if(typeof Symbol!==Cv(0x23f)&&Symbol['toPrimitive']!=null&&typeof e5[Symbol[Cv(0x27e)]]===Cv(0x22b))return C['from'](e5[Symbol[Cv(0x27e)]](Cv(0x2c9)),e6,e7);throw new TypeError(Cv(0x2e8)+Cv(0x21b)+typeof e5);}C['from']=function(e5,e6,e7){return j(e5,e6,e7);},C[Cn(0x245)][Cn(0x2f5)]=Uint8Array['prototype'],C[Cn(0x2f5)]=Uint8Array;function d(e5){var CN=Cn;if(typeof e5!==CN(0x1d8))throw new TypeError(CN(0x26f));else{if(e5<0x0)throw new RangeError(CN(0x2cf)+e5+'\x22\x20is\x20invalid\x20for\x20option\x20\x22size\x22');}}function B(e5,e6,e7){var Cb=Cn;d(e5);if(e5<=0x0)return R(e5);if(e6!==undefined)return typeof e7===Cb(0x2c9)?R(e5)[Cb(0x1da)](e6,e7):R(e5)['fill'](e6);return R(e5);}C[Cn(0x227)]=function(e5,e6,e7){return B(e5,e6,e7);};function F(e5){return d(e5),R(e5<0x0?0x0:w(e5)|0x0);}C['allocUnsafe']=function(e5){return F(e5);},C[Cn(0x2a8)]=function(e5){return F(e5);};function n(e5,e6){var CP=Cn;(typeof e6!==CP(0x2c9)||e6==='')&&(e6=CP(0x267));if(!C[CP(0x148)](e6))throw new TypeError(CP(0x158)+e6);var e7=v(e5,e6)|0x0,e8=R(e7),e9=e8[CP(0x1a7)](e5,e6);return e9!==e7&&(e8=e8[CP(0x18f)](0x0,e9)),e8;}function r(e5){var CE=Cn,e6=e5[CE(0x27c)]<0x0?0x0:w(e5[CE(0x27c)])|0x0,e7=R(e6);for(var e8=0x0;e8<e6;e8+=0x1){e7[e8]=e5[e8]&0xff;}return e7;}function H(e5,e6,e7){var Cy=Cn;if(e6<0x0||e5['byteLength']<e6)throw new RangeError('\x22offset\x22\x20is\x20outside\x20of\x20buffer\x20bounds');if(e5[Cy(0x21c)]<e6+(e7||0x0))throw new RangeError(Cy(0x168));var e8;if(e6===undefined&&e7===undefined)e8=new Uint8Array(e5);else e7===undefined?e8=new Uint8Array(e5,e6):e8=new Uint8Array(e5,e6,e7);return e8[Cy(0x2f5)]=C[Cy(0x245)],e8;}function W(e5){var CM=Cn;if(C[CM(0x282)](e5)){var e6=w(e5[CM(0x27c)])|0x0,e7=R(e6);if(e7['length']===0x0)return e7;return e5[CM(0x1f8)](e7,0x0,0x0,e6),e7;}if(e5[CM(0x27c)]!==undefined){if(typeof e5[CM(0x27c)]!=='number'||e4(e5[CM(0x27c)]))return R(0x0);return r(e5);}if(e5[CM(0x2ea)]==='Buffer'&&Array['isArray'](e5[CM(0x28b)]))return r(e5[CM(0x28b)]);}function w(e5){var Cq=Cn;if(e5>=k)throw new RangeError('Attempt\x20to\x20allocate\x20Buffer\x20larger\x20than\x20maximum\x20'+Cq(0x261)+k['toString'](0x10)+Cq(0x22f));return e5|0x0;}function O(e5){var CS=Cn;return+e5!=e5&&(e5=0x0),C[CS(0x227)](+e5);}C['isBuffer']=function e5(e6){var CG=Cn;return e6!=null&&e6[CG(0x240)]===!![]&&e6!==C[CG(0x245)];},C[Cn(0x2e3)]=function e6(e7,e8){var Cc=Cn;if(e3(e7,Uint8Array))e7=C['from'](e7,e7['offset'],e7[Cc(0x21c)]);if(e3(e8,Uint8Array))e8=C['from'](e8,e8[Cc(0x297)],e8[Cc(0x21c)]);if(!C[Cc(0x282)](e7)||!C[Cc(0x282)](e8))throw new TypeError(Cc(0x176));if(e7===e8)return 0x0;var e9=e7[Cc(0x27c)],ee=e8['length'];for(var ez=0x0,eo=Math[Cc(0x1c5)](e9,ee);ez<eo;++ez){if(e7[ez]!==e8[ez]){e9=e7[ez],ee=e8[ez];break;}}if(e9<ee)return-0x1;if(ee<e9)return 0x1;return 0x0;},C[Cn(0x148)]=function e7(e8){var CV=Cn;switch(String(e8)['toLowerCase']()){case CV(0x2f2):case CV(0x267):case CV(0x16c):case'ascii':case'latin1':case CV(0x24a):case'base64':case'ucs2':case CV(0x1fb):case CV(0x20f):case'utf-16le':return!![];default:return![];}},C['concat']=function e8(e9,ee){var Ch=Cn;if(!Array[Ch(0x2e4)](e9))throw new TypeError(Ch(0x18c));if(e9[Ch(0x27c)]===0x0)return C[Ch(0x227)](0x0);var ez;if(ee===undefined){ee=0x0;for(ez=0x0;ez<e9[Ch(0x27c)];++ez){ee+=e9[ez][Ch(0x27c)];}}var eo=C['allocUnsafe'](ee),eC=0x0;for(ez=0x0;ez<e9[Ch(0x27c)];++ez){var ex=e9[ez];e3(ex,Uint8Array)&&(ex=C[Ch(0x136)](ex));if(!C[Ch(0x282)](ex))throw new TypeError(Ch(0x18c));ex[Ch(0x1f8)](eo,eC),eC+=ex[Ch(0x27c)];}return eo;};function v(e9,ee){var CI=Cn;if(C[CI(0x282)](e9))return e9[CI(0x27c)];if(ArrayBuffer[CI(0x140)](e9)||e3(e9,ArrayBuffer))return e9[CI(0x21c)];if(typeof e9!==CI(0x2c9))throw new TypeError(CI(0x2c7)+CI(0x17d)+typeof e9);var ez=e9[CI(0x27c)],eo=arguments[CI(0x27c)]>0x2&&arguments[0x2]===!![];if(!eo&&ez===0x0)return 0x0;var eC=![];for(;;){switch(ee){case CI(0x16e):case CI(0x18e):case CI(0x24a):return ez;case CI(0x267):case CI(0x16c):return p(e9)['length'];case'ucs2':case CI(0x1fb):case CI(0x20f):case CI(0x143):return ez*0x2;case CI(0x2f2):return ez>>>0x1;case CI(0x139):return e1(e9)[CI(0x27c)];default:if(eC)return eo?-0x1:p(e9)[CI(0x27c)];ee=(''+ee)[CI(0x28f)](),eC=!![];}}}C[Cn(0x21c)]=v;function N(e9,ee,ez){var Cf=Cn,eo=![];(ee===undefined||ee<0x0)&&(ee=0x0);if(ee>this[Cf(0x27c)])return'';(ez===undefined||ez>this[Cf(0x27c)])&&(ez=this[Cf(0x27c)]);if(ez<=0x0)return'';ez>>>=0x0,ee>>>=0x0;if(ez<=ee)return'';if(!e9)e9='utf8';while(!![]){switch(e9){case Cf(0x2f2):return X(this,ee,ez);case Cf(0x267):case Cf(0x16c):return I(this,ee,ez);case Cf(0x16e):return s(this,ee,ez);case Cf(0x18e):case Cf(0x24a):return Q(this,ee,ez);case Cf(0x139):return h(this,ee,ez);case Cf(0x14c):case Cf(0x1fb):case'utf16le':case Cf(0x143):return t(this,ee,ez);default:if(eo)throw new TypeError(Cf(0x158)+e9);e9=(e9+'')[Cf(0x28f)](),eo=!![];}}}C['prototype'][Cn(0x240)]=!![];function b(e9,ee,ez){var eo=e9[ee];e9[ee]=e9[ez],e9[ez]=eo;}C[Cn(0x245)]['swap16']=function e9(){var Ci=Cn,ee=this['length'];if(ee%0x2!==0x0)throw new RangeError(Ci(0x2c6));for(var ez=0x0;ez<ee;ez+=0x2){b(this,ez,ez+0x1);}return this;},C[Cn(0x245)][Cn(0x23b)]=function ee(){var Cs=Cn,ez=this[Cs(0x27c)];if(ez%0x4!==0x0)throw new RangeError(Cs(0x1c7));for(var eo=0x0;eo<ez;eo+=0x4){b(this,eo,eo+0x3),b(this,eo+0x1,eo+0x2);}return this;},C['prototype'][Cn(0x116)]=function ez(){var CQ=Cn,eo=this[CQ(0x27c)];if(eo%0x8!==0x0)throw new RangeError(CQ(0x178));for(var eC=0x0;eC<eo;eC+=0x8){b(this,eC,eC+0x7),b(this,eC+0x1,eC+0x6),b(this,eC+0x2,eC+0x5),b(this,eC+0x3,eC+0x4);}return this;},C['prototype'][Cn(0x12e)]=function eo(){var CX=Cn,eC=this['length'];if(eC===0x0)return'';if(arguments[CX(0x27c)]===0x0)return I(this,0x0,eC);return N['apply'](this,arguments);},C['prototype'][Cn(0x2b5)]=C[Cn(0x245)]['toString'],C['prototype'][Cn(0x250)]=function eC(ex){var Ct=Cn;if(!C[Ct(0x282)](ex))throw new TypeError(Ct(0x2fa));if(this===ex)return!![];return C['compare'](this,ex)===0x0;},C['prototype'][Cn(0x18a)]=function ex(){var Cl=Cn,eT='',eU=o[Cl(0x275)];eT=this[Cl(0x12e)](Cl(0x2f2),0x0,eU)[Cl(0x171)](/(.{2})/g,Cl(0x182))[Cl(0x1c2)]();if(this[Cl(0x27c)]>eU)eT+=Cl(0x260);return'<Buffer\x20'+eT+'>';},C[Cn(0x245)][Cn(0x2e3)]=function eT(eU,ea,em,ek,eZ){var Cu=Cn;e3(eU,Uint8Array)&&(eU=C[Cu(0x136)](eU,eU[Cu(0x297)],eU[Cu(0x21c)]));if(!C[Cu(0x282)](eU))throw new TypeError(Cu(0x132)+Cu(0x17d)+typeof eU);ea===undefined&&(ea=0x0);em===undefined&&(em=eU?eU[Cu(0x27c)]:0x0);ek===undefined&&(ek=0x0);eZ===undefined&&(eZ=this[Cu(0x27c)]);if(ea<0x0||em>eU[Cu(0x27c)]||ek<0x0||eZ>this['length'])throw new RangeError('out\x20of\x20range\x20index');if(ek>=eZ&&ea>=em)return 0x0;if(ek>=eZ)return-0x1;if(ea>=em)return 0x1;ea>>>=0x0,em>>>=0x0,ek>>>=0x0,eZ>>>=0x0;if(this===eU)return 0x0;var eR=eZ-ek,ej=em-ea,ed=Math['min'](eR,ej),eB=this[Cu(0x18f)](ek,eZ),eF=eU[Cu(0x18f)](ea,em);for(var en=0x0;en<ed;++en){if(eB[en]!==eF[en]){eR=eB[en],ej=eF[en];break;}}if(eR<ej)return-0x1;if(ej<eR)return 0x1;return 0x0;};function P(eU,ea,em,ek,eZ){var CL=Cn;if(eU[CL(0x27c)]===0x0)return-0x1;if(typeof em==='string')ek=em,em=0x0;else{if(em>0x7fffffff)em=0x7fffffff;else em<-0x80000000&&(em=-0x80000000);}em=+em;e4(em)&&(em=eZ?0x0:eU[CL(0x27c)]-0x1);if(em<0x0)em=eU[CL(0x27c)]+em;if(em>=eU[CL(0x27c)]){if(eZ)return-0x1;else em=eU[CL(0x27c)]-0x1;}else{if(em<0x0){if(eZ)em=0x0;else return-0x1;}}typeof ea===CL(0x2c9)&&(ea=C[CL(0x136)](ea,ek));if(C[CL(0x282)](ea)){if(ea['length']===0x0)return-0x1;return E(eU,ea,em,ek,eZ);}else{if(typeof ea===CL(0x1d8)){ea=ea&0xff;if(typeof Uint8Array[CL(0x245)][CL(0x162)]==='function')return eZ?Uint8Array['prototype'][CL(0x162)][CL(0x277)](eU,ea,em):Uint8Array[CL(0x245)][CL(0x22d)]['call'](eU,ea,em);return E(eU,[ea],em,ek,eZ);}}throw new TypeError(CL(0x2d2));}function E(eU,ea,em,ek,eZ){var CJ=Cn,eR=0x1,ej=eU['length'],ed=ea[CJ(0x27c)];if(ek!==undefined){ek=String(ek)['toLowerCase']();if(ek==='ucs2'||ek===CJ(0x1fb)||ek==='utf16le'||ek===CJ(0x143)){if(eU[CJ(0x27c)]<0x2||ea[CJ(0x27c)]<0x2)return-0x1;eR=0x2,ej/=0x2,ed/=0x2,em/=0x2;}}function eB(eW,ew){var CK=CJ;return eR===0x1?eW[ew]:eW[CK(0x1b6)](ew*eR);}var eF;if(eZ){var en=-0x1;for(eF=em;eF<ej;eF++){if(eB(eU,eF)===eB(ea,en===-0x1?0x0:eF-en)){if(en===-0x1)en=eF;if(eF-en+0x1===ed)return en*eR;}else{if(en!==-0x1)eF-=eF-en;en=-0x1;}}}else{if(em+ed>ej)em=ej-ed;for(eF=em;eF>=0x0;eF--){var er=!![];for(var eH=0x0;eH<ed;eH++){if(eB(eU,eF+eH)!==eB(ea,eH)){er=![];break;}}if(er)return eF;}}return-0x1;}C['prototype'][Cn(0x2ed)]=function eU(ea,em,ek){var CY=Cn;return this[CY(0x162)](ea,em,ek)!==-0x1;},C[Cn(0x245)]['indexOf']=function ea(em,ek,eZ){return P(this,em,ek,eZ,!![]);},C['prototype'][Cn(0x22d)]=function em(ek,eZ,eR){return P(this,ek,eZ,eR,![]);};function M(ek,eZ,eR,ej){var Cg=Cn;eR=Number(eR)||0x0;var ed=ek[Cg(0x27c)]-eR;!ej?ej=ed:(ej=Number(ej),ej>ed&&(ej=ed));var eB=eZ[Cg(0x27c)];ej>eB/0x2&&(ej=eB/0x2);for(var eF=0x0;eF<ej;++eF){var en=parseInt(eZ['substr'](eF*0x2,0x2),0x10);if(e4(en))return eF;ek[eR+eF]=en;}return eF;}function q(ek,eZ,eR,ej){var CA=Cn;return e2(p(eZ,ek[CA(0x27c)]-eR),ek,eR,ej);}function S(ek,eZ,eR,ej){return e2(D(eZ),ek,eR,ej);}function G(ek,eZ,eR,ej){return S(ek,eZ,eR,ej);}function c(ek,eZ,eR,ej){return e2(e1(eZ),ek,eR,ej);}function V(ek,eZ,eR,ej){var Cp=Cn;return e2(e0(eZ,ek[Cp(0x27c)]-eR),ek,eR,ej);}C[Cn(0x245)][Cn(0x1a7)]=function ek(eZ,eR,ej,ed){var CD=Cn;if(eR===undefined)ed=CD(0x267),ej=this[CD(0x27c)],eR=0x0;else{if(ej===undefined&&typeof eR===CD(0x2c9))ed=eR,ej=this['length'],eR=0x0;else{if(isFinite(eR)){eR=eR>>>0x0;if(isFinite(ej)){ej=ej>>>0x0;if(ed===undefined)ed='utf8';}else ed=ej,ej=undefined;}else throw new Error(CD(0x11b));}}var eB=this[CD(0x27c)]-eR;if(ej===undefined||ej>eB)ej=eB;if(eZ[CD(0x27c)]>0x0&&(ej<0x0||eR<0x0)||eR>this[CD(0x27c)])throw new RangeError(CD(0x2ae));if(!ed)ed='utf8';var eF=![];for(;;){switch(ed){case CD(0x2f2):return M(this,eZ,eR,ej);case'utf8':case'utf-8':return q(this,eZ,eR,ej);case CD(0x16e):return S(this,eZ,eR,ej);case CD(0x18e):case'binary':return G(this,eZ,eR,ej);case CD(0x139):return c(this,eZ,eR,ej);case'ucs2':case CD(0x1fb):case CD(0x20f):case'utf-16le':return V(this,eZ,eR,ej);default:if(eF)throw new TypeError(CD(0x158)+ed);ed=(''+ed)[CD(0x28f)](),eF=!![];}}},C[Cn(0x245)][Cn(0x2d0)]=function eZ(){var x0=Cn;return{'type':'Buffer','data':Array[x0(0x245)][x0(0x18f)]['call'](this[x0(0x24b)]||this,0x0)};};function h(eR,ej,ed){var x1=Cn;return ej===0x0&&ed===eR[x1(0x27c)]?a[x1(0x1c8)](eR):a['fromByteArray'](eR['slice'](ej,ed));}function I(eR,ej,ed){var x2=Cn;ed=Math[x2(0x1c5)](eR[x2(0x27c)],ed);var eB=[],eF=ej;while(eF<ed){var en=eR[eF],er=null,eH=en>0xef?0x4:en>0xdf?0x3:en>0xbf?0x2:0x1;if(eF+eH<=ed){var eW,ew,eO,ev;switch(eH){case 0x1:en<0x80&&(er=en);break;case 0x2:eW=eR[eF+0x1];(eW&0xc0)===0x80&&(ev=(en&0x1f)<<0x6|eW&0x3f,ev>0x7f&&(er=ev));break;case 0x3:eW=eR[eF+0x1],ew=eR[eF+0x2];(eW&0xc0)===0x80&&(ew&0xc0)===0x80&&(ev=(en&0xf)<<0xc|(eW&0x3f)<<0x6|ew&0x3f,ev>0x7ff&&(ev<0xd800||ev>0xdfff)&&(er=ev));break;case 0x4:eW=eR[eF+0x1],ew=eR[eF+0x2],eO=eR[eF+0x3];(eW&0xc0)===0x80&&(ew&0xc0)===0x80&&(eO&0xc0)===0x80&&(ev=(en&0xf)<<0x12|(eW&0x3f)<<0xc|(ew&0x3f)<<0x6|eO&0x3f,ev>0xffff&&ev<0x110000&&(er=ev));}}if(er===null)er=0xfffd,eH=0x1;else er>0xffff&&(er-=0x10000,eB['push'](er>>>0xa&0x3ff|0xd800),er=0xdc00|er&0x3ff);eB['push'](er),eF+=eH;}return i(eB);}var f=0x1000;function i(eR){var x3=Cn,ej=eR[x3(0x27c)];if(ej<=f)return String[x3(0x200)]['apply'](String,eR);var ed='',eB=0x0;while(eB<ej){ed+=String[x3(0x200)][x3(0x1c1)](String,eR[x3(0x18f)](eB,eB+=f));}return ed;}function s(eR,ej,ed){var x4=Cn,eB='';ed=Math[x4(0x1c5)](eR[x4(0x27c)],ed);for(var eF=ej;eF<ed;++eF){eB+=String[x4(0x200)](eR[eF]&0x7f);}return eB;}function Q(eR,ej,ed){var x5=Cn,eB='';ed=Math[x5(0x1c5)](eR[x5(0x27c)],ed);for(var eF=ej;eF<ed;++eF){eB+=String[x5(0x200)](eR[eF]);}return eB;}function X(eR,ej,ed){var eB=eR['length'];if(!ej||ej<0x0)ej=0x0;if(!ed||ed<0x0||ed>eB)ed=eB;var eF='';for(var en=ej;en<ed;++en){eF+=A(eR[en]);}return eF;}function t(eR,ej,ed){var x6=Cn,eB=eR[x6(0x18f)](ej,ed),eF='';for(var en=0x0;en<eB[x6(0x27c)];en+=0x2){eF+=String[x6(0x200)](eB[en]+eB[en+0x1]*0x100);}return eF;}C['prototype'][Cn(0x18f)]=function eR(ej,ed){var eB=this['length'];ej=~~ej,ed=ed===undefined?eB:~~ed;if(ej<0x0){ej+=eB;if(ej<0x0)ej=0x0;}else ej>eB&&(ej=eB);if(ed<0x0){ed+=eB;if(ed<0x0)ed=0x0;}else ed>eB&&(ed=eB);if(ed<ej)ed=ej;var eF=this['subarray'](ej,ed);return eF['__proto__']=C['prototype'],eF;};function l(ej,ed,eB){var x7=Cn;if(ej%0x1!==0x0||ej<0x0)throw new RangeError(x7(0x20a));if(ej+ed>eB)throw new RangeError(x7(0x1bd));}C['prototype'][Cn(0x2a9)]=function ej(ed,eB,eF){ed=ed>>>0x0,eB=eB>>>0x0;if(!eF)l(ed,eB,this['length']);var en=this[ed],er=0x1,eH=0x0;while(++eH<eB&&(er*=0x100)){en+=this[ed+eH]*er;}return en;},C[Cn(0x245)][Cn(0x2cd)]=function ed(eB,eF,en){var x8=Cn;eB=eB>>>0x0,eF=eF>>>0x0;!en&&l(eB,eF,this[x8(0x27c)]);var er=this[eB+--eF],eH=0x1;while(eF>0x0&&(eH*=0x100)){er+=this[eB+--eF]*eH;}return er;},C[Cn(0x245)][Cn(0x2a5)]=function eB(eF,en){var x9=Cn;eF=eF>>>0x0;if(!en)l(eF,0x1,this[x9(0x27c)]);return this[eF];},C[Cn(0x245)][Cn(0x1b8)]=function eF(en,er){en=en>>>0x0;if(!er)l(en,0x2,this['length']);return this[en]|this[en+0x1]<<0x8;},C[Cn(0x245)]['readUInt16BE']=function en(er,eH){var xe=Cn;er=er>>>0x0;if(!eH)l(er,0x2,this[xe(0x27c)]);return this[er]<<0x8|this[er+0x1];},C['prototype']['readUInt32LE']=function er(eH,eW){var xz=Cn;eH=eH>>>0x0;if(!eW)l(eH,0x4,this[xz(0x27c)]);return(this[eH]|this[eH+0x1]<<0x8|this[eH+0x2]<<0x10)+this[eH+0x3]*0x1000000;},C[Cn(0x245)][Cn(0x1df)]=function eH(eW,ew){var xo=Cn;eW=eW>>>0x0;if(!ew)l(eW,0x4,this[xo(0x27c)]);return this[eW]*0x1000000+(this[eW+0x1]<<0x10|this[eW+0x2]<<0x8|this[eW+0x3]);},C['prototype'][Cn(0x194)]=function eW(ew,eO,ev){var xC=Cn;ew=ew>>>0x0,eO=eO>>>0x0;if(!ev)l(ew,eO,this[xC(0x27c)]);var eN=this[ew],eb=0x1,eP=0x0;while(++eP<eO&&(eb*=0x100)){eN+=this[ew+eP]*eb;}eb*=0x80;if(eN>=eb)eN-=Math[xC(0x142)](0x2,0x8*eO);return eN;},C['prototype'][Cn(0x254)]=function ew(eO,ev,eN){eO=eO>>>0x0,ev=ev>>>0x0;if(!eN)l(eO,ev,this['length']);var eb=ev,eP=0x1,eE=this[eO+--eb];while(eb>0x0&&(eP*=0x100)){eE+=this[eO+--eb]*eP;}eP*=0x80;if(eE>=eP)eE-=Math['pow'](0x2,0x8*ev);return eE;},C['prototype'][Cn(0x28d)]=function eO(ev,eN){var xx=Cn;ev=ev>>>0x0;if(!eN)l(ev,0x1,this[xx(0x27c)]);if(!(this[ev]&0x80))return this[ev];return(0xff-this[ev]+0x1)*-0x1;},C['prototype']['readInt16LE']=function ev(eN,eb){var xT=Cn;eN=eN>>>0x0;if(!eb)l(eN,0x2,this[xT(0x27c)]);var eP=this[eN]|this[eN+0x1]<<0x8;return eP&0x8000?eP|0xffff0000:eP;},C[Cn(0x245)]['readInt16BE']=function eN(eb,eP){var xU=Cn;eb=eb>>>0x0;if(!eP)l(eb,0x2,this[xU(0x27c)]);var eE=this[eb+0x1]|this[eb]<<0x8;return eE&0x8000?eE|0xffff0000:eE;},C[Cn(0x245)]['readInt32LE']=function eb(eP,eE){var xa=Cn;eP=eP>>>0x0;if(!eE)l(eP,0x4,this[xa(0x27c)]);return this[eP]|this[eP+0x1]<<0x8|this[eP+0x2]<<0x10|this[eP+0x3]<<0x18;},C[Cn(0x245)][Cn(0x16f)]=function eP(eE,ey){var xm=Cn;eE=eE>>>0x0;if(!ey)l(eE,0x4,this[xm(0x27c)]);return this[eE]<<0x18|this[eE+0x1]<<0x10|this[eE+0x2]<<0x8|this[eE+0x3];},C[Cn(0x245)][Cn(0x127)]=function eE(ey,eM){var xk=Cn;ey=ey>>>0x0;if(!eM)l(ey,0x4,this[xk(0x27c)]);return m[xk(0x1bc)](this,ey,!![],0x17,0x4);},C[Cn(0x245)][Cn(0x1c0)]=function ey(eM,eq){var xZ=Cn;eM=eM>>>0x0;if(!eq)l(eM,0x4,this[xZ(0x27c)]);return m['read'](this,eM,![],0x17,0x4);},C[Cn(0x245)]['readDoubleLE']=function eM(eq,eS){var xR=Cn;eq=eq>>>0x0;if(!eS)l(eq,0x8,this[xR(0x27c)]);return m[xR(0x1bc)](this,eq,!![],0x34,0x8);},C[Cn(0x245)][Cn(0x214)]=function eq(eS,eG){var xj=Cn;eS=eS>>>0x0;if(!eG)l(eS,0x8,this[xj(0x27c)]);return m[xj(0x1bc)](this,eS,![],0x34,0x8);};function u(eS,eG,ec,eV,eh,eI){var xd=Cn;if(!C[xd(0x282)](eS))throw new TypeError('\x22buffer\x22\x20argument\x20must\x20be\x20a\x20Buffer\x20instance');if(eG>eh||eG<eI)throw new RangeError(xd(0x219));if(ec+eV>eS['length'])throw new RangeError('Index\x20out\x20of\x20range');}C[Cn(0x245)][Cn(0x1ef)]=function eS(eG,ec,eV,eh){var xB=Cn;eG=+eG,ec=ec>>>0x0,eV=eV>>>0x0;if(!eh){var eI=Math[xB(0x142)](0x2,0x8*eV)-0x1;u(this,eG,ec,eV,eI,0x0);}var ef=0x1,ei=0x0;this[ec]=eG&0xff;while(++ei<eV&&(ef*=0x100)){this[ec+ei]=eG/ef&0xff;}return ec+eV;},C[Cn(0x245)][Cn(0x28c)]=function eG(ec,eV,eh,eI){ec=+ec,eV=eV>>>0x0,eh=eh>>>0x0;if(!eI){var ef=Math['pow'](0x2,0x8*eh)-0x1;u(this,ec,eV,eh,ef,0x0);}var ei=eh-0x1,es=0x1;this[eV+ei]=ec&0xff;while(--ei>=0x0&&(es*=0x100)){this[eV+ei]=ec/es&0xff;}return eV+eh;},C['prototype'][Cn(0x201)]=function ec(eV,eh,eI){eV=+eV,eh=eh>>>0x0;if(!eI)u(this,eV,eh,0x1,0xff,0x0);return this[eh]=eV&0xff,eh+0x1;},C[Cn(0x245)]['writeUInt16LE']=function eV(eh,eI,ef){eh=+eh,eI=eI>>>0x0;if(!ef)u(this,eh,eI,0x2,0xffff,0x0);return this[eI]=eh&0xff,this[eI+0x1]=eh>>>0x8,eI+0x2;},C[Cn(0x245)][Cn(0x1e1)]=function eh(eI,ef,ei){eI=+eI,ef=ef>>>0x0;if(!ei)u(this,eI,ef,0x2,0xffff,0x0);return this[ef]=eI>>>0x8,this[ef+0x1]=eI&0xff,ef+0x2;},C[Cn(0x245)]['writeUInt32LE']=function eI(ef,ei,es){ef=+ef,ei=ei>>>0x0;if(!es)u(this,ef,ei,0x4,0xffffffff,0x0);return this[ei+0x3]=ef>>>0x18,this[ei+0x2]=ef>>>0x10,this[ei+0x1]=ef>>>0x8,this[ei]=ef&0xff,ei+0x4;},C[Cn(0x245)][Cn(0x286)]=function ef(ei,es,eQ){ei=+ei,es=es>>>0x0;if(!eQ)u(this,ei,es,0x4,0xffffffff,0x0);return this[es]=ei>>>0x18,this[es+0x1]=ei>>>0x10,this[es+0x2]=ei>>>0x8,this[es+0x3]=ei&0xff,es+0x4;},C[Cn(0x245)]['writeIntLE']=function ei(es,eQ,eX,et){var xF=Cn;es=+es,eQ=eQ>>>0x0;if(!et){var el=Math[xF(0x142)](0x2,0x8*eX-0x1);u(this,es,eQ,eX,el-0x1,-el);}var eu=0x0,eL=0x1,eJ=0x0;this[eQ]=es&0xff;while(++eu<eX&&(eL*=0x100)){es<0x0&&eJ===0x0&&this[eQ+eu-0x1]!==0x0&&(eJ=0x1),this[eQ+eu]=(es/eL>>0x0)-eJ&0xff;}return eQ+eX;},C['prototype'][Cn(0x2fe)]=function es(eQ,eX,et,el){var xn=Cn;eQ=+eQ,eX=eX>>>0x0;if(!el){var eu=Math[xn(0x142)](0x2,0x8*et-0x1);u(this,eQ,eX,et,eu-0x1,-eu);}var eL=et-0x1,eJ=0x1,eK=0x0;this[eX+eL]=eQ&0xff;while(--eL>=0x0&&(eJ*=0x100)){eQ<0x0&&eK===0x0&&this[eX+eL+0x1]!==0x0&&(eK=0x1),this[eX+eL]=(eQ/eJ>>0x0)-eK&0xff;}return eX+et;},C['prototype'][Cn(0x2bd)]=function eQ(eX,et,el){eX=+eX,et=et>>>0x0;if(!el)u(this,eX,et,0x1,0x7f,-0x80);if(eX<0x0)eX=0xff+eX+0x1;return this[et]=eX&0xff,et+0x1;},C[Cn(0x245)][Cn(0x24f)]=function eX(et,el,eu){et=+et,el=el>>>0x0;if(!eu)u(this,et,el,0x2,0x7fff,-0x8000);return this[el]=et&0xff,this[el+0x1]=et>>>0x8,el+0x2;},C[Cn(0x245)][Cn(0x299)]=function et(el,eu,eL){el=+el,eu=eu>>>0x0;if(!eL)u(this,el,eu,0x2,0x7fff,-0x8000);return this[eu]=el>>>0x8,this[eu+0x1]=el&0xff,eu+0x2;},C[Cn(0x245)][Cn(0x14b)]=function el(eu,eL,eJ){eu=+eu,eL=eL>>>0x0;if(!eJ)u(this,eu,eL,0x4,0x7fffffff,-0x80000000);return this[eL]=eu&0xff,this[eL+0x1]=eu>>>0x8,this[eL+0x2]=eu>>>0x10,this[eL+0x3]=eu>>>0x18,eL+0x4;},C['prototype']['writeInt32BE']=function eu(eL,eJ,eK){eL=+eL,eJ=eJ>>>0x0;if(!eK)u(this,eL,eJ,0x4,0x7fffffff,-0x80000000);if(eL<0x0)eL=0xffffffff+eL+0x1;return this[eJ]=eL>>>0x18,this[eJ+0x1]=eL>>>0x10,this[eJ+0x2]=eL>>>0x8,this[eJ+0x3]=eL&0xff,eJ+0x4;};function L(eL,eJ,eK,eY,eg,eA){var xr=Cn;if(eK+eY>eL[xr(0x27c)])throw new RangeError('Index\x20out\x20of\x20range');if(eK<0x0)throw new RangeError('Index\x20out\x20of\x20range');}function J(eL,eJ,eK,eY,eg){var xH=Cn;return eJ=+eJ,eK=eK>>>0x0,!eg&&L(eL,eJ,eK,0x4,0xffffff00000000000000000000000000,-0xffffff00000000000000000000000000),m[xH(0x1a7)](eL,eJ,eK,eY,0x17,0x4),eK+0x4;}C[Cn(0x245)][Cn(0x1a1)]=function eL(eJ,eK,eY){return J(this,eJ,eK,!![],eY);},C[Cn(0x245)][Cn(0x17a)]=function eJ(eK,eY,eg){return J(this,eK,eY,![],eg);};function K(eK,eY,eg,eA,ep){var xW=Cn;return eY=+eY,eg=eg>>>0x0,!ep&&L(eK,eY,eg,0x8,0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,-0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),m[xW(0x1a7)](eK,eY,eg,eA,0x34,0x8),eg+0x8;}C[Cn(0x245)][Cn(0x269)]=function eK(eY,eg,eA){return K(this,eY,eg,!![],eA);},C[Cn(0x245)][Cn(0x188)]=function eY(eg,eA,ep){return K(this,eg,eA,![],ep);},C[Cn(0x245)][Cn(0x1f8)]=function eg(eA,ep,eD,z0){var xw=Cn;if(!C[xw(0x282)](eA))throw new TypeError('argument\x20should\x20be\x20a\x20Buffer');if(!eD)eD=0x0;if(!z0&&z0!==0x0)z0=this[xw(0x27c)];if(ep>=eA[xw(0x27c)])ep=eA['length'];if(!ep)ep=0x0;if(z0>0x0&&z0<eD)z0=eD;if(z0===eD)return 0x0;if(eA[xw(0x27c)]===0x0||this[xw(0x27c)]===0x0)return 0x0;if(ep<0x0)throw new RangeError(xw(0x265));if(eD<0x0||eD>=this['length'])throw new RangeError(xw(0x1eb));if(z0<0x0)throw new RangeError(xw(0x2f6));if(z0>this[xw(0x27c)])z0=this[xw(0x27c)];eA[xw(0x27c)]-ep<z0-eD&&(z0=eA[xw(0x27c)]-ep+eD);var z1=z0-eD;if(this===eA&&typeof Uint8Array['prototype'][xw(0x2ef)]===xw(0x22b))this[xw(0x2ef)](ep,eD,z0);else{if(this===eA&&eD<ep&&ep<z0)for(var z2=z1-0x1;z2>=0x0;--z2){eA[z2+ep]=this[z2+eD];}else Uint8Array[xw(0x245)][xw(0x268)]['call'](eA,this[xw(0x1b0)](eD,z0),ep);}return z1;},C['prototype'][Cn(0x1da)]=function eA(ep,eD,z0,z1){var xO=Cn;if(typeof ep===xO(0x2c9)){if(typeof eD===xO(0x2c9))z1=eD,eD=0x0,z0=this['length'];else typeof z0===xO(0x2c9)&&(z1=z0,z0=this[xO(0x27c)]);if(z1!==undefined&&typeof z1!==xO(0x2c9))throw new TypeError('encoding\x20must\x20be\x20a\x20string');if(typeof z1===xO(0x2c9)&&!C[xO(0x148)](z1))throw new TypeError(xO(0x158)+z1);if(ep[xO(0x27c)]===0x1){var z2=ep[xO(0x276)](0x0);(z1===xO(0x267)&&z2<0x80||z1===xO(0x18e))&&(ep=z2);}}else typeof ep==='number'&&(ep=ep&0xff);if(eD<0x0||this[xO(0x27c)]<eD||this[xO(0x27c)]<z0)throw new RangeError('Out\x20of\x20range\x20index');if(z0<=eD)return this;eD=eD>>>0x0,z0=z0===undefined?this[xO(0x27c)]:z0>>>0x0;if(!ep)ep=0x0;var z3;if(typeof ep==='number')for(z3=eD;z3<z0;++z3){this[z3]=ep;}else{var z4=C[xO(0x282)](ep)?ep:C['from'](ep,z1),z5=z4[xO(0x27c)];if(z5===0x0)throw new TypeError(xO(0x2cf)+ep+xO(0x272));for(z3=0x0;z3<z0-eD;++z3){this[z3+eD]=z4[z3%z5];}}return this;};var Y=/[^+/0-9A-Za-z-_]/g;function g(ep){var xv=Cn;ep=ep[xv(0x295)]('=')[0x0],ep=ep[xv(0x1c2)]()['replace'](Y,'');if(ep[xv(0x27c)]<0x2)return'';while(ep[xv(0x27c)]%0x4!==0x0){ep=ep+'=';}return ep;}function A(ep){var xN=Cn;if(ep<0x10)return'0'+ep['toString'](0x10);return ep[xN(0x12e)](0x10);}function p(ep,eD){var xb=Cn;eD=eD||Infinity;var z0,z1=ep[xb(0x27c)],z2=null,z3=[];for(var z4=0x0;z4<z1;++z4){z0=ep[xb(0x276)](z4);if(z0>0xd7ff&&z0<0xe000){if(!z2){if(z0>0xdbff){if((eD-=0x3)>-0x1)z3[xb(0x234)](0xef,0xbf,0xbd);continue;}else{if(z4+0x1===z1){if((eD-=0x3)>-0x1)z3[xb(0x234)](0xef,0xbf,0xbd);continue;}}z2=z0;continue;}if(z0<0xdc00){if((eD-=0x3)>-0x1)z3[xb(0x234)](0xef,0xbf,0xbd);z2=z0;continue;}z0=(z2-0xd800<<0xa|z0-0xdc00)+0x10000;}else{if(z2){if((eD-=0x3)>-0x1)z3['push'](0xef,0xbf,0xbd);}}z2=null;if(z0<0x80){if((eD-=0x1)<0x0)break;z3[xb(0x234)](z0);}else{if(z0<0x800){if((eD-=0x2)<0x0)break;z3[xb(0x234)](z0>>0x6|0xc0,z0&0x3f|0x80);}else{if(z0<0x10000){if((eD-=0x3)<0x0)break;z3[xb(0x234)](z0>>0xc|0xe0,z0>>0x6&0x3f|0x80,z0&0x3f|0x80);}else{if(z0<0x110000){if((eD-=0x4)<0x0)break;z3['push'](z0>>0x12|0xf0,z0>>0xc&0x3f|0x80,z0>>0x6&0x3f|0x80,z0&0x3f|0x80);}else throw new Error(xb(0x166));}}}}return z3;}function D(ep){var xP=Cn,eD=[];for(var z0=0x0;z0<ep[xP(0x27c)];++z0){eD[xP(0x234)](ep[xP(0x276)](z0)&0xff);}return eD;}function e0(ep,eD){var xE=Cn,z0,z1,z2,z3=[];for(var z4=0x0;z4<ep['length'];++z4){if((eD-=0x2)<0x0)break;z0=ep[xE(0x276)](z4),z1=z0>>0x8,z2=z0%0x100,z3[xE(0x234)](z2),z3[xE(0x234)](z1);}return z3;}function e1(ep){return a['toByteArray'](g(ep));}function e2(ep,eD,z0,z1){var xy=Cn;for(var z2=0x0;z2<z1;++z2){if(z2+z0>=eD[xy(0x27c)]||z2>=ep[xy(0x27c)])break;eD[z2+z0]=ep[z2];}return z2;}function e3(ep,eD){var xM=Cn;return ep instanceof eD||ep!=null&&ep[xM(0x259)]!=null&&ep[xM(0x259)][xM(0x251)]!=null&&ep[xM(0x259)]['name']===eD['name'];}function e4(ep){return ep!==ep;}}[xq(0x277)](this,e(xq(0x29a))[xq(0x1f7)]));},{'base64-js':0xb,'buffer':0xc,'ieee754':0xd}],0xd:[function(e,z,o){var xS=U;o[xS(0x1bc)]=function(C,a,k,Z,R){var xG=xS,j,B,F=R*0x8-Z-0x1,n=(0x1<<F)-0x1,r=n>>0x1,H=-0x7,W=k?R-0x1:0x0,w=k?-0x1:0x1,O=C[a+W];W+=w,j=O&(0x1<<-H)-0x1,O>>=-H,H+=F;for(;H>0x0;j=j*0x100+C[a+W],W+=w,H-=0x8){}B=j&(0x1<<-H)-0x1,j>>=-H,H+=Z;for(;H>0x0;B=B*0x100+C[a+W],W+=w,H-=0x8){}if(j===0x0)j=0x1-r;else{if(j===n)return B?NaN:(O?-0x1:0x1)*Infinity;else B=B+Math[xG(0x142)](0x2,Z),j=j-r;}return(O?-0x1:0x1)*B*Math['pow'](0x2,j-Z);},o['write']=function(C,a,k,Z,R,j){var xc=xS,B,F,n,r=j*0x8-R-0x1,H=(0x1<<r)-0x1,W=H>>0x1,w=R===0x17?Math['pow'](0x2,-0x18)-Math[xc(0x142)](0x2,-0x4d):0x0,O=Z?0x0:j-0x1,v=Z?0x1:-0x1,N=a<0x0||a===0x0&&0x1/a<0x0?0x1:0x0;a=Math[xc(0x2e2)](a);if(isNaN(a)||a===Infinity)F=isNaN(a)?0x1:0x0,B=H;else{B=Math[xc(0x207)](Math['log'](a)/Math['LN2']);a*(n=Math[xc(0x142)](0x2,-B))<0x1&&(B--,n*=0x2);B+W>=0x1?a+=w/n:a+=w*Math['pow'](0x2,0x1-W);a*n>=0x2&&(B++,n/=0x2);if(B+W>=H)F=0x0,B=H;else B+W>=0x1?(F=(a*n-0x1)*Math[xc(0x142)](0x2,R),B=B+W):(F=a*Math['pow'](0x2,W-0x1)*Math['pow'](0x2,R),B=0x0);}for(;R>=0x8;C[k+O]=F&0xff,O+=v,F/=0x100,R-=0x8){}B=B<<R|F,r+=R;for(;r>0x0;C[k+O]=B&0xff,O+=v,B/=0x100,r-=0x8){}C[k+O-v]|=N*0x80;};},{}],0xe:[function(e,z,o){(function(C){'use strict';var xI=U;function a(k){var xV=U;if(!(this instanceof a))return new a(k);var Z=k['width'],R=k[xV(0x216)],j=[[-0x1,0x0,0x1],[-0x2,0x0,0x2],[-0x1,0x0,0x1]],d=[[-0x1,-0x2,-0x1],[0x0,0x0,0x0],[0x1,0x2,0x1]],B=[],F=[];function n(c){return function(V,h,I){return I=I||0x0,c[(Z*h+V)*0x4+I];};}var H=k['data'],W=n(H),w,O;for(O=0x0;O<R;O++){for(w=0x0;w<Z;w++){var v=W(w,O,0x0),N=W(w,O,0x1),P=W(w,O,0x2),E=(v+N+P)/0x3;F['push'](E,E,E,0xff);}}W=n(F);for(O=0x0;O<R;O++){for(w=0x0;w<Z;w++){var M=j[0x0][0x0]*W(w-0x1,O-0x1)+j[0x0][0x1]*W(w,O-0x1)+j[0x0][0x2]*W(w+0x1,O-0x1)+j[0x1][0x0]*W(w-0x1,O)+j[0x1][0x1]*W(w,O)+j[0x1][0x2]*W(w+0x1,O)+j[0x2][0x0]*W(w-0x1,O+0x1)+j[0x2][0x1]*W(w,O+0x1)+j[0x2][0x2]*W(w+0x1,O+0x1),q=d[0x0][0x0]*W(w-0x1,O-0x1)+d[0x0][0x1]*W(w,O-0x1)+d[0x0][0x2]*W(w+0x1,O-0x1)+d[0x1][0x0]*W(w-0x1,O)+d[0x1][0x1]*W(w,O)+d[0x1][0x2]*W(w+0x1,O)+d[0x2][0x0]*W(w-0x1,O+0x1)+d[0x2][0x1]*W(w,O+0x1)+d[0x2][0x2]*W(w+0x1,O+0x1),S=Math[xV(0x25f)](M*M+q*q)>>>0x0;B[xV(0x234)](S,S,S,0xff);}}var G=B;return typeof Uint8ClampedArray===xV(0x22b)&&(G=new Uint8ClampedArray(B)),G['toImageData']=function(){var xh=xV;return a[xh(0x12f)](G,Z,R);},G;}a[xI(0x12f)]=function k(Z,R,j){var xf=xI;if(typeof ImageData===xf(0x22b)&&Object[xf(0x245)][xf(0x12e)][xf(0x277)](Z)==='[object\x20Uint16Array]')return new ImageData(Z,R,j);else{if(typeof window===xf(0x1a5)&&typeof window[xf(0x203)]===xf(0x1a5)){var d=document['createElement'](xf(0x160));if(typeof d[xf(0x2f0)]===xf(0x22b)){var B=d['getContext']('2d'),F=B[xf(0x117)](R,j);return F['data'][xf(0x268)](Z),F;}else return new m(Z,R,j);}else return new m(Z,R,j);}};function m(Z,R,j){return{'width':R,'height':j,'data':Z};}if(typeof o!==xI(0x23f))typeof z!==xI(0x23f)&&z[xI(0x20b)]&&(o=z[xI(0x20b)]=a),o[xI(0x1a0)]=a;else typeof define===xI(0x22b)&&define[xI(0x11c)]?define([],function(){return a;}):C[xI(0x1a0)]=a;}(this));},{}]},{},[0x1]),delete window[xi(0x1b2)]);}function checkNeededElems(){var xs=U;return window&&document[xs(0x1cc)]('canvas')&&document[xs(0x1cc)](xs(0x1a3))&&document[xs(0x1cc)]('.selected')&&document[xs(0x1cc)](xs(0x1ac))[xs(0x2c8)][xs(0x2e9)]&&document[xs(0x1fd)](xs(0x1af))[xs(0x26c)]['length'];}function T(){var xJ=['width:100%;','setName','.selected','POST','./utils/Chunk','palettebox','subarray','zone','initialization','get','setTimeToEnd','https://raw.githubusercontent.com/TouchedByDarkness/PixelPlanet-Bot/master/secret.txt','readUInt16BE','shadowRoot','readUInt16LE','parent','arrayBuffer','img','read','Trying\x20to\x20access\x20beyond\x20buffer\x20length','lastUsing','getUint32','readFloatBE','apply','trim','`buffer`\x20v5.x.\x20Use\x20`buffer`\x20v4.x\x20if\x20you\x20require\x20old\x20browser\x20support.','center','min','addCover','Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2032-bits','fromByteArray','byteOffset','elems','\x20ms.','querySelector','float:right;','.bmp','Chunk\x20','dehydrate','file','Captcha','splice','drawImage','addMode','worldX','code','number','delete','fill','readAsDataURL','Cover\x20doesn\x27t\x20exist','grecaptcha','setBotStatus','readUInt32BE','toDataURL','writeUInt16BE','poolSize','botting','Cannot\x20find\x20module\x20\x27','chunkSize','pop','yStart','send','no\x20tmp','availableCovers','Index\x20out\x20of\x20range','_cover','fileInput','left','writeUIntLE','arraybuffer','clientY','forEach','table','RGBToId','requestPermission','currentMode','Buffer','copy','find','canLoad','ucs-2','920316VRCruW','getElementById','all','imageProcessor','fromCharCode','writeUInt8','reason','document','[WS]\x20An\x20error\x20occured\x20while\x20parsing\x20websocket\x20message','sobel','class','floor','getMode','species','offset\x20is\x20not\x20uint','exports','defineProperty','getUint16','botOnline','utf16le','settedPxls','timeConnected','info','colors','readDoubleBE','substring','height','valueOf','round','\x22value\x22\x20argument\x20is\x20out\x20of\x20bounds','strategyElement','or\x20Array-like\x20Object.\x20Received\x20type\x20','byteLength','onopen','bindColorsWithElements','Draw\x20clr\x20-\x20','appendChild','setInt8','SlowBuffer','blur','ssv','[WS]\x20Restarting\x20WebSocket','loaded','alloc','./utils/Palette','chunkList','imageData','function','switcher','lastIndexOf','\x20loading','\x20bytes','granted','hash','Try\x20to\x20init...','load\x20ch','push','.viewport','innerHTML','isConnecting','/chunks/0/','listeners','warn','swap32','instantiate','Last\x20pxl\x20-\x20','match','undefined','_isBuffer','absToTiled','setPixel','Invalid\x20string.\x20Length\x20must\x20be\x20a\x20multiple\x20of\x204','lastPxlElement','prototype','result','./utils/ImageProcessor','map','setBotOnline','binary','_arr','UNLOADED','1038776KffLBL','layers','writeInt16LE','equals','name','stop','isConnected','readIntBE','overrideEnds','Void\x20Bot','/me','importObject','constructor','createTextNode','The\x20\x22string\x22\x20argument\x20must\x20be\x20of\x20type\x20string.\x20Received\x20type\x20number','target','chunkGetTimeout','OP_CODE','sqrt','\x20...\x20','size:\x200x','error','maxLiveTime','interval','targetStart\x20out\x20of\x20bounds','_mode','utf8','set','writeDoubleLE','span','./functions','childNodes','IdToRGB','[WS]\x20creating\x20ProtocolClient','\x22size\x22\x20argument\x20must\x20be\x20of\x20type\x20number','hostname','[VB]\x20','\x22\x20is\x20invalid\x20for\x20argument\x20\x22value\x22','onBinaryMessage','setChunkGetTimeout','INSPECT_MAX_BYTES','charCodeAt','call','same','null','worldY','addEventListener','length','setUint8','toPrimitive','timeToEndElement','color','template','isBuffer','y\x20-\x20','focus','putImageData','writeUInt32BE','setAttribute','load','font-size:110%;','text','data','writeUIntBE','readInt8','port','toLowerCase','imageSmoothingEnabled','min-max','start','body','tiledToAbs','split','[WS]\x20return\x20code\x20-\x20','offset','woyken','writeInt16BE','buffer','tiledBorders','Time\x20to\x20end\x20-\x20','setCover','catch','clearChunkGetTimeout','then','chunks','filter','getTimeout','border-color:\x20darkred;\x20margin:\x203px\x200px\x203px\x200px;','readUInt8','https://voidserv.glitch%2Eme/online','random','allocUnsafeSlow','readUIntLE','background-color:black;\x20border-color:darkRed;\x20color:red;','origTemplate','clearTimeout','host','Attempt\x20to\x20write\x20outside\x20buffer\x20bounds','This\x20browser\x20lacks\x20typed\x20array\x20(Uint8Array)\x20support\x20which\x20is\x20required\x20by\x20','gameCanvas','getInt16','select','width','append','toLocaleString','_getIncrementalEdges','bind','time','<img\x20style=\x22width:inherit;\x20height:inherit;\x22\x20src=\x22','#palettebox','The\x20\x22value\x22\x20argument\x20must\x20not\x20be\x20of\x20type\x20number.\x20Received\x20type\x20number','root','writeInt8','[WS]\x20pxl\x20','getUint8','botStatusElement','stopped','convert','getPixelArea','modlist','[WS]\x20Socket\x20encountered\x20error,\x20closing\x20socket','Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2016-bits','The\x20\x22string\x22\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20or\x20ArrayBuffer.\x20','style','string','setInt16BE','x\x20-\x20','Can\x27t\x20find\x20element\x20for\x20color\x20[','readUIntBE','setTimer','The\x20value\x20\x22','toJSON','retCode\x20:\x20','val\x20must\x20be\x20string,\x20number\x20or\x20Buffer','shard','sobelData','head','files','onColorSelect','value','lastX','div','TYPED_ARRAY_SUPPORT','protocol','/ws','join','mousemove','setUInt32BE','setInt16','abs','compare','isArray','onclose','Wait\x20for\x20timer','Server\x20overload','The\x20first\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20ArrayBuffer,\x20Array,\x20','backgroundColor','type','close','Off','includes','entries','copyWithin','getContext','960639pOtQwF','hex','modeBot','1705440qYUEUu','__proto__','sourceEnd\x20out\x20of\x20bounds','download','CAPTCHA\x20appeared','onerror','Argument\x20must\x20be\x20a\x20Buffer','innerText','exception','1871430mFSmez','writeIntBE','right','button','getTime','chunkLoading','setColors','status','swap64','createImageData','void','LOADING','borders','Buffer.write(string,\x20encoding,\x20offset[,\x20length])\x20is\x20no\x20longer\x20supported','amd','yInput','Bots\x20online\x20-\x20','hydrate','need\x20tmp','timeout','kMaxLength','availableMods','coverBot','click','z-index:\x201;','readFloatLE','getPixel','clientX','startsWith','abort','location','getImageData','toString','toImageData','json','\x20m.','The\x20\x22target\x22\x20argument\x20must\x20be\x20one\x20of\x20type\x20Buffer\x20or\x20Uint8Array.\x20','xStart','userlvl','getData','from','removeChild','getTargets','base64','getCover','minimap-panel-button','_createTargets','Make\x20Void\x20great\x20again!','./resources/canvas','build','isView','image/png','pow','utf-16le','restart','attributes','intersects','input','isEncoding','MODULE_NOT_FOUND','attachShadow','writeInt32LE','ucs2','x\x20y\x20[r,g,b]','registerChunk','html','/api/modtools','hf\x20loves\x20males','timerElement','return\x20(function()\x20','onload','done','remmod','setMode','Unknown\x20encoding:\x20','The\x20bot\x20has\x20been\x20deactivated\x20or\x20you\x20have\x20a\x20connection\x20problem','console','xInput','loadChunk','trace','selected','half','canvas','ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/','indexOf','mozImageSmoothingEnabled','connect','setLastPxl','Invalid\x20code\x20point','garbageCollector','\x22length\x22\x20is\x20outside\x20of\x20buffer\x20bounds','deRegisterChunk','setUInt8','New\x20mode\x20-\x20','utf-8','./utils/functions','ascii','readInt32BE','ctx','replace','shadow','yEnd','lastY','Mode\x20doesn\x27t\x20exist','The\x20\x22buf1\x22,\x20\x22buf2\x22\x20arguments\x20must\x20be\x20one\x20of\x20type\x20Buffer\x20or\x20Uint8Array','lastTmpURL','Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2064-bits','maxLoadWaitTime','writeFloatBE','Stop','358090Lyhnuz','Received\x20type\x20','\x22></img>','search','xEnd','(((.+)+)+)+$','$1\x20','canPlace','createElement','readyState','Network\x20response\x20was\x20not\x20ok.','onmessage','writeDoubleBE','log','inspect','detect\x20template\x20\x22','\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers','\x0a\x20\x20\x20\x20#void-bot\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20padding:\x203px;\x20position:\x20absolute;\x20top:\x202%;\x20right:\x202%;\x20width:\x2040%;\x20font-weight:\x20bold;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20input{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20width:\x2060px;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20select{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20font:\x20inherit;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20button{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20font:\x20inherit;\x20margin:\x205px;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20.half{\x0a\x20\x20\x20\x20\x20\x20\x20\x20width:\x20calc(50%\x20-\x205px);\x20margin-left:5px;\x0a\x20\x20\x20\x20}\x0a','latin1','slice','coverElement','../resources/canvas.json','targets','cycle','readIntLE','setTemplate','7PeMKLv','permission','chess','http:','288520MtBGNe','_shuffle','include','Could\x20not\x20connect\x20to\x20server,\x20please\x20try\x20again\x20later\x20:(','override','canvasId','Sobel','writeFloatLE',')();','.coorbox','src','object','clear','write','signal','parentNode'];T=function(){return xJ;};return T();}function U(e,z){var o=T();return U=function(C,x){C=C-0x116;var a=o[C];return a;},U(e,z);}function tryInit(){var xl=U,a=(function(){var R=!![];return function(j,d){var B=R?function(){var xQ=U;if(d){var F=d[xQ(0x1c1)](j,arguments);return d=null,F;}}:function(){};return R=![],B;};}()),m=a(this,function(){var xX=U;return m['toString']()['search'](xX(0x181))['toString']()[xX(0x259)](m)[xX(0x17f)](xX(0x181));});m();var k=(function(){var R=!![];return function(j,d){var B=R?function(){if(d){var F=d['apply'](j,arguments);return d=null,F;}}:function(){};return R=![],B;};}()),Z=k(this,function(){var xt=U,R;try{var j=Function(xt(0x153)+'{}.constructor(\x22return\x20this\x22)(\x20)'+');');R=j();}catch(W){R=window;}var d=R[xt(0x15a)]=R['console']||{},B=[xt(0x189),'warn',xt(0x212),xt(0x262),xt(0x2fc),xt(0x1f3),xt(0x15d)];for(var F=0x0;F<B[xt(0x27c)];F++){var n=k[xt(0x259)]['prototype'][xt(0x2b7)](k),r=B[F],H=d[r]||n;n[xt(0x2f5)]=k['bind'](k),n[xt(0x12e)]=H[xt(0x12e)][xt(0x2b7)](H),d[r]=n;}});Z(),console['log'](xl(0x232)),checkNeededElems()?initialization():setTimeout(tryInit,0x64);}if(window[xu(0x226)])tryInit();else{const inject=()=>{var xL=xu;let e=document[xL(0x184)]('script');e[xL(0x236)]='('+tryInit+xL(0x1a2)+checkNeededElems+';'+initialization+';',document[xL(0x293)][xL(0x1a9)][xL(0x220)](e);};document[xu(0x185)]==='complete'?inject():window[xu(0x27b)](xu(0x288),inject);}
