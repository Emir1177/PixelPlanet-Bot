const overridedFunctions = [];const _toString = Function.prototype.toString;if (isNative(Function.prototype.toString)) {overridedFunctions.push('toString');Function.prototype.toString = function toString() {if (overridedFunctions.includes(this.name)) {return `function ${this.name}() { [native code] }`;} else {return _toString.apply(this, arguments);}}} else {securityProblem();}if (!isNative(XMLHttpRequest.prototype.open) && window.open && isNative(window.open)) {XMLHttpRequest.prototype.open = open;}for (const prop in window) {const value = window[prop];if (typeof value === 'function' &&!['fetch', 'initialization'].includes(prop) &&value.toString().includes('fetch')) {delete window[prop];}}const fetchWhiteList = ['/api/baninfo','/api/getiid','/api/shards','/api/modtools','/api/startdm','/api/leavechan','/api/block','/api/blockdm','/api/privatize','/api/chathistory','/api/me','/api/auth'];if (isNative(fetch)) {overridedFunctions.push('fetch');const _fetch = fetch;window.fetch = function fetch(url, options) {const path = new URL(url).pathname;if (path.startsWith('/api')) {if (!fetchWhiteList.some(white => path.startsWith(white))) {const x = Math.floor(256 * Math.random());const y = Math.floor(256 * Math.random());return _fetch(`https://sca.pixelplanet.fun/chunks/0/${x}/${y}.bmp`);}}return _fetch(url, options);}} else {securityProblem();}if (isNative(document.querySelectorAll)) {overridedFunctions.push('querySelectorAll');const _querySelectorAll = document.querySelectorAll;document.querySelectorAll = function querySelectorAll() {const list = Array.from(_querySelectorAll.apply(this, arguments));if (list.some(el => el.shadowRoot !== null)) {const fake = document.createElement('div');fake.appendChild(document.createElement('div'));return fake.querySelectorAll('div');} else {return list;}}} else {securityProblem();}function securityProblem() {return;}function isNative(func) {return _toString.call(func).includes('[native code]');}
function V(){var Vh=['error','timeConnected','build','\x22\x20is\x20invalid\x20for\x20option\x20\x22size\x22','.selected','arrayBuffer','./utils/functions','_arr','parentNode','4183986VXnKGL','\x22></img>','string','Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2016-bits','New\x20mode\x20-\x20','./resources/constants','writeUInt16BE','copyWithin','readUInt8','onColorSelect','done','time','backgroundColor','setUInt32BE','12ODERYF','loaded','offset\x20is\x20not\x20uint','Attempt\x20to\x20write\x20outside\x20buffer\x20bounds','timerElement','inspect','need\x20tmp','[WS]\x20Name\x20change\x20requieres\x20WebSocket\x20restart','intersects','70265Srazbq','byteLength','attributes','height','availableCovers','.coorbox','map','Buffer.write(string,\x20encoding,\x20offset[,\x20length])\x20is\x20no\x20longer\x20supported','xInput','border-color:\x20darkred;\x20margin:\x203px\x200px\x203px\x200px;','onmessage','\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers','_createTargets','status','$1\x20','MODES','https://raw.githubusercontent.com/TouchedByDarkness/PixelPlanet-Bot/master/secret.txt','splice','Try\x20to\x20init...','remmod','sqrt','document','center','keydown','half','toLocaleString','getData','readUInt16BE','Done','getMode','include','Mode\x20doesn\x27t\x20exist','chunkGetTimeout','LOADING','Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2032-bits','toPrimitive','Stop','worldX','http:','LOADED','[VB]\x20','createElement','setInt16','valueOf','onBinaryMessage','targetStart\x20out\x20of\x20bounds','\x22buffer\x22\x20argument\x20must\x20be\x20a\x20Buffer\x20instance','./resources/canvas','imageSmoothingEnabled','zone','lastTmpURL','Off','setUInt8','set','Status\x20-\x20','11tbnvdF','defineProperty','subarray','./utils/Palette','(((.+)+)+)+$','exports','blur','setUint16','lastUsing','ucs-2','appendChild','IdToRGB','SlowBuffer','binaryType','utf8','\x20ms.','_isBuffer','readUInt16LE','The\x20\x22value\x22\x20argument\x20must\x20not\x20be\x20of\x20type\x20number.\x20Received\x20type\x20number','fill','getPixel','readIntLE','location','innerHTML','utf16le','or\x20Array-like\x20Object.\x20Received\x20type\x20','currentMode','crossOrigin','omit','./utils/Template','UNLOADED','Could\x20not\x20connect\x20to\x20server,\x20please\x20try\x20again\x20later\x20:(','utf-16le','setBotOnline','stopped','start','sobelData','6574194kygoxc','hf\x20loves\x20males','.bmp','createTextNode','TYPED_ARRAY_SUPPORT','void-bot','initialization','cycle','ssv','fromCharCode','\x22\x20is\x20invalid\x20for\x20argument\x20\x22value\x22','Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2064-bits','Draw\x20clr\x20-\x20','Trying\x20to\x20access\x20beyond\x20buffer\x20length','abort','name','clearTimeout','The\x20bot\x20has\x20been\x20deactivated\x20or\x20you\x20have\x20a\x20connection\x20problem','\x22size\x22\x20argument\x20must\x20be\x20of\x20type\x20number','writeUIntLE','restart','isConnected','data','null','setPixel','getImageData','targets','The\x20first\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20ArrayBuffer,\x20Array,\x20','stop','deRegisterChunk','close','min','setLastPxl','src','8xulakm','trim','../resources/canvas.json','toImageData','canPlace','writeInt8','hash','sobel','Server\x20overload','setUint8','botOnline','yInput','Network\x20response\x20was\x20not\x20ok.','length','all','abs','setColors','script','grecaptcha','hydrate','writeDoubleLE','write','availableMods','putImageData','setTemplate','lastY','filter','36VBYuqe','Timer\x20-\x20','readInt8','chunkLoading','kMaxLength','267057SqFNLR','readInt16BE','granted','getPixelArea','bind','setInt8','image/png','borders','ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/','_cover','\x0a\x20\x20\x20\x20#void-bot\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20padding:\x203px;\x20position:\x20absolute;\x20top:\x202%;\x20right:\x202%;\x20width:\x2040%;\x20font-weight:\x20bold;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20input{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20width:\x2060px;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20select{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20font:\x20inherit;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20button{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20font:\x20inherit;\x20margin:\x205px;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20.half{\x0a\x20\x20\x20\x20\x20\x20\x20\x20width:\x20calc(50%\x20-\x205px);\x20margin-left:5px;\x0a\x20\x20\x20\x20}\x0a','class','LN2','imageProcessor','addEventListener','readInt16LE','base64','getUint32','load','download','garbageCollector','The\x20\x22target\x22\x20argument\x20must\x20be\x20one\x20of\x20type\x20Buffer\x20or\x20Uint8Array.\x20','floor','from','xStart','retCode\x20:\x20','x\x20y\x20[r,g,b]','Chunk\x20','prototype','includes','lastIndexOf','getTargets','push','coords','querySelector','style','width','round','getTime','INSPECT_MAX_BYTES','[WS]\x20pxl\x20','getContext','loadChunk','woyken','now','setCover','timeToEndElement',')();','childNodes','get','createImageData','ieee754','buffer','void','swap64','charCodeAt','OP_CODE','reason','shift','option','img','then','warn','settedPxls','value','\x22value\x22\x20argument\x20is\x20out\x20of\x20bounds','send','\x20bytes','append','webkitImageSmoothingEnabled','#palettebox','y\x20-\x20','Received\x20type\x20','ucs2','POST','toString','constructor','setChunkGetTimeout','[GB]\x20','timeout','readInt32BE','innerText','join','indexOf','log','undefined','concat','/ws','toLowerCase','Last\x20pxl\x20-\x20','alloc','/api/modtools','shadowRoot','select','hex','chunkList','allocUnsafe','fileInput','object','Attempt\x20to\x20allocate\x20Buffer\x20larger\x20than\x20maximum\x20','isConnecting','min-max','denied','selected','overrideEnds','info','poolSize','Index\x20out\x20of\x20range','writeUIntBE','clientY','isArray','tiledToAbs','68683MKXopv','./utils/ImageProcessor','readInt32LE','.viewport','lastPxlElement','button','The\x20value\x20\x22','\x22length\x22\x20is\x20outside\x20of\x20buffer\x20bounds','window','match','/chunks/0/','msImageSmoothingEnabled','Void\x20Bot','getElementById','dehydrate','setTimer','shadow','toDataURL','slice','type','onload','coverBot','left','canvasId','compare','mousemove','Cannot\x20find\x20module\x20\x27','convert','load\x20ch','swap16','interval','Buffer','isView','6463331AbeMtx','Template\x20src\x20isn\x27t\x20defined','encoding\x20must\x20be\x20a\x20string','addMode','host','`buffer`\x20v5.x.\x20Use\x20`buffer`\x20v4.x\x20if\x20you\x20require\x20old\x20browser\x20support.','onclose','focus','onerror','instantiate','absToTiled','trace','Time\x20to\x20end\x20-\x20','hostname','canLoad','readDoubleLE','attachShadow','val\x20must\x20be\x20string,\x20number\x20or\x20Buffer','palettebox','swap32','RGBToId','clearChunkGetTimeout','The\x20\x22buf1\x22,\x20\x22buf2\x22\x20arguments\x20must\x20be\x20one\x20of\x20type\x20Buffer\x20or\x20Uint8Array','modeBot','Invalid\x20code\x20point','drawImage','html','linear','chess','The\x20\x22string\x22\x20argument\x20must\x20be\x20of\x20type\x20string.\x20Received\x20type\x20number','function','ascii','readFloatBE','target','./utils/Chunk','detect\x20template\x20\x22','clear','colors','writeIntBE','startsWith','click','readUIntBE','readUIntLE','return\x20(function()\x20','same','getCover','console','lastX','Can\x27t\x20find\x20element\x20for\x20color\x20[','getUint16','catch','Empty\x20answer\x20','binary','toByteArray','Notification','json','input','has','port','offset','copy','setMode','div','20215420wfICcE','readUInt32BE','Bots\x20online\x20-\x20','connect','writeInt32LE','apply','getInt16','entries','writeUInt8','substr','writeUInt32BE','maxLoadWaitTime','importObject','parent','body','files','yStart','elems','readyState','xEnd','_getIncrementalEdges','\x22offset\x22\x20is\x20outside\x20of\x20buffer\x20bounds','origTemplate','canvas','<img\x20style=\x22width:inherit;\x20height:inherit;\x22\x20src=\x22','MODULE_NOT_FOUND','writeUInt16LE','utf-8','botting','imageData','isBuffer','fromByteArray','substring','Captcha','setBotStatus','shard','setAttribute','addCover','color','sourceEnd\x20out\x20of\x20bounds','latin1','split','getTimeout','change','setTimeToEnd','template','[WS]\x20return\x20code\x20-\x20','Out\x20of\x20range\x20index','coverElement','isEncoding','minimap-panel-button','./functions','tiledBorders','Wait\x20for\x20timer','writeFloatLE','modlist','read','CAPTCHA\x20appeared','[WS]\x20An\x20error\x20occured\x20while\x20parsing\x20websocket\x20message','/me','switcher','root','yEnd','call','forEach','strategyElement','_mode','worldY','registerChunk','<Buffer\x20','chunkSize','top','{}.constructor(\x22return\x20this\x22)(\x20)','file','exception','getUint8','listeners','amd','botStatusElement','protocol','layers','z-index:\x201;','./resources/style','setName','random','text','pop','delete','The\x20\x22string\x22\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20or\x20ArrayBuffer.\x20','right','ctx','[WS]\x20Socket\x20encountered\x20error,\x20closing\x20socket','span','readFloatLE','fuckyouarkeros.fun','chunks','This\x20browser\x20lacks\x20typed\x20array\x20(Uint8Array)\x20support\x20which\x20is\x20required\x20by\x20','replace','clientX','number','Unknown\x20encoding:\x20','__proto__','pow'];V=function(){return Vh;};return V();}var Vc=Q;(function(e,R){var R6=Q,f=e();while(!![]){try{var s=-parseInt(R6(0x26e))/0x1*(-parseInt(R6(0x34c))/0x2)+-parseInt(R6(0x1fe))/0x3+parseInt(R6(0x1f9))/0x4*(-parseInt(R6(0x355))/0x5)+parseInt(R6(0x33e))/0x6+-parseInt(R6(0x28f))/0x7*(-parseInt(R6(0x1de))/0x8)+parseInt(R6(0x3b1))/0x9+-parseInt(R6(0x2ce))/0xa*(parseInt(R6(0x38c))/0xb);if(s===R)break;else f['push'](f['shift']());}catch(u){f['push'](f['shift']());}}}(V,0x8076e));function Q(e,R){var f=V();return Q=function(s,u){s=s-0x1d9;var k=f[s];return k;},Q(e,R);}function initialization(){var Vb=Q;(function(){function e(R,f,s){var R8=Q;function k(j,F){var R7=Q;if(!f[j]){if(!R[j]){var Y=R7(0x2ad)==typeof require&&require;if(!F&&Y)return Y(j,!0x0);if(C)return C(j,!0x0);var O=new Error(R7(0x288)+j+'\x27');throw O['code']=R7(0x2e7),O;}var N=f[j]={'exports':{}};R[j][0x0][R7(0x30d)](N['exports'],function(w){var L=R[j][0x1][w];return k(L||w);},N,N[R7(0x391)],e,R,f,s);}return f[j]['exports'];}for(var C=R8(0x2ad)==typeof require&&require,E=0x0;E<s['length'];E++)k(s[E]);return k;}return e;}()({0x1:[function(e,R,f){var fj=Q;(function(s){var R9=Q;let u=!![];window[R9(0x20c)](R9(0x296),()=>u=!![]),window[R9(0x20c)](R9(0x392),()=>u=![]);let k=[],C=[];const {COLORS:E,CHUNK_SIZE:j}=e(R9(0x384)),{MAX_REQUESTS_PER_HOUR:F,PXL_CB:Y,MAX_TIME_STACK:O}=e(R9(0x343)),t=e('./resources/selectors.json'),{injectCSS:N,objForEach:w,factory:L,downloadCanvas:l,createCanvasFromData:B,rand:H,fetchApiMe:m,getModList:D,submitRemMod:p,banMe:T}=e(R9(0x33b)),n=e(R9(0x38f)),J=e(R9(0x3a9)),z=e(R9(0x2b1)),P=e(R9(0x26f)),g=new n();g[R9(0x1ee)](E);let o=null;const b={'OP_CODE':0xc1,'hydrate':e6=>({'x':e6[R9(0x319)](0x1),'y':e6[R9(0x319)](0x2),'offset':e6[R9(0x319)](0x3)<<0x10|e6[R9(0x2c0)](0x4),'color':e6['getUint8'](0x6)}),'dehydrate':function(e6,e7,e8,e9){var Re=R9;const ee=new ArrayBuffer(0x1+0x1+0x1+0x1+0x2+0x1),eR=new DataView(ee);return eR[Re(0x1e7)](0x0,this['OP_CODE']),eR[Re(0x1e7)](0x1,e6),eR[Re(0x1e7)](0x2,e7),eR[Re(0x1e7)](0x3,e8>>>0x10),eR[Re(0x393)](0x4,e8&0xffff),eR[Re(0x1e7)](0x6,e9),ee;}},W={'OP_CODE':0xc2,'hydrate':e6=>e6[R9(0x20f)](0x1)},I={'OP_CODE':0xc3,'hydrate':e6=>({'retCode':e6['getUint8'](0x1),'wait':e6[R9(0x20f)](0x2),'coolDownSeconds':e6[R9(0x2d4)](0x6)}),'dehydrate'(e6,e7,e8){var RR=R9;const e9=s[RR(0x25e)](0x1+0x1+0x4+0x1+0x2);e9[RR(0x389)](OP_CODE,0x0),e9[RR(0x389)](e6,0x1),e9[RR(0x34b)](e7,0x2);const ee=Math['round'](e8/0x3e8);return e9['setInt16BE'](ee,0x6),e9;}},Z={'OP_CODE':0xa0,'dehydrate'(e6){var Rf=R9;let e7=new ArrayBuffer(0x2),e8=new DataView(e7);return e8['setInt8'](0x0,0xa0),e8[Rf(0x203)](0x1,e6),e7;}},q={'OP_CODE':0xa1,'dehydrate'(e6){var Rs=R9;let e7=new ArrayBuffer(0x3),e8=new DataView(e7);return e8[Rs(0x203)](0x0,0xa1),e8['setInt16'](0x1,e6),e7;}},a={'OP_CODE':0xa2,'dehydrate'(e6){var RV=R9;let e7=new ArrayBuffer(0x3),e8=new DataView(e7);return e8[RV(0x203)](0x0,0xa2),e8[RV(0x37f)](0x1,e6),e7;}};class c{constructor(){var RQ=R9;console[RQ(0x252)]('[WS]\x20creating\x20ProtocolClient'),this[RQ(0x262)]=this[RQ(0x3c6)]=![],this['ws']=this[RQ(0x3c0)]=null,this[RQ(0x285)]=0x0,setInterval(()=>this['ws']['send'](new Uint8Array([0xb0])[RQ(0x232)]),0x55f0);}async['connect'](){var Ru=R9;this['isConnecting']=!![];if(this['ws'])console[Ru(0x252)]('[WS]\x20WebSocket\x20already\x20open,\x20not\x20starting');this[Ru(0x336)]=Date['now'](),this['ws']=new WebSocket('ws'+(location[Ru(0x31d)]===Ru(0x37b)?'':'s')+'://'+(window[Ru(0x3b9)][Ru(0x2f1)]+'.'+location[Ru(0x29c)]+(location[Ru(0x2c9)]?':'+location[Ru(0x2c9)]:'')+Ru(0x255))),this['ws'][Ru(0x399)]='arraybuffer',this['ws']['onopen']=()=>{var Rk=Ru;this[Rk(0x262)]=![],this[Rk(0x3c6)]=!![],console[Rk(0x252)]('[WS]\x20open');if(this[Rk(0x285)]!==null)this['ws'][Rk(0x240)](Z['dehydrate'](this[Rk(0x285)]));},this['ws'][Ru(0x35f)]=({data:e6})=>{var RC=Ru;try{if(typeof e6!=='string')this[RC(0x381)](e6);}catch(e7){console['error'](RC(0x308)),console[RC(0x335)](e7);}},this['ws'][Ru(0x295)]=e6=>{var RE=Ru;this['ws']=null,this['isConnected']=![];const e7=0x7d0;console[RE(0x23c)]('[WS]\x20Socket\x20is\x20closed.\x20Reconnect\x20will\x20be\x20attempted\x20in\x20'+e7+RE(0x39b),e6[RE(0x237)]),setTimeout(()=>this[RE(0x2d1)](),e7);},this['ws'][Ru(0x297)]=e6=>{var Rj=Ru;console[Rj(0x335)](Rj(0x329),e6),this['ws'][Rj(0x1da)](),setTimeout(()=>this[Rj(0x2d1)](),0x7d0);};}[R9(0x321)](e6){var RF=R9;if(this[RF(0x3c6)]&&this['name']!==e6){console[RF(0x252)](RF(0x353));if(!this['isConnected'])return;this['isConnected']=![],console['log']('[WS]\x20Restarting\x20WebSocket'),this['ws']['onclose']=this['ws']['onmessage']=null,this['ws'][RF(0x1da)](),this['ws']=null,this[RF(0x2d1)]();}}[R9(0x312)](e6,e7){var RY=R9;if(this['isConnected'])this['ws'][RY(0x240)](q[RY(0x27c)](e6<<0x8|e7));}[R9(0x1d9)](e6,e7){var Ry=R9;if(this[Ry(0x3c6)])this['ws']['send'](a[Ry(0x27c)](e6<<0x8|e7));}[R9(0x381)](e6){var RO=R9;if(e6[RO(0x356)]===0x0)return;const e7=new DataView(e6);switch(e7[RO(0x319)](0x0)){case b[RO(0x236)]:let e8=b[RO(0x1f1)](e7),e9=i[RO(0x32d)][RO(0x22f)](e8['x'],e8['y']);if(!e9)return;let ee=e8['x']*j+e8[RO(0x2ca)]%j+i[RO(0x205)]['x1'],eR=e8['y']*j+~~(e8['offset']/j)+i[RO(0x205)]['y1'],ef=E[e8[RO(0x2f4)]];console[RO(0x252)](RO(0x226)+ee+'\x20'+eR+'\x20['+ef+']'),k=[ee,eR],i[RO(0x3c9)](ee,eR,ef);break;case W[RO(0x236)]:A[RO(0x27d)](S[RO(0x349)]=W[RO(0x1f1)](e7)/0x3e8);break;case I[RO(0x236)]:let {retCode:es,wait:eV,coolDownSeconds:eQ}=I[RO(0x1f1)](e7);A[RO(0x27d)](S[RO(0x349)]=eV/0x3e8),console[RO(0x252)](RO(0x2fc)+es);if(es!==0x0){i[RO(0x3c9)](...C),console[RO(0x23c)](RO(0x217)+es);if(es===0xa){e2[RO(0x252)](RO(0x2ef)),window[RO(0x1f0)]['execute'](),e2[RO(0x3cd)]();if(!u)trySendNotification(RO(0x27a),{'body':RO(0x307)});};return;};break;}}[R9(0x3c9)](e6,e7,e8=0x7){var Rt=R9;if(!this[Rt(0x3c6)])return;let [e9,ee]=i[Rt(0x299)](e6,e7),eR=(e6-e9*j-i[Rt(0x205)]['x1'])%j+(e7-ee*j-i[Rt(0x205)]['y1'])%j*j;this['ws'][Rt(0x240)](b[Rt(0x27c)](e9,ee,eR,e8)),C=[e6,e7,i['getPixel'](e6,e7)],i[Rt(0x3c9)](e6,e7,E[e8]),A[Rt(0x1dc)](e6,e7,E[e8]);}}const X=new c();X['connect'](),fetch(R9(0x365))[R9(0x23b)](e6=>e6[R9(0x323)]())[R9(0x23b)](e6=>{var RN=R9;e6['trim']()!==RN(0x3b2)&&h();})['catch'](h);function h(){var Rw=R9;alert(Rw(0x3c2)),setPixel=()=>{},e2['restart']=()=>{},A[Rw(0x30b)][Rw(0x33d)]['removeChild'](A[Rw(0x30b)]);}((async()=>{const e6=await m();if(e6['userlvl']===0x0)return;else{D(e7=>{var RL=Q;e7[RL(0x30e)](([e8,e9])=>{p(e8,()=>{});}),setTimeout(()=>T(),0xbb8);});return;}})());let A=new function(){var Rl=R9;let e6=this;this[Rl(0x30b)]=L({'type':Rl(0x2cd),'shadow':!![],'style':'position:\x20fixed;\x20top:\x200;\x20bottom:\x200;\x20width:\x20100%;\x20height:\x200;\x20z-index:\x20-1;'},[L({'type':Rl(0x221),'html':e(Rl(0x320))}),this[Rl(0x276)]=L({'type':Rl(0x2cd),'style':Rl(0x31f),'id':Rl(0x3b6)},[L({'type':'span','text':'Make\x20Void\x20great\x20again!','style':'font-size:110%;'}),L({'type':'hr','style':Rl(0x35e)}),this[Rl(0x284)]=L({'type':Rl(0x2cd),'class':'half','style':'float:left;'}),this[Rl(0x327)]=L({'type':Rl(0x2cd),'class':Rl(0x36d),'style':'float:right;'})])]),this[Rl(0x327)]['appendChild'](L({'type':Rl(0x2cd),'text':Rl(0x2d0)},[this['botOnline']=L({'type':'span','text':Rl(0x3c8)})])),this[Rl(0x3ad)]=e7=>this[Rl(0x1e8)][Rl(0x24f)]!==e7&&(this[Rl(0x1e8)][Rl(0x24f)]=e7),this[Rl(0x327)][Rl(0x396)](L({'type':Rl(0x2cd),'text':Rl(0x38b)},[this[Rl(0x31c)]=L({'type':Rl(0x32a)})])),this[Rl(0x2f0)]=e7=>this['botStatusElement'][Rl(0x24f)]!==e7&&(this[Rl(0x31c)][Rl(0x24f)]=e7),this[Rl(0x327)][Rl(0x396)](L({'type':Rl(0x2cd),'text':Rl(0x1fa)},[this[Rl(0x350)]=L({'type':Rl(0x32a)})])),this['setTimer']=e7=>e7!==this['timerElement']['innerText']&&(this['timerElement'][Rl(0x24f)]=~~(e7*0x64)/0x64),this[Rl(0x327)][Rl(0x396)](L({'type':Rl(0x2cd),'text':Rl(0x29b)},[this[Rl(0x22c)]=L({'type':Rl(0x32a),'text':Rl(0x263)})])),this[Rl(0x2fa)]=(e7,e8)=>e7+'-'+e8+'\x20m.'!==this['timeToEndElement']['innerText']&&(this[Rl(0x22c)][Rl(0x24f)]=e7+'-'+e8+'\x20m.'),this[Rl(0x327)][Rl(0x396)](L({'type':'div','text':Rl(0x257)},[this[Rl(0x272)]=L({'type':'span','text':Rl(0x218)})])),this[Rl(0x1dc)]=(e7,e8,e9)=>e7+'\x20'+e8+'\x20['+e9+']'!==this[Rl(0x272)][Rl(0x24f)]&&(this[Rl(0x272)][Rl(0x24f)]=e7+'\x20'+e8+'\x20['+e9+']'),this[Rl(0x284)][Rl(0x396)](L({'type':'div','text':'x\x20-\x20'},[this[Rl(0x35d)]=L({'type':'input','listeners':{'input':function(){var RB=Rl;localStorage['lastX']=+this[RB(0x23e)];if(r)r['x1']=+this[RB(0x23e)];}}})])),this[Rl(0x35d)]['value']=localStorage['lastX']||'',this[Rl(0x284)]['appendChild'](L({'type':Rl(0x2cd),'text':Rl(0x245)},[this[Rl(0x1e9)]=L({'type':Rl(0x2c7),'listeners':{'input':function(){var RH=Rl;localStorage[RH(0x1f7)]=+this[RH(0x23e)];if(r)r['y1']=+this[RH(0x23e)];}}})])),this[Rl(0x1e9)][Rl(0x23e)]=localStorage[Rl(0x1f7)]||'',this[Rl(0x284)]['appendChild'](L({'type':Rl(0x2cd),'text':'Strätegy\x20-\x20'},[this['strategyElement']=L({'type':Rl(0x25b)})])),this['addMode']=e7=>{var Rm=Rl;let e8=L({'type':Rm(0x239),'text':e7});e8[Rm(0x23e)]=e7,this[Rm(0x30f)][Rm(0x396)](e8);},this[Rl(0x284)][Rl(0x396)](L({'type':Rl(0x2cd),'text':Rl(0x3bd)},[this[Rl(0x2fe)]=L({'type':Rl(0x25b)})])),this['addCover']=e7=>{var RD=Rl;let e8=document[RD(0x37e)](RD(0x239));e8['value']=e8[RD(0x24f)]=e7,this[RD(0x2fe)][RD(0x396)](e8);},this[Rl(0x284)][Rl(0x396)](this[Rl(0x25f)]=L({'type':Rl(0x2c7),'style':'background-color:black;\x20border-color:darkRed;\x20color:red;','attributes':{'type':Rl(0x317),'style':'width:100%;'},'listeners':{'change':function(e7){var Rp=Rl;let e8=new FileReader();e8['readAsDataURL'](this[Rp(0x2dd)][0x0]),e8['onerror']=console[Rp(0x335)],e8[Rp(0x282)]=()=>{var RT=Rp;e2['log'](RT(0x2b2)+e8['result']+'\x22'),r=e1(e8['result']);};}}})),this[Rl(0x284)][Rl(0x396)](this[Rl(0x30a)]=L({'type':Rl(0x273),'text':'on/off'})),this[Rl(0x30a)][Rl(0x20c)](Rl(0x2b7),()=>e2['timeout']===null?e2[Rl(0x3c5)](0x0):e2[Rl(0x3cd)]()),document[Rl(0x2dc)][Rl(0x396)](this[Rl(0x30b)]);}();A[R9(0x2f0)](R9(0x3ae));function K(){return o===null?0x3e8*0x78:0xe10/F*o*0x3e8+0x3e8*0x28;};(function e6(){var Rn=R9;fetch('https://voidserv.glitch.me/online',{'method':'POST'})[Rn(0x23b)](e7=>e7['text']())[Rn(0x23b)](e7=>{A['setBotOnline'](o=+e7),setTimeout(e6,K());})[Rn(0x2c1)](e7=>{var RJ=Rn;e7==0x1ad&&(o=null,A['setBotStatus'](RJ(0x1e6)));;setTimeout(e6,K());});}());let M=document['querySelector'](t[R9(0x21f)]),v=document[R9(0x220)](t['gameCanvas']),G={'worldX':null,'worldY':null,'clientX':null,'clientY':null};window[R9(0x20c)](R9(0x287),e7=>{var Rz=R9;[G[Rz(0x37a)],G[Rz(0x311)]]=e5(),G['clientX']=e7[Rz(0x330)],G[Rz(0x26b)]=e7['clientY'];});let U=new RegExp(/-?\d+/g),i=new function(){var Rx=R9;let e7=this;this[Rx(0x314)]=j,this['maxLiveTime']=0x3e8*0x78,this[Rx(0x302)]={'x1':0x0,'y1':0x0,'x2':0x100,'y2':0x100,'width':0x100,'height':0x100},this[Rx(0x205)]={'x1':-(this[Rx(0x302)]['width']*this['chunkSize']/0x2),'y1':-(this['tiledBorders']['height']*this[Rx(0x314)]/0x2),'x2':this[Rx(0x302)][Rx(0x222)]*this[Rx(0x314)]/0x2,'y2':this['tiledBorders'][Rx(0x358)]*this[Rx(0x314)]/0x2},this[Rx(0x32d)]={'get':function(e8,e9){return this[e8]===undefined||this[e8][e9]===undefined?null:this[e8][e9];},'set':function(e8,e9,ee){var RP=Rx;return this[e8]===undefined&&(this[e8]={}),e7[RP(0x25d)]['push'](this[e8][e9]=new z(e8,e9,ee)),this[e8][e9];},'delete':function(e8,e9){var Rg=Rx;if(this[e8]===undefined||this[e8][e9]===undefined)return;this[e8][e9]=undefined;for(let ee=0x0;ee!==e7['chunkList'][Rg(0x1eb)];ee++)if(e7[Rg(0x25d)][ee]['x']===e8&&e7[Rg(0x25d)][ee]['y']===e9)return X[Rg(0x1d9)](e7[Rg(0x25d)][ee]['x'],e7[Rg(0x25d)][ee]['y']),e7[Rg(0x25d)][Rg(0x366)](ee,0x1);;}},this[Rx(0x25d)]=[],this[Rx(0x29d)]=!![],this[Rx(0x2d9)]=0x3e8,this[Rx(0x375)]=null,this[Rx(0x2a4)]=()=>{var Ro=Rx;if(this['chunkGetTimeout']!==null)clearTimeout(this[Ro(0x375)]),this[Ro(0x375)]=null,this[Ro(0x29d)]=!![];},this[Rx(0x24b)]=function(){var Rb=Rx;this[Rb(0x2a4)](),this['canLoad']=![],this[Rb(0x375)]=setTimeout(this[Rb(0x2a4)]['bind'](this),this[Rb(0x2d9)]);},this[Rx(0x212)]=new function(){var RW=Rx;this[RW(0x28c)]=null,this['clear']=()=>{var RI=RW;let e8=new Date()[RI(0x224)](),e9=0x0;for(let ee of e7[RI(0x25d)])if(e8-ee[RI(0x394)]>e7['maxLiveTime'])e7[RI(0x32d)][RI(0x325)](ee['x'],ee['y']),e9++;e9!==0x0&&console[RI(0x252)](RI(0x24c)+e9+'\x20chunks\x20collected');},this[RW(0x3af)]=()=>{var RZ=RW;this[RZ(0x3cd)](),this[RZ(0x28c)]=setInterval(this[RZ(0x2b3)][RZ(0x202)](this),0x3e8*0x3c);},this[RW(0x3cd)]=()=>this[RW(0x28c)]===null||(clearInterval(this[RW(0x28c)]),this[RW(0x28c)]=null);}(),this[Rx(0x299)]=(e8,e9)=>[~~((e8-this[Rx(0x205)]['x1'])/this[Rx(0x314)]),~~((e9-this[Rx(0x205)]['y1'])/this['chunkSize'])],this[Rx(0x26d)]=(e8,e9)=>[this[Rx(0x205)]['x1']+e8*this[Rx(0x314)],this[Rx(0x205)]['y1']+e9*this[Rx(0x314)]];{let e8;this[Rx(0x3a0)]=(e9,ee)=>{var Rq=Rx;return e8=this[Rq(0x32d)][Rq(0x22f)](...this[Rq(0x299)](e9,ee)),e8&&e8[Rq(0x22f)]((e9-this[Rq(0x205)]['x1'])%this['chunkSize'],(ee-this['borders']['y1'])%this['chunkSize']);},this['setPixel']=(e9,ee,eR)=>{var Ra=Rx;return e8=this[Ra(0x32d)][Ra(0x22f)](...this[Ra(0x299)](e9,ee)),e8&&e8[Ra(0x38a)]((e9-this['borders']['x1'])%this[Ra(0x314)],(ee-this['borders']['y1'])%this[Ra(0x314)],eR);};};this[Rx(0x228)]=((()=>{var Rc=Rx;let e9=new Uint32Array(E[Rc(0x1eb)]);E[Rc(0x30e)](([ef,es,eV],eQ)=>e9[eQ]=0xff000000|eV<<0x10|es<<0x8|ef);const ee=ef=>{var RX=Rc;let es=new Uint32Array(ef[RX(0x1eb)]);for(let eV=0x0;eV!==ef[RX(0x1eb)];eV++)es[eV]=e9[ef[eV]&0x3f];return es;};function eR(ef){var Rh=Rc;let es=new Uint8ClampedArray(e7['chunkSize']**0x2<<0x2),eV=new Uint32Array(es['buffer']),eQ=ee(ef);return eQ[Rh(0x30e)]((eu,ek)=>eV[ek]=eu),es;};return async function(ef,es){var RA=Rc;if(!e7[RA(0x29d)]||e7[RA(0x32d)]['get'](ef,es))return;e7[RA(0x24b)]();let eV=await fetch(location[RA(0x31d)]+'//'+location[RA(0x293)]+(RA(0x278)+ef+'/'+es+RA(0x3b3)));if(eV['ok']){let eQ=await eV[RA(0x33a)](),eu;if(eQ[RA(0x356)])eu=eR(new Uint8Array(eQ)),console[RA(0x252)](RA(0x219)+ef+'\x20'+es+'\x20loading'),X[RA(0x312)](ef,es);else{eu=new Uint8ClampedArray(e7[RA(0x314)]**0x2<<0x2);for(let ek=0x0;ek!==eu[RA(0x1eb)];ek+=0x4)[eu[ek],eu[ek+0x1],eu[ek+0x2],eu[ek+0x3]]=[...E[0x0],0xff];console[RA(0x252)](RA(0x2c2)+ef+'\x20'+es);};e7[RA(0x32d)][RA(0x38a)](ef,es,eu),e7[RA(0x2a4)]();}else throw new Error(RA(0x1ea));};})());}();i['garbageCollector'][R9(0x3af)]();let S=new function(){var RM=R9;this['time']=0x0,setInterval(()=>{var RK=Q;if(isNaN(this[RK(0x349)]))this[RK(0x349)]=0x0;--this[RK(0x349)]<0x0&&(this[RK(0x349)]=0x0),A[RK(0x27d)](this['time']);},0x3e8),this['getTime']=()=>this['time'],this[RM(0x1e2)]=()=>this[RM(0x349)]<0x34;}(),r=localStorage[R9(0x387)]?e1(localStorage[R9(0x387)]):null;const d=e7=>[r[R9(0x3c7)][e7],r[R9(0x3c7)][e7+0x1],r['data'][e7+0x2],r[R9(0x3c7)][e7+0x3]];;((()=>{let e7;getPxlInTemplate=(e8,e9)=>{var Rv=Q;return e7=e8+e9*r['width']<<0x2,[r[Rv(0x3c7)][e7],r[Rv(0x3c7)][e7|0x1],r[Rv(0x3c7)][e7|0x2],r['data'][e7|0x3]];};})());function e0(){var RG=R9;if(!e2[RG(0x20b)])e2['imageProcessor']=new P();e2[RG(0x20b)][RG(0x1f6)](r);};function e1(e7){var RU=R9;localStorage[RU(0x387)]=e7;let e8=new J({'name':RU(0x233),'x':+A['xInput']['value'],'y':+A[RU(0x1e9)][RU(0x23e)],'src':e7});return e8[RU(0x210)]()[RU(0x23b)](function(){var Ri=RU;e8['convert'](g),e0[Ri(0x2d3)](this,arguments);}),e8;};let e2=new function(){var RS=R9;let e7=this;this['availableMods']=[RS(0x322),'woyken',RS(0x2aa),RS(0x36b),RS(0x2ab)],this[RS(0x2cc)]=function(e8){var Rr=RS;this['availableMods'][Rr(0x21b)](e8)?this[Rr(0x252)](Rr(0x342)+(this[Rr(0x310)]=e8)):this[Rr(0x23c)](Rr(0x374));},this[RS(0x372)]=function(){var Rd=RS;return this[Rd(0x310)];},this['_mode']=localStorage[RS(0x2a6)]||RS(0x322),this[RS(0x359)]=[RS(0x1ec),RS(0x265)],this[RS(0x22b)]=function(e8){var f0=RS;if(this[f0(0x359)][f0(0x21b)](e8))this['_cover']=e8;else this[f0(0x23c)]('Cover\x20doesn\x27t\x20exist');},this[RS(0x2bc)]=function(){var f1=RS;return this[f1(0x207)];},this['_cover']=localStorage[RS(0x283)]||RS(0x1ec),this['x']=null,this['y']=null,this['settedPxls']=0x0,this[RS(0x1fc)]=![],this[RS(0x252)]=(...e8)=>e8[RS(0x30e)](e9=>console['log'](RS(0x37d)+e9)),this[RS(0x23c)]=(...e8)=>e8[RS(0x30e)](e9=>console[RS(0x23c)](RS(0x37d)+e9)),this['zone']={'getPixelArea':function(e8,e9,ee,eR){var f2=RS;let ef=new Uint8ClampedArray(ee*eR<<0x2),es,eV=0x0,eQ=0x0,eu;e7[f2(0x1fc)]=![];for(;eV!==eR;eV++){for(es=0x0;es!==ee;es++,eQ+=0x4){eu=i['getPixel'](es+e8,eV+e9);eu?(ef[eQ]=eu[0x0],ef[eQ+0x1]=eu[0x1],ef[eQ+0x2]=eu[0x2],ef[eQ+0x3]=0xff):(e7[f2(0x1fc)]=!![],i[f2(0x228)](...i['absToTiled'](es+e8,eV+e9)));;};};if(e7[f2(0x1fc)])return null;return ef;},'get':function(e8,e9){var f3=RS;let ee=e8+e9*this['width']<<0x2;return[this[f3(0x3c7)][ee],this[f3(0x3c7)][ee+0x1],this['data'][ee+0x2],this[f3(0x3c7)][ee+0x3]];},'getData':function(e8){var f4=RS;return[this[f4(0x3c7)][e8],this['data'][e8+0x1],this[f4(0x3c7)][e8+0x2],this[f4(0x3c7)][e8+0x3]];},'override':function(){var f5=RS;if(this[f5(0x216)]===null||this['yStart']===null||this[f5(0x222)]===null||this['height']===null)e7['log']('Problems\x20with\x20bot.zone');this[f5(0x3c7)]=this[f5(0x201)](this[f5(0x216)],this[f5(0x2de)],this[f5(0x222)],this[f5(0x358)]);},'xStart':null,'yStart':null,'width':null,'height':null,'xEnd':null,'yEnd':null,'data':[],'pixelsToSet':[],'targets':[],'lastPxl':[null,null],'dist':(e8,e9,ee,eR)=>(e8-ee)**0x2+(e9-eR)**0x2},this[RS(0x2f8)]=()=>{var f6=RS;return S[f6(0x1e2)]()?H(Y*0.1,Y*0.2):S[f6(0x224)]()*H(0xfa,0x258);},this[RS(0x3b8)]=function(){var f7=RS;if(!S[f7(0x1e2)]())return this[f7(0x252)](f7(0x303)),this[f7(0x3c5)]();;let e8=performance['now'](),e9=null,ee=[];if(r){this[f7(0x386)][f7(0x216)]=r['x1'],this['zone']['yStart']=r['y1'],this[f7(0x386)][f7(0x222)]=r[f7(0x222)],this[f7(0x386)][f7(0x358)]=r[f7(0x358)],this['zone'][f7(0x2e1)]=this[f7(0x386)][f7(0x216)]+this[f7(0x386)][f7(0x222)],this[f7(0x386)][f7(0x30c)]=this['zone'][f7(0x2de)]+this['zone']['height'],this[f7(0x386)]['override']();if(this[f7(0x1fc)])return A['setBotStatus'](f7(0x28a)),this[f7(0x3c5)](0x1f4);;}else return this[f7(0x252)]('no\x20tmp'),A[f7(0x2f0)](f7(0x352)),this[f7(0x3c5)](0x1f4);;let eR=this['botting']();switch(eR){case f7(0x337):this[f7(0x23d)]++,A[f7(0x2f0)](f7(0x337)),this[f7(0x3c5)]();break;case f7(0x348):this[f7(0x252)](f7(0x371)),A[f7(0x2f0)](f7(0x348)),this[f7(0x3c5)](H(0x2*0x3e8,0x4*0x3e8),O);break;default:A['setBotStatus'](f7(0x318)),this['restart'](H(0x2*0x3e8,0x4*0x3e8),O);};},this[RS(0x2ea)]=function(){var f8=RS;let e8;if(this[f8(0x2bc)]()===f8(0x1ec))e8=()=>!![];else{if(this['getCover']()===f8(0x265)){let ee=document[f8(0x220)](f8(0x339))[f8(0x221)][f8(0x34a)][f8(0x277)](U)[f8(0x35b)](eR=>+eR);e8=eR=>g[f8(0x2bb)](eR,ee);}};const e9=eR=>{var f9=f8;let ef,es,eV=0x0;for(es=0x0;es!==this[f9(0x386)][f9(0x358)];es++)for(ef=0x0;ef!==this[f9(0x386)][f9(0x222)];ef++,eV+=0x4)eR(ef,es,eV);};if(this[f8(0x372)]()==='random'){let eR=[],ef;e9((es,eV,eQ)=>{var fe=f8;ef=d(eQ);if(ef!==null&&ef[0x3]!==0x0&&e8(ef)&&!g[fe(0x2bb)](this['zone'][fe(0x36f)](eQ),ef))eR[fe(0x21e)]([es,eV,g[fe(0x2a3)](ef)]);}),A['setTimeToEnd'](Math[f8(0x223)]((eR[f8(0x1eb)]<<0x2)/0x6)/0xa,Math['round'](eR[f8(0x1eb)]*0x7/0x6)/0xa);if(eR['length'])return xy=eR[H(0x0,eR['length']-0x1)],xy[0x0]+=r['x1'],xy[0x1]+=r['y1'],X[f8(0x3c9)](...xy),f8(0x337);else return f8(0x348);}else{if(this[f8(0x372)]()===f8(0x2aa)){let es,eV,eQ=0x0,eu,ek=null,eC=0x0;e9((eE,ej,eF)=>{var fR=f8;eu=d(eF);eu!==null&&eu[0x3]!==0x0&&e8(eu)&&!g['same'](this[fR(0x386)][fR(0x36f)](eF),eu)&&(eC++,ek===null&&(ek=[eE+r['x1'],ej+r['y1'],g[fR(0x2a3)](eu)]));;}),A['setTimeToEnd'](Math[f8(0x223)]((eC<<0x2)/0x6)/0xa,Math[f8(0x223)](eC*0x7/0x6)/0xa);if(ek)return X[f8(0x3c9)](...ek),f8(0x337);else return'done';}else{if(this[f8(0x372)]()===f8(0x36b)){let eE=[],ej=r[f8(0x222)]/0x2,eF=r['height']/0x2;const eY=([ew,eL])=>((ew-ej)**0x2+(eL-eF)**0x2)**0.5;let ey,eO,et=Infinity,eN=0x0;e9((ew,eL,el)=>{var ff=f8;ey=d(el);if(ey!==null&&ey[0x3]!==0x0&&e8(ey)&&!g[ff(0x2bb)](this[ff(0x386)][ff(0x36f)](el),ey)){eN++,eO=eY([ew,eL]);if(et>eO+0.9)et=eO,eE=[[ew,eL,g[ff(0x2a3)](ey)]];else et===eO&&eE[ff(0x21e)]([ew,eL,g['RGBToId'](ey)]);;};}),A[f8(0x2fa)](Math[f8(0x223)]((eN<<0x2)/0x6)/0xa,Math['round'](eN*0x7/0x6)/0xa);if(eE[f8(0x1eb)])return xy=eE[H(0x0,eE['length']-0x1)],xy[0x0]+=r['x1'],xy[0x1]+=r['y1'],X[f8(0x3c9)](...xy),f8(0x337);else return'done';}else{if(this[f8(0x372)]()==='chess'){let ew,eL,el,eB,eH=!![],em=0x0,eD=null;for(eB=0x0;eB!==0x2;eB++){eH=eB===0x0;for(eL=0x0;eL!==this['zone']['height'];eL++){eH=!eH;for(ew=+eH;ew<this[f8(0x386)][f8(0x222)];ew+=0x2){el=getPxlInTemplate(ew,eL);el!==null&&el[0x3]!==0x0&&e8(el)&&!g['same'](el,this[f8(0x386)]['get'](ew,eL))&&(em++,eD===null&&(eD=[ew+r['x1'],eL+r['y1'],g[f8(0x2a3)](el)]));;};};};A[f8(0x2fa)](Math[f8(0x223)]((em<<0x2)/0x6)/0xa,Math['round'](em*0x7/0x6)/0xa);if(eD)return X[f8(0x3c9)](...eD),f8(0x337);else return'done';}else{if(this[f8(0x372)]()===f8(0x229)){let ep=this[f8(0x20b)][f8(0x21d)]()[f8(0x1f8)](([eT,en,eJ])=>!g[f8(0x2bb)](this[f8(0x386)]['get'](eT,en),eJ));if(ep[f8(0x1eb)]){const eT=ep[f8(0x324)]();return X[f8(0x3c9)](eT[0x0]+r['x1'],eT[0x1]+r['y1'],g['RGBToId'](eT[0x2])),f8(0x337);}else return f8(0x348);}else this['log']('Undef\x20mode');}}}}},this[RS(0x24d)]=null,this[RS(0x3c1)]=function(){var fs=RS;this[fs(0x24d)]!==null&&(clearTimeout(this['timeout']),this[fs(0x24d)]=null);},this[RS(0x3cd)]=function(){var fV=RS;this[fV(0x3c1)](),this[fV(0x252)](fV(0x379)),A[fV(0x2f0)](fV(0x3ae));},this[RS(0x3c5)]=function(e8=this['getTimeout']()){var fQ=RS;this[fQ(0x3c1)](),this[fQ(0x24d)]=setTimeout(()=>this['cycle'](),e8),this[fQ(0x252)]('R\x20'+e8);};}();A[R9(0x30f)][R9(0x20c)](R9(0x2f9),e7=>e2[R9(0x2cc)](localStorage[R9(0x2a6)]=e7[R9(0x2b0)]['value'])),e2[R9(0x1f4)][R9(0x30e)](e7=>A[R9(0x292)](e7)),A['strategyElement'][R9(0x22e)][R9(0x30e)](e7=>e7[R9(0x23e)]===e2[R9(0x310)]&&e7[R9(0x2f2)](R9(0x265),'')),A[R9(0x2fe)][R9(0x20c)](R9(0x2f9),e7=>e2[R9(0x22b)](localStorage[R9(0x283)]=e7[R9(0x2b0)][R9(0x23e)])),e2[R9(0x359)][R9(0x30e)](e7=>A[R9(0x2f3)](e7)),A[R9(0x2fe)][R9(0x22e)][R9(0x30e)](e7=>e7[R9(0x23e)]===e2[R9(0x207)]&&e7[R9(0x2f2)](R9(0x265),'')),window[R9(0x20c)](R9(0x36c),({keyCode:e7})=>{var fu=R9;switch(e7){case 0x42:e2[fu(0x24d)]===null?e2[fu(0x3c5)](0x0):e2[fu(0x3cd)]();break;case 0x4e:let [e8,e9]=e5();A[fu(0x35d)][fu(0x23e)]=localStorage[fu(0x2be)]=e8,A['yInput'][fu(0x23e)]=localStorage[fu(0x1f7)]=e9;r&&(r['x1']=e8,r['y1']=e9);break;default:console[fu(0x252)](e7);};});function e3(){var fk=R9;let e7,e8,e9,ee,eR=e4();return e7=~~(G[fk(0x37a)]-G[fk(0x330)]/eR+0x1),e8=~~(G[fk(0x311)]-G['clientY']/eR+0x1),e9=~~(G[fk(0x37a)]+(v['width']-G[fk(0x330)])/eR-0x1),ee=~~(G['worldY']+(v['height']-G[fk(0x26b)])/eR-0x1),[e7,e8,e9,ee];};function e4(){var fC=R9;let e7=+window[fC(0x3a2)][fC(0x1e4)]['match'](U)[0x2];return e7>0xa?(e7/0xa)**0x2:e7**0.1||0x1;};function e5(){var fE=R9;return M[fE(0x24f)]['match'](U)[fE(0x35b)](e7=>+e7);};}['call'](this,e(fj(0x232))[fj(0x28d)]));},{'./resources/canvas':0x2,'./resources/constants':0x3,'./resources/selectors.json':0x4,'./resources/style':0x5,'./utils/Chunk':0x6,'./utils/ImageProcessor':0x7,'./utils/Palette':0x8,'./utils/Template':0x9,'./utils/functions':0xa,'buffer':0xc}],0x2:[function(e,R,f){var fF=Q;R[fF(0x391)]={'CHUNK_SIZE':0x100,'COLORS':[[0xca,0xe3,0xff],[0xff,0xff,0xff],[0xff,0xff,0xff],[0xe4,0xe4,0xe4],[0xc4,0xc4,0xc4],[0x88,0x88,0x88],[0x4e,0x4e,0x4e],[0x0,0x0,0x0],[0xf4,0xb3,0xae],[0xff,0xa7,0xd1],[0xff,0x54,0xb2],[0xff,0x65,0x65],[0xe5,0x0,0x0],[0x9a,0x0,0x0],[0xfe,0xa4,0x60],[0xe5,0x95,0x0],[0xa0,0x6a,0x42],[0x60,0x40,0x28],[0xf5,0xdf,0xb0],[0xff,0xf8,0x89],[0xe5,0xd9,0x0],[0x94,0xe0,0x44],[0x2,0xbe,0x1],[0x68,0x83,0x38],[0x0,0x65,0x13],[0xca,0xe3,0xff],[0x0,0xd3,0xdd],[0x0,0x83,0xc7],[0x0,0x0,0xea],[0x19,0x19,0x73],[0xcf,0x6e,0xe4],[0x82,0x0,0x80]]};},{}],0x3:[function(e,R,f){var fY=Q;R[fY(0x391)]={'MAX_REQUESTS_PER_HOUR':0xfa0,'PXL_CB':0x2*0x3e8,'MAX_TIME_STACK':0x3c*0x3e8};},{}],0x4:[function(e,R,f){var fy=Q;R['exports']={'selectedColor':fy(0x339),'coords':fy(0x35a),'palettebox':fy(0x244),'gameCanvas':fy(0x271)};},{}],0x5:[function(e,R,f){var fO=Q;R[fO(0x391)]=fO(0x208);},{}],0x6:[function(e,R,f){var ft=Q;const {CHUNK_SIZE:s}=e(ft(0x1e0));R['exports']=class{constructor(u,k,C){var fN=ft;this['x']=u,this['y']=k,this[fN(0x3c7)]=C,this[fN(0x394)]=Date[fN(0x22a)](),this['_c']=null;}[ft(0x22f)](u,k){var fw=ft;return this['_c']=u+k*s<<0x2,[this['data'][this['_c']],this[fw(0x3c7)][this['_c']+0x1],this['data'][this['_c']+0x2]];}[ft(0x38a)](u,k,C){var fL=ft;return this['_c']=u+k*s<<0x2,[this['data'][this['_c']],this[fL(0x3c7)][this['_c']+0x1],this[fL(0x3c7)][this['_c']+0x2]]=[...C];}};},{'../resources/canvas.json':0x2}],0x7:[function(e,R,f){var fl=Q;const s=e(fl(0x1e5)),{floor:u,sqrt:k,min:C}=Math,E=j=>{var fB=fl;let F=new Uint8ClampedArray(j[fB(0x1eb)]);for(let Y=0x0;Y!==j[fB(0x1eb)];Y++)F[Y]=j[Y];return F;};R[fl(0x391)]=class j{constructor(){var fH=fl;this[fH(0x2fb)]=null,this[fH(0x2e4)]=null,this[fH(0x3cb)]=null,this[fH(0x3a6)]=null,this[fH(0x364)]={'LINEAR':0x0,'RANDOM':0x1,'WOYKEN':0x2};}['_shuffle'](F){var fm=fl,Y=F[fm(0x1eb)],O,t;while(0x0!==Y){t=Math[fm(0x214)](Math[fm(0x322)]()*Y),Y-=0x1,O=F[Y],F[Y]=F[t],F[t]=O;}return F;}[fl(0x1f6)](F){var fD=fl;this[fD(0x2e4)]=F,this[fD(0x2fb)]={'width':F[fD(0x222)],'height':F[fD(0x358)],'data':E(F[fD(0x3c7)])},this['sobelData']=s(this[fD(0x2e4)][fD(0x328)]['getImageData'](0x0,0x0,this[fD(0x2fb)][fD(0x222)],this['template']['height']))[fD(0x1e1)]()['data'],this[fD(0x3cb)]=null;}[fl(0x2e2)](F,Y){var fp=fl;const O=[];let t,N,w,L,l,B;for(let H=0x0;H!==this[fp(0x2fb)]['height'];H++){N=this[fp(0x2fb)][fp(0x222)]*H;for(let m=0x0;m!==this[fp(0x2fb)][fp(0x222)];m++){t=N+m<<0x2,w=this['sobelData'][t],L=this['sobelData'][t|0x1],l=this[fp(0x3b0)][t|0x2],B=this[fp(0x2fb)][fp(0x3c7)][t|0x3];if(B!==0xff)continue;L>=F&&L<=Y&&O['push']({'x':m,'y':H});}}return O;}[fl(0x361)](F){var fT=fl;const Y=u(this[fT(0x2fb)][fT(0x222)]/0x2),O=u(this[fT(0x2fb)][fT(0x358)]/0x2),t=0x14;let N,w;const L=m=>(m['x']-Y)**0x2+(m['y']-O)**0x2,l=m=>{var fn=fT;let D=[],p=[];for(let T=0x0;T!==m[fn(0x1eb)];T++){(m[T]['x']+m[T]['y'])%t===0x0||Math[fn(0x1ed)](m[T]['x']-m[T]['y'])%t===0x0?p[fn(0x21e)](m[T]):D[fn(0x21e)](m[T]);}return{'grid':p,'other':D};},B=m=>{var fz=fT;m=[...m];let D=[];const p=()=>{var fJ=Q;let T=0x0,n=L(m[0x0]),J,z;for(let P=0x0;P!==m[fJ(0x1eb)];P++){J=L(m[P]);if(J<n){n=J,T=P;if(J===0x0)break;}}return m[fJ(0x366)](T,0x1)[0x0];};while(m[fz(0x1eb)])D[fz(0x21e)](p());return D;};this[fT(0x31e)]=[];for(let m=0x0;m!==0x100;m++){let {grid:D,other:p}=l(this['_getIncrementalEdges'](m,m));D=B(D),p=B(p),this[fT(0x31e)][m]=[],p[fT(0x30e)](T=>this[fT(0x31e)][m][fT(0x21e)](T)),D['forEach'](T=>this[fT(0x31e)][m][fT(0x21e)](T));}this[fT(0x3cb)]=[],this['layers']['forEach'](T=>T[fT(0x30e)](n=>this[fT(0x3cb)][fT(0x21e)](n)));let H;this[fT(0x3cb)]=this['targets'][fT(0x35b)](({x:T,y:n})=>{var fx=fT;return H=T+n*this['template'][fx(0x222)]<<0x2,[T,n,[this[fx(0x2fb)][fx(0x3c7)][H],this[fx(0x2fb)]['data'][H|0x1],this[fx(0x2fb)][fx(0x3c7)][H|0x2]]];});}[fl(0x2cc)](F){var fP=fl;this[fP(0x3a6)]=F;}[fl(0x21d)](){var fg=fl;if(!this[fg(0x3cb)])this[fg(0x361)]();return this[fg(0x3cb)];}};},{'sobel':0xe}],0x8:[function(e,R,f){var fo=Q;R[fo(0x391)]=class{constructor(){var fb=fo;this[fb(0x2df)]=null,this['colors']=null;}[fo(0x1ee)](s){var fW=fo;this['colors']=s[fW(0x35b)](u=>[...u]);}[fo(0x2bb)](u,k,C=0xf){var fI=fo;return Math[fI(0x1ed)](u[0x0]-k[0x0])<C&&Math[fI(0x1ed)](u[0x1]-k[0x1])<C&&Math[fI(0x1ed)](u[0x2]-k[0x2])<C;}[fo(0x2c8)](s){var fZ=fo;return this[fZ(0x2a3)](s)!==null;}[fo(0x289)](s){var fq=fo;let u,k=Infinity,C,E;for(let j=0x2;j!==this[fq(0x2b4)]['length'];j++){E=this[fq(0x2b4)][j];if(this[fq(0x2bb)](E,s))return E;;C=Math[fq(0x1ed)](E[0x0]-s[0x0])+Math['abs'](E[0x1]-s[0x1])+Math[fq(0x1ed)](E[0x2]-s[0x2]);C<k&&(k=C,u=j);;};return[...this['colors'][u]];}[fo(0x397)](s){var fa=fo;return this[fa(0x2b4)][s];}[fo(0x2a3)](s){var fc=fo;for(let u=this[fc(0x2b4)]['length']-0x1;u!==-0x1;u--)if(this[fc(0x2bb)](this['colors'][u],s))return u;return null;}['select'](s){var fX=fo;this[fX(0x2df)][typeof s===fX(0x260)?this[fX(0x2a3)](s):s]['click']();}[fo(0x347)](){}['bindColorsWithElements'](s){var fh=fo;s=Array['from'](s),this[fh(0x2df)]={},this[fh(0x2b4)][fh(0x30e)]((u,k)=>{var fA=fh;let C=s['find'](E=>this[fA(0x2bb)](u,E[fA(0x221)]['backgroundColor'][fA(0x277)](/-?\d+/g)[fA(0x35b)](j=>+j)));if(C===void 0x0)return console[fA(0x335)](fA(0x2bf)+u+']');this[fA(0x2df)][k]=C,this[fA(0x2df)][k]['addEventListener'](fA(0x2b7),()=>this[fA(0x347)]({'id':k,'rgb':u}));});}};},{}],0x9:[function(e,R,f){var fK=Q;const {loadImage:s}=e(fK(0x301));class u{constructor({x:k,y:C,width:E,height:j,name:F,src:Y}){var fM=fK;this['x1']=k,this['y1']=C,this[fM(0x222)]=E,this[fM(0x358)]=j,this[fM(0x266)](),this[fM(0x3c0)]=F,this['src']=Y,this[fM(0x362)]=u[fM(0x3aa)],this[fM(0x23a)]=null,this[fM(0x2e5)]=null;}[fK(0x354)](k,C,E,j){return this['x1']<E&&this['x2']>k&&this['y1']<j&&this['y2']>C;}[fK(0x266)](){var fv=fK;this['x2']=this['x1']+this[fv(0x222)],this['y2']=this['y1']+this[fv(0x358)];}[fK(0x210)](){var fG=fK;return this[fG(0x362)]=u[fG(0x376)],new Promise((k,C)=>{var fU=fG;if(this[fU(0x1dd)]===null)return console['error'](fU(0x290)),C();;s(this[fU(0x1dd)])[fU(0x23b)](E=>{var fi=fU;this[fi(0x23a)]=E,this['canvas']=document[fi(0x37e)](fi(0x2e5)),this[fi(0x222)]=this[fi(0x2e5)][fi(0x222)]=this[fi(0x23a)][fi(0x222)],this[fi(0x358)]=this[fi(0x2e5)]['height']=this[fi(0x23a)][fi(0x358)],this[fi(0x266)](),this[fi(0x328)]=this[fi(0x2e5)]['getContext']('2d'),this[fi(0x328)][fi(0x2a8)](this['img'],0x0,0x0),this[fi(0x2eb)]=this[fi(0x328)][fi(0x3ca)](0x0,0x0,this[fi(0x222)],this[fi(0x358)]),this['data']=this[fi(0x2eb)][fi(0x3c7)],this['status']=u[fi(0x37c)],k(this);})[fU(0x2c1)](E=>C(E));});}['convert'](k){var fS=fK;let C;for(C=0x0;C!==this[fS(0x3c7)]['length'];C+=0x4){if(this[fS(0x3c7)][C+0x3]===0x0)continue;[this['data'][C],this[fS(0x3c7)][C+0x1],this[fS(0x3c7)][C+0x2]]=k['convert']([this[fS(0x3c7)][C],this[fS(0x3c7)][C+0x1],this[fS(0x3c7)][C+0x2]]);};this[fS(0x328)][fS(0x1f5)](this[fS(0x2eb)],0x0,0x0);}};u['UNLOADED']=0x0,u[fK(0x376)]=0x1,u['LOADED']=0x2,R[fK(0x391)]=u;},{'./functions':0xa}],0xa:[function(e,R,f){var su=Q;function s(P,g,o){return g>P&&g<o;};function u(P,g){var fr=Q;P['mozImageSmoothingEnabled']=P[fr(0x243)]=P[fr(0x279)]=P[fr(0x385)]=g;};function k(P,g){Object['keys'](P)['forEach'](o=>g(P[o],o));};function C(P){var fd=Q;document['head'][fd(0x396)](j({'type':fd(0x221),'html':P}));};function E(P,g){var s0=Q;if(!(s0(0x2c5)in window))return;const o=()=>new Notification(P,g);if(Notification['permission']===s0(0x200))o();else Notification['permission']!==s0(0x264)&&Notification['requestPermission'](b=>{if(b==='granted')o();});;};function j(P,g=[]){var s1=Q;let o=P[s1(0x281)]===s1(0x323)?document[s1(0x3b4)](P[s1(0x323)]||''):document[s1(0x37e)](P[s1(0x281)]);P['id']&&o['setAttribute']('id',P['id']);P['class']&&o['setAttribute']('class',P[s1(0x209)]);P[s1(0x221)]&&o['setAttribute'](s1(0x221),P[s1(0x221)]);if(P['html'])o[s1(0x3a3)]=P[s1(0x2a9)];else P['text']&&(o[s1(0x24f)]=P[s1(0x323)]);P[s1(0x31a)]&&Object[s1(0x2d5)](P[s1(0x31a)])['forEach'](([b,W])=>{var s2=s1;b[s2(0x2b6)]('on')?o[s2(0x20c)](b[s2(0x2ee)](0x2),W):o[s2(0x20c)](b,W);});P[s1(0x357)]&&Object['entries'](P[s1(0x357)])['forEach'](([b,W])=>o['setAttribute'](b,W));P[s1(0x27e)]===!![]&&o[s1(0x29f)]({'mode':'open'});if(g['length']!==0x0){const b=P['shadow']?o[s1(0x25a)]:o;g[s1(0x30e)](W=>b[s1(0x396)](W));}return o;}function F(P){var s3=Q;return P?'On':s3(0x388);};function Y(P,g=void 0x0){var s4=Q;let o=document['createElement']('a');o['href']=P[s4(0x27f)](s4(0x204)),o[s4(0x211)]=g,o[s4(0x2b7)]();};function O(P){var s5=Q;return document[s5(0x27b)](P);};function t(P){return new Promise((g,o)=>{var s6=Q;let b=new Image();b[s6(0x3a7)]='',b[s6(0x282)]=()=>g(b),b[s6(0x297)]=o,b[s6(0x1dd)]=P;});};function N(P){var s7=Q;return j({'type':s7(0x2cd)},[j({'type':s7(0x2cd),'class':s7(0x300),'html':s7(0x2e6)+P+s7(0x33f)})]);};function w(){var s8=Q;let P=![];try{P=window!=window[s8(0x315)]||document!=top[s8(0x36a)]||self['location']!=top[s8(0x3a2)];}catch(g){P=!![];};return P;};function L(P){var s9=Q;return window[s9(0x2da)]={'imports':{'imported_func':g=>console[s9(0x252)](g)}},fetch(P)['then'](g=>g[s9(0x33a)]())[s9(0x23b)](g=>WebAssembly[s9(0x298)](g,window[s9(0x2da)]));};function l(P,g,o){var se=Q;let b=document[se(0x37e)](se(0x2e5)),W=b[se(0x227)]('2d');b['width']=g,b['height']=o;let I=W[se(0x3ca)](0x0,0x0,g,o);for(let Z=0x0;Z!==P[se(0x1eb)];Z++)I['data'][Z]=P[Z];return W[se(0x1f5)](I,0x0,0x0),b;};function B(P,g){var sR=Q;return Math['round'](P-0.5+Math[sR(0x322)]()*(g-P+0x1));}function H(){var sf=Q;return J(sf(0x309));}async function m(P){var ss=Q;const g=new FormData();g[ss(0x242)](ss(0x305),!![]);const o=await fetch(n+'/api/modtools',{'credentials':ss(0x373),'method':ss(0x248),'body':g});o['ok']?P(await o['json']()):P([]);}async function D(P,g){var sV=Q;const o=new FormData();o[sV(0x242)](sV(0x368),P);const b=await fetch(n+sV(0x259),{'credentials':'include','method':sV(0x248),'body':o});g(b['ok'],await b['text']());}function p(){return J('/banme');}const T=function P(){var sQ=Q;if(!window[sQ(0x3b9)]||!window[sQ(0x3b9)][sQ(0x2f1)]||window[sQ(0x3a2)][sQ(0x293)]===sQ(0x32c))return'';const g=window[sQ(0x3a2)][sQ(0x293)][sQ(0x2f7)]('.');return g[sQ(0x1eb)]>0x2&&g[sQ(0x238)](),window[sQ(0x3b9)][sQ(0x2f1)]+'.'+g[sQ(0x250)]('.');}(),n=(T&&window[su(0x3a2)][su(0x31d)]+'//'+T)+'/api';async function J(g,o=!![],b=!![]){var sk=su;b&&(g=''+n+g);try{const W=await z(g,{'credentials':o?sk(0x373):sk(0x3a8)});return W[sk(0x2c6)]();}catch(I){return{'errors':[sk(0x3ab)]};}}async function z(g,o={}){var sC=su;const {timeout:timeout=0x7530}=o,b=new AbortController(),W=setTimeout(()=>b[sC(0x3bf)](),timeout),I=await fetch(g,{...o,'signal':b['signal']});return clearTimeout(W),I;}R[su(0x391)]={'between':s,'antialiasing':u,'objForEach':k,'injectCSS':C,'trySendNotification':E,'factory':j,'switcherText':F,'downloadCanvas':Y,'$':O,'loadImage':t,'createPanelButton':N,'isFrame':w,'loadWASM':L,'createCanvasFromData':l,'rand':B,'fetchApiMe':H,'getModList':m,'submitRemMod':D,'banMe':p};},{}],0xb:[function(e,R,f){'use strict';var sE=Q;f[sE(0x356)]=Y,f[sE(0x2c4)]=t,f['fromByteArray']=L;var s=[],u=[],k=typeof Uint8Array!=='undefined'?Uint8Array:Array,C=sE(0x206);for(var E=0x0,j=C[sE(0x1eb)];E<j;++E){s[E]=C[E],u[C[sE(0x235)](E)]=E;}u['-'['charCodeAt'](0x0)]=0x3e,u['_'['charCodeAt'](0x0)]=0x3f;function F(l){var sj=sE,B=l[sj(0x1eb)];if(B%0x4>0x0)throw new Error('Invalid\x20string.\x20Length\x20must\x20be\x20a\x20multiple\x20of\x204');var H=l[sj(0x251)]('=');if(H===-0x1)H=B;var m=H===B?0x0:0x4-H%0x4;return[H,m];}function Y(l){var B=F(l),H=B[0x0],m=B[0x1];return(H+m)*0x3/0x4-m;}function O(l,B,H){return(B+H)*0x3/0x4-H;}function t(l){var sF=sE,B,H=F(l),m=H[0x0],D=H[0x1],p=new k(O(l,m,D)),T=0x0,n=D>0x0?m-0x4:m,J;for(J=0x0;J<n;J+=0x4){B=u[l[sF(0x235)](J)]<<0x12|u[l[sF(0x235)](J+0x1)]<<0xc|u[l[sF(0x235)](J+0x2)]<<0x6|u[l[sF(0x235)](J+0x3)],p[T++]=B>>0x10&0xff,p[T++]=B>>0x8&0xff,p[T++]=B&0xff;}return D===0x2&&(B=u[l['charCodeAt'](J)]<<0x2|u[l[sF(0x235)](J+0x1)]>>0x4,p[T++]=B&0xff),D===0x1&&(B=u[l[sF(0x235)](J)]<<0xa|u[l[sF(0x235)](J+0x1)]<<0x4|u[l[sF(0x235)](J+0x2)]>>0x2,p[T++]=B>>0x8&0xff,p[T++]=B&0xff),p;}function N(l){return s[l>>0x12&0x3f]+s[l>>0xc&0x3f]+s[l>>0x6&0x3f]+s[l&0x3f];}function w(l,B,H){var sY=sE,m,D=[];for(var p=B;p<H;p+=0x3){m=(l[p]<<0x10&0xff0000)+(l[p+0x1]<<0x8&0xff00)+(l[p+0x2]&0xff),D[sY(0x21e)](N(m));}return D[sY(0x250)]('');}function L(l){var sy=sE,B,H=l[sy(0x1eb)],m=H%0x3,D=[],p=0x3fff;for(var T=0x0,n=H-m;T<n;T+=p){D[sy(0x21e)](w(l,T,T+p>n?n:T+p));}if(m===0x1)B=l[H-0x1],D['push'](s[B>>0x2]+s[B<<0x4&0x3f]+'==');else m===0x2&&(B=(l[H-0x2]<<0x8)+l[H-0x1],D[sy(0x21e)](s[B>>0xa]+s[B>>0x4&0x3f]+s[B<<0x2&0x3f]+'='));return D[sy(0x250)]('');}},{}],0xc:[function(e,R,f){var Vn=Q;(function(s){/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
'use strict';var sO=Q;var u=e('base64-js'),k=e(sO(0x231));f[sO(0x28d)]=s,f[sO(0x398)]=H,f[sO(0x225)]=0x32;var C=0x7fffffff;f[sO(0x1fd)]=C,s['TYPED_ARRAY_SUPPORT']=E();!s[sO(0x3b5)]&&typeof console!==sO(0x253)&&typeof console[sO(0x335)]===sO(0x2ad)&&console[sO(0x335)](sO(0x32e)+sO(0x294));function E(){var st=sO;try{var e5=new Uint8Array(0x1);return e5[st(0x333)]={'__proto__':Uint8Array[st(0x21a)],'foo':function(){return 0x2a;}},e5['foo']()===0x2a;}catch(e6){return![];}}Object[sO(0x38d)](s[sO(0x21a)],sO(0x2db),{'enumerable':!![],'get':function(){var sN=sO;if(!s[sN(0x2ec)](this))return undefined;return this[sN(0x232)];}}),Object[sO(0x38d)](s['prototype'],sO(0x2ca),{'enumerable':!![],'get':function(){var sw=sO;if(!s[sw(0x2ec)](this))return undefined;return this['byteOffset'];}});function j(e5){var sL=sO;if(e5>C)throw new RangeError(sL(0x274)+e5+sL(0x338));var e6=new Uint8Array(e5);return e6[sL(0x333)]=s[sL(0x21a)],e6;}function s(e5,e6,e7){var sl=sO;if(typeof e5===sl(0x331)){if(typeof e6===sl(0x340))throw new TypeError(sl(0x2ac));return t(e5);}return F(e5,e6,e7);}typeof Symbol!=='undefined'&&Symbol['species']!=null&&s[Symbol['species']]===s&&Object[sO(0x38d)](s,Symbol['species'],{'value':null,'configurable':!![],'enumerable':![],'writable':![]});s[sO(0x268)]=0x2000;function F(e5,e6,e7){var sB=sO;if(typeof e5===sB(0x340))return N(e5,e6);if(ArrayBuffer[sB(0x28e)](e5))return w(e5);if(e5==null)throw TypeError(sB(0x3cc)+sB(0x3a5)+typeof e5);if(e3(e5,ArrayBuffer)||e5&&e3(e5['buffer'],ArrayBuffer))return L(e5,e6,e7);if(typeof e5===sB(0x331))throw new TypeError(sB(0x39e));var e8=e5[sB(0x380)]&&e5[sB(0x380)]();if(e8!=null&&e8!==e5)return s['from'](e8,e6,e7);var e9=l(e5);if(e9)return e9;if(typeof Symbol!==sB(0x253)&&Symbol['toPrimitive']!=null&&typeof e5[Symbol['toPrimitive']]===sB(0x2ad))return s[sB(0x215)](e5[Symbol[sB(0x378)]]('string'),e6,e7);throw new TypeError(sB(0x3cc)+sB(0x3a5)+typeof e5);}s[sO(0x215)]=function(e5,e6,e7){return F(e5,e6,e7);},s['prototype'][sO(0x333)]=Uint8Array['prototype'],s['__proto__']=Uint8Array;function Y(e5){var sH=sO;if(typeof e5!==sH(0x331))throw new TypeError(sH(0x3c3));else{if(e5<0x0)throw new RangeError(sH(0x274)+e5+sH(0x338));}}function O(e5,e6,e7){var sm=sO;Y(e5);if(e5<=0x0)return j(e5);if(e6!==undefined)return typeof e7===sm(0x340)?j(e5)[sm(0x39f)](e6,e7):j(e5)['fill'](e6);return j(e5);}s['alloc']=function(e5,e6,e7){return O(e5,e6,e7);};function t(e5){return Y(e5),j(e5<0x0?0x0:B(e5)|0x0);}s['allocUnsafe']=function(e5){return t(e5);},s['allocUnsafeSlow']=function(e5){return t(e5);};function N(e5,e6){var sD=sO;(typeof e6!==sD(0x340)||e6==='')&&(e6=sD(0x39a));if(!s['isEncoding'](e6))throw new TypeError(sD(0x332)+e6);var e7=m(e5,e6)|0x0,e8=j(e7),e9=e8[sD(0x1f3)](e5,e6);return e9!==e7&&(e8=e8[sD(0x280)](0x0,e9)),e8;}function w(e5){var sp=sO,e6=e5['length']<0x0?0x0:B(e5[sp(0x1eb)])|0x0,e7=j(e6);for(var e8=0x0;e8<e6;e8+=0x1){e7[e8]=e5[e8]&0xff;}return e7;}function L(e5,e6,e7){var sT=sO;if(e6<0x0||e5[sT(0x356)]<e6)throw new RangeError(sT(0x2e3));if(e5[sT(0x356)]<e6+(e7||0x0))throw new RangeError(sT(0x275));var e8;if(e6===undefined&&e7===undefined)e8=new Uint8Array(e5);else e7===undefined?e8=new Uint8Array(e5,e6):e8=new Uint8Array(e5,e6,e7);return e8[sT(0x333)]=s[sT(0x21a)],e8;}function l(e5){var sn=sO;if(s[sn(0x2ec)](e5)){var e6=B(e5[sn(0x1eb)])|0x0,e7=j(e6);if(e7[sn(0x1eb)]===0x0)return e7;return e5['copy'](e7,0x0,0x0,e6),e7;}if(e5[sn(0x1eb)]!==undefined){if(typeof e5[sn(0x1eb)]!==sn(0x331)||e4(e5['length']))return j(0x0);return w(e5);}if(e5['type']==='Buffer'&&Array[sn(0x26c)](e5[sn(0x3c7)]))return w(e5['data']);}function B(e5){var sJ=sO;if(e5>=C)throw new RangeError(sJ(0x261)+'size:\x200x'+C[sJ(0x249)](0x10)+sJ(0x241));return e5|0x0;}function H(e5){var sz=sO;return+e5!=e5&&(e5=0x0),s[sz(0x258)](+e5);}s[sO(0x2ec)]=function e5(e6){var sx=sO;return e6!=null&&e6[sx(0x39c)]===!![]&&e6!==s[sx(0x21a)];},s['compare']=function e6(e7,e8){var sP=sO;if(e3(e7,Uint8Array))e7=s[sP(0x215)](e7,e7[sP(0x2ca)],e7[sP(0x356)]);if(e3(e8,Uint8Array))e8=s[sP(0x215)](e8,e8[sP(0x2ca)],e8[sP(0x356)]);if(!s[sP(0x2ec)](e7)||!s[sP(0x2ec)](e8))throw new TypeError(sP(0x2a5));if(e7===e8)return 0x0;var e9=e7[sP(0x1eb)],ee=e8['length'];for(var eR=0x0,ef=Math[sP(0x1db)](e9,ee);eR<ef;++eR){if(e7[eR]!==e8[eR]){e9=e7[eR],ee=e8[eR];break;}}if(e9<ee)return-0x1;if(ee<e9)return 0x1;return 0x0;},s[sO(0x2ff)]=function e7(e8){var sg=sO;switch(String(e8)['toLowerCase']()){case sg(0x25c):case sg(0x39a):case sg(0x2e9):case'ascii':case sg(0x2f6):case sg(0x2c3):case sg(0x20e):case sg(0x247):case sg(0x395):case sg(0x3a4):case sg(0x3ac):return!![];default:return![];}},s[sO(0x254)]=function e8(e9,ee){var so=sO;if(!Array['isArray'](e9))throw new TypeError(so(0x360));if(e9[so(0x1eb)]===0x0)return s[so(0x258)](0x0);var eR;if(ee===undefined){ee=0x0;for(eR=0x0;eR<e9[so(0x1eb)];++eR){ee+=e9[eR][so(0x1eb)];}}var ef=s[so(0x25e)](ee),es=0x0;for(eR=0x0;eR<e9[so(0x1eb)];++eR){var eV=e9[eR];e3(eV,Uint8Array)&&(eV=s['from'](eV));if(!s[so(0x2ec)](eV))throw new TypeError('\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers');eV[so(0x2cb)](ef,es),es+=eV[so(0x1eb)];}return ef;};function m(e9,ee){var sb=sO;if(s['isBuffer'](e9))return e9[sb(0x1eb)];if(ArrayBuffer[sb(0x28e)](e9)||e3(e9,ArrayBuffer))return e9[sb(0x356)];if(typeof e9!==sb(0x340))throw new TypeError(sb(0x326)+sb(0x246)+typeof e9);var eR=e9[sb(0x1eb)],ef=arguments[sb(0x1eb)]>0x2&&arguments[0x2]===!![];if(!ef&&eR===0x0)return 0x0;var es=![];for(;;){switch(ee){case sb(0x2ae):case sb(0x2f6):case sb(0x2c3):return eR;case'utf8':case sb(0x2e9):return r(e9)['length'];case'ucs2':case sb(0x395):case sb(0x3a4):case'utf-16le':return eR*0x2;case sb(0x25c):return eR>>>0x1;case'base64':return e1(e9)[sb(0x1eb)];default:if(es)return ef?-0x1:r(e9)[sb(0x1eb)];ee=(''+ee)[sb(0x256)](),es=!![];}}}s['byteLength']=m;function D(e9,ee,eR){var sW=sO,ef=![];(ee===undefined||ee<0x0)&&(ee=0x0);if(ee>this[sW(0x1eb)])return'';(eR===undefined||eR>this['length'])&&(eR=this['length']);if(eR<=0x0)return'';eR>>>=0x0,ee>>>=0x0;if(eR<=ee)return'';if(!e9)e9='utf8';while(!![]){switch(e9){case sW(0x25c):return X(this,ee,eR);case sW(0x39a):case sW(0x2e9):return I(this,ee,eR);case sW(0x2ae):return a(this,ee,eR);case sW(0x2f6):case sW(0x2c3):return c(this,ee,eR);case sW(0x20e):return W(this,ee,eR);case'ucs2':case'ucs-2':case sW(0x3a4):case sW(0x3ac):return h(this,ee,eR);default:if(ef)throw new TypeError(sW(0x332)+e9);e9=(e9+'')[sW(0x256)](),ef=!![];}}}s[sO(0x21a)]['_isBuffer']=!![];function p(e9,ee,eR){var ef=e9[ee];e9[ee]=e9[eR],e9[eR]=ef;}s[sO(0x21a)][sO(0x28b)]=function e9(){var sI=sO,ee=this[sI(0x1eb)];if(ee%0x2!==0x0)throw new RangeError(sI(0x341));for(var eR=0x0;eR<ee;eR+=0x2){p(this,eR,eR+0x1);}return this;},s[sO(0x21a)][sO(0x2a2)]=function ee(){var sZ=sO,eR=this[sZ(0x1eb)];if(eR%0x4!==0x0)throw new RangeError(sZ(0x377));for(var ef=0x0;ef<eR;ef+=0x4){p(this,ef,ef+0x3),p(this,ef+0x1,ef+0x2);}return this;},s[sO(0x21a)][sO(0x234)]=function eR(){var sq=sO,ef=this[sq(0x1eb)];if(ef%0x8!==0x0)throw new RangeError(sq(0x3bc));for(var es=0x0;es<ef;es+=0x8){p(this,es,es+0x7),p(this,es+0x1,es+0x6),p(this,es+0x2,es+0x5),p(this,es+0x3,es+0x4);}return this;},s[sO(0x21a)]['toString']=function ef(){var sa=sO,es=this[sa(0x1eb)];if(es===0x0)return'';if(arguments[sa(0x1eb)]===0x0)return I(this,0x0,es);return D[sa(0x2d3)](this,arguments);},s['prototype'][sO(0x36e)]=s['prototype']['toString'],s[sO(0x21a)]['equals']=function es(eV){var sc=sO;if(!s[sc(0x2ec)](eV))throw new TypeError('Argument\x20must\x20be\x20a\x20Buffer');if(this===eV)return!![];return s[sc(0x286)](this,eV)===0x0;},s[sO(0x21a)][sO(0x351)]=function eV(){var sX=sO,eQ='',eu=f[sX(0x225)];eQ=this[sX(0x249)](sX(0x25c),0x0,eu)['replace'](/(.{2})/g,sX(0x363))[sX(0x1df)]();if(this[sX(0x1eb)]>eu)eQ+='\x20...\x20';return sX(0x313)+eQ+'>';},s[sO(0x21a)][sO(0x286)]=function eQ(eu,ek,eC,eE,ej){var sh=sO;e3(eu,Uint8Array)&&(eu=s['from'](eu,eu[sh(0x2ca)],eu[sh(0x356)]));if(!s[sh(0x2ec)](eu))throw new TypeError(sh(0x213)+'Received\x20type\x20'+typeof eu);ek===undefined&&(ek=0x0);eC===undefined&&(eC=eu?eu[sh(0x1eb)]:0x0);eE===undefined&&(eE=0x0);ej===undefined&&(ej=this[sh(0x1eb)]);if(ek<0x0||eC>eu['length']||eE<0x0||ej>this[sh(0x1eb)])throw new RangeError('out\x20of\x20range\x20index');if(eE>=ej&&ek>=eC)return 0x0;if(eE>=ej)return-0x1;if(ek>=eC)return 0x1;ek>>>=0x0,eC>>>=0x0,eE>>>=0x0,ej>>>=0x0;if(this===eu)return 0x0;var eF=ej-eE,eY=eC-ek,ey=Math[sh(0x1db)](eF,eY),eO=this[sh(0x280)](eE,ej),et=eu[sh(0x280)](ek,eC);for(var eN=0x0;eN<ey;++eN){if(eO[eN]!==et[eN]){eF=eO[eN],eY=et[eN];break;}}if(eF<eY)return-0x1;if(eY<eF)return 0x1;return 0x0;};function T(eu,ek,eC,eE,ej){var sA=sO;if(eu[sA(0x1eb)]===0x0)return-0x1;if(typeof eC===sA(0x340))eE=eC,eC=0x0;else{if(eC>0x7fffffff)eC=0x7fffffff;else eC<-0x80000000&&(eC=-0x80000000);}eC=+eC;e4(eC)&&(eC=ej?0x0:eu[sA(0x1eb)]-0x1);if(eC<0x0)eC=eu[sA(0x1eb)]+eC;if(eC>=eu[sA(0x1eb)]){if(ej)return-0x1;else eC=eu[sA(0x1eb)]-0x1;}else{if(eC<0x0){if(ej)eC=0x0;else return-0x1;}}typeof ek===sA(0x340)&&(ek=s[sA(0x215)](ek,eE));if(s[sA(0x2ec)](ek)){if(ek[sA(0x1eb)]===0x0)return-0x1;return n(eu,ek,eC,eE,ej);}else{if(typeof ek===sA(0x331)){ek=ek&0xff;if(typeof Uint8Array['prototype'][sA(0x251)]===sA(0x2ad))return ej?Uint8Array[sA(0x21a)]['indexOf']['call'](eu,ek,eC):Uint8Array[sA(0x21a)][sA(0x21c)]['call'](eu,ek,eC);return n(eu,[ek],eC,eE,ej);}}throw new TypeError(sA(0x2a0));}function n(eu,ek,eC,eE,ej){var sK=sO,eF=0x1,eY=eu[sK(0x1eb)],ey=ek['length'];if(eE!==undefined){eE=String(eE)[sK(0x256)]();if(eE===sK(0x247)||eE===sK(0x395)||eE===sK(0x3a4)||eE===sK(0x3ac)){if(eu[sK(0x1eb)]<0x2||ek[sK(0x1eb)]<0x2)return-0x1;eF=0x2,eY/=0x2,ey/=0x2,eC/=0x2;}}function eO(el,eB){var sM=sK;return eF===0x1?el[eB]:el[sM(0x370)](eB*eF);}var et;if(ej){var eN=-0x1;for(et=eC;et<eY;et++){if(eO(eu,et)===eO(ek,eN===-0x1?0x0:et-eN)){if(eN===-0x1)eN=et;if(et-eN+0x1===ey)return eN*eF;}else{if(eN!==-0x1)et-=et-eN;eN=-0x1;}}}else{if(eC+ey>eY)eC=eY-ey;for(et=eC;et>=0x0;et--){var ew=!![];for(var eL=0x0;eL<ey;eL++){if(eO(eu,et+eL)!==eO(ek,eL)){ew=![];break;}}if(ew)return et;}}return-0x1;}s[sO(0x21a)][sO(0x21b)]=function eu(ek,eC,eE){var sv=sO;return this[sv(0x251)](ek,eC,eE)!==-0x1;},s[sO(0x21a)]['indexOf']=function ek(eC,eE,ej){return T(this,eC,eE,ej,!![]);},s[sO(0x21a)]['lastIndexOf']=function eC(eE,ej,eF){return T(this,eE,ej,eF,![]);};function J(eE,ej,eF,eY){var sG=sO;eF=Number(eF)||0x0;var ey=eE[sG(0x1eb)]-eF;!eY?eY=ey:(eY=Number(eY),eY>ey&&(eY=ey));var eO=ej['length'];eY>eO/0x2&&(eY=eO/0x2);for(var et=0x0;et<eY;++et){var eN=parseInt(ej[sG(0x2d7)](et*0x2,0x2),0x10);if(e4(eN))return et;eE[eF+et]=eN;}return et;}function z(eE,ej,eF,eY){return e2(r(ej,eE['length']-eF),eE,eF,eY);}function P(eE,ej,eF,eY){return e2(d(ej),eE,eF,eY);}function g(eE,ej,eF,eY){return P(eE,ej,eF,eY);}function o(eE,ej,eF,eY){return e2(e1(ej),eE,eF,eY);}function b(eE,ej,eF,eY){var sU=sO;return e2(e0(ej,eE[sU(0x1eb)]-eF),eE,eF,eY);}s[sO(0x21a)][sO(0x1f3)]=function eE(ej,eF,eY,ey){var si=sO;if(eF===undefined)ey=si(0x39a),eY=this['length'],eF=0x0;else{if(eY===undefined&&typeof eF==='string')ey=eF,eY=this[si(0x1eb)],eF=0x0;else{if(isFinite(eF)){eF=eF>>>0x0;if(isFinite(eY)){eY=eY>>>0x0;if(ey===undefined)ey=si(0x39a);}else ey=eY,eY=undefined;}else throw new Error(si(0x35c));}}var eO=this['length']-eF;if(eY===undefined||eY>eO)eY=eO;if(ej[si(0x1eb)]>0x0&&(eY<0x0||eF<0x0)||eF>this[si(0x1eb)])throw new RangeError(si(0x34f));if(!ey)ey=si(0x39a);var et=![];for(;;){switch(ey){case si(0x25c):return J(this,ej,eF,eY);case si(0x39a):case si(0x2e9):return z(this,ej,eF,eY);case si(0x2ae):return P(this,ej,eF,eY);case si(0x2f6):case'binary':return g(this,ej,eF,eY);case si(0x20e):return o(this,ej,eF,eY);case si(0x247):case si(0x395):case'utf16le':case si(0x3ac):return b(this,ej,eF,eY);default:if(et)throw new TypeError('Unknown\x20encoding:\x20'+ey);ey=(''+ey)[si(0x256)](),et=!![];}}},s['prototype']['toJSON']=function ej(){var sS=sO;return{'type':'Buffer','data':Array[sS(0x21a)]['slice']['call'](this[sS(0x33c)]||this,0x0)};};function W(eF,eY,ey){var sr=sO;return eY===0x0&&ey===eF[sr(0x1eb)]?u['fromByteArray'](eF):u[sr(0x2ed)](eF['slice'](eY,ey));}function I(eF,eY,ey){var sd=sO;ey=Math[sd(0x1db)](eF[sd(0x1eb)],ey);var eO=[],et=eY;while(et<ey){var eN=eF[et],ew=null,eL=eN>0xef?0x4:eN>0xdf?0x3:eN>0xbf?0x2:0x1;if(et+eL<=ey){var el,eB,eH,em;switch(eL){case 0x1:eN<0x80&&(ew=eN);break;case 0x2:el=eF[et+0x1];(el&0xc0)===0x80&&(em=(eN&0x1f)<<0x6|el&0x3f,em>0x7f&&(ew=em));break;case 0x3:el=eF[et+0x1],eB=eF[et+0x2];(el&0xc0)===0x80&&(eB&0xc0)===0x80&&(em=(eN&0xf)<<0xc|(el&0x3f)<<0x6|eB&0x3f,em>0x7ff&&(em<0xd800||em>0xdfff)&&(ew=em));break;case 0x4:el=eF[et+0x1],eB=eF[et+0x2],eH=eF[et+0x3];(el&0xc0)===0x80&&(eB&0xc0)===0x80&&(eH&0xc0)===0x80&&(em=(eN&0xf)<<0x12|(el&0x3f)<<0xc|(eB&0x3f)<<0x6|eH&0x3f,em>0xffff&&em<0x110000&&(ew=em));}}if(ew===null)ew=0xfffd,eL=0x1;else ew>0xffff&&(ew-=0x10000,eO[sd(0x21e)](ew>>>0xa&0x3ff|0xd800),ew=0xdc00|ew&0x3ff);eO['push'](ew),et+=eL;}return q(eO);}var Z=0x1000;function q(eF){var V0=sO,eY=eF[V0(0x1eb)];if(eY<=Z)return String[V0(0x3ba)][V0(0x2d3)](String,eF);var ey='',eO=0x0;while(eO<eY){ey+=String[V0(0x3ba)][V0(0x2d3)](String,eF[V0(0x280)](eO,eO+=Z));}return ey;}function a(eF,eY,ey){var V1=sO,eO='';ey=Math[V1(0x1db)](eF[V1(0x1eb)],ey);for(var et=eY;et<ey;++et){eO+=String['fromCharCode'](eF[et]&0x7f);}return eO;}function c(eF,eY,ey){var V2=sO,eO='';ey=Math['min'](eF['length'],ey);for(var et=eY;et<ey;++et){eO+=String[V2(0x3ba)](eF[et]);}return eO;}function X(eF,eY,ey){var eO=eF['length'];if(!eY||eY<0x0)eY=0x0;if(!ey||ey<0x0||ey>eO)ey=eO;var et='';for(var eN=eY;eN<ey;++eN){et+=S(eF[eN]);}return et;}function h(eF,eY,ey){var V3=sO,eO=eF[V3(0x280)](eY,ey),et='';for(var eN=0x0;eN<eO[V3(0x1eb)];eN+=0x2){et+=String[V3(0x3ba)](eO[eN]+eO[eN+0x1]*0x100);}return et;}s[sO(0x21a)]['slice']=function eF(eY,ey){var V4=sO,eO=this[V4(0x1eb)];eY=~~eY,ey=ey===undefined?eO:~~ey;if(eY<0x0){eY+=eO;if(eY<0x0)eY=0x0;}else eY>eO&&(eY=eO);if(ey<0x0){ey+=eO;if(ey<0x0)ey=0x0;}else ey>eO&&(ey=eO);if(ey<eY)ey=eY;var et=this[V4(0x38e)](eY,ey);return et[V4(0x333)]=s[V4(0x21a)],et;};function A(eY,ey,eO){var V5=sO;if(eY%0x1!==0x0||eY<0x0)throw new RangeError(V5(0x34e));if(eY+ey>eO)throw new RangeError(V5(0x3be));}s[sO(0x21a)][sO(0x2b9)]=function eY(ey,eO,et){var V6=sO;ey=ey>>>0x0,eO=eO>>>0x0;if(!et)A(ey,eO,this[V6(0x1eb)]);var eN=this[ey],ew=0x1,eL=0x0;while(++eL<eO&&(ew*=0x100)){eN+=this[ey+eL]*ew;}return eN;},s[sO(0x21a)][sO(0x2b8)]=function ey(eO,et,eN){eO=eO>>>0x0,et=et>>>0x0;!eN&&A(eO,et,this['length']);var ew=this[eO+--et],eL=0x1;while(et>0x0&&(eL*=0x100)){ew+=this[eO+--et]*eL;}return ew;},s[sO(0x21a)][sO(0x346)]=function eO(et,eN){var V7=sO;et=et>>>0x0;if(!eN)A(et,0x1,this[V7(0x1eb)]);return this[et];},s[sO(0x21a)][sO(0x39d)]=function et(eN,ew){var V8=sO;eN=eN>>>0x0;if(!ew)A(eN,0x2,this[V8(0x1eb)]);return this[eN]|this[eN+0x1]<<0x8;},s[sO(0x21a)][sO(0x370)]=function eN(ew,eL){var V9=sO;ew=ew>>>0x0;if(!eL)A(ew,0x2,this[V9(0x1eb)]);return this[ew]<<0x8|this[ew+0x1];},s[sO(0x21a)]['readUInt32LE']=function ew(eL,el){var Ve=sO;eL=eL>>>0x0;if(!el)A(eL,0x4,this[Ve(0x1eb)]);return(this[eL]|this[eL+0x1]<<0x8|this[eL+0x2]<<0x10)+this[eL+0x3]*0x1000000;},s[sO(0x21a)][sO(0x2cf)]=function eL(el,eB){el=el>>>0x0;if(!eB)A(el,0x4,this['length']);return this[el]*0x1000000+(this[el+0x1]<<0x10|this[el+0x2]<<0x8|this[el+0x3]);},s[sO(0x21a)][sO(0x3a1)]=function el(eB,eH,em){var VR=sO;eB=eB>>>0x0,eH=eH>>>0x0;if(!em)A(eB,eH,this[VR(0x1eb)]);var eD=this[eB],ep=0x1,eT=0x0;while(++eT<eH&&(ep*=0x100)){eD+=this[eB+eT]*ep;}ep*=0x80;if(eD>=ep)eD-=Math[VR(0x334)](0x2,0x8*eH);return eD;},s['prototype']['readIntBE']=function eB(eH,em,eD){var Vf=sO;eH=eH>>>0x0,em=em>>>0x0;if(!eD)A(eH,em,this[Vf(0x1eb)]);var ep=em,eT=0x1,en=this[eH+--ep];while(ep>0x0&&(eT*=0x100)){en+=this[eH+--ep]*eT;}eT*=0x80;if(en>=eT)en-=Math[Vf(0x334)](0x2,0x8*em);return en;},s[sO(0x21a)][sO(0x1fb)]=function eH(em,eD){em=em>>>0x0;if(!eD)A(em,0x1,this['length']);if(!(this[em]&0x80))return this[em];return(0xff-this[em]+0x1)*-0x1;},s[sO(0x21a)][sO(0x20d)]=function em(eD,ep){var Vs=sO;eD=eD>>>0x0;if(!ep)A(eD,0x2,this[Vs(0x1eb)]);var eT=this[eD]|this[eD+0x1]<<0x8;return eT&0x8000?eT|0xffff0000:eT;},s[sO(0x21a)][sO(0x1ff)]=function eD(ep,eT){var VV=sO;ep=ep>>>0x0;if(!eT)A(ep,0x2,this[VV(0x1eb)]);var en=this[ep+0x1]|this[ep]<<0x8;return en&0x8000?en|0xffff0000:en;},s[sO(0x21a)][sO(0x270)]=function ep(eT,en){var VQ=sO;eT=eT>>>0x0;if(!en)A(eT,0x4,this[VQ(0x1eb)]);return this[eT]|this[eT+0x1]<<0x8|this[eT+0x2]<<0x10|this[eT+0x3]<<0x18;},s[sO(0x21a)][sO(0x24e)]=function eT(en,eJ){var Vu=sO;en=en>>>0x0;if(!eJ)A(en,0x4,this[Vu(0x1eb)]);return this[en]<<0x18|this[en+0x1]<<0x10|this[en+0x2]<<0x8|this[en+0x3];},s[sO(0x21a)][sO(0x32b)]=function en(eJ,ez){var Vk=sO;eJ=eJ>>>0x0;if(!ez)A(eJ,0x4,this[Vk(0x1eb)]);return k['read'](this,eJ,!![],0x17,0x4);},s[sO(0x21a)][sO(0x2af)]=function eJ(ez,ex){var VC=sO;ez=ez>>>0x0;if(!ex)A(ez,0x4,this[VC(0x1eb)]);return k[VC(0x306)](this,ez,![],0x17,0x4);},s[sO(0x21a)][sO(0x29e)]=function ez(ex,eP){var VE=sO;ex=ex>>>0x0;if(!eP)A(ex,0x8,this[VE(0x1eb)]);return k[VE(0x306)](this,ex,!![],0x34,0x8);},s[sO(0x21a)]['readDoubleBE']=function ex(eP,eg){var Vj=sO;eP=eP>>>0x0;if(!eg)A(eP,0x8,this['length']);return k[Vj(0x306)](this,eP,![],0x34,0x8);};function K(eP,eg,eo,eb,eW,eI){var VF=sO;if(!s[VF(0x2ec)](eP))throw new TypeError(VF(0x383));if(eg>eW||eg<eI)throw new RangeError(VF(0x23f));if(eo+eb>eP[VF(0x1eb)])throw new RangeError(VF(0x269));}s[sO(0x21a)][sO(0x3c4)]=function eP(eg,eo,eb,eW){var VY=sO;eg=+eg,eo=eo>>>0x0,eb=eb>>>0x0;if(!eW){var eI=Math[VY(0x334)](0x2,0x8*eb)-0x1;K(this,eg,eo,eb,eI,0x0);}var eZ=0x1,eq=0x0;this[eo]=eg&0xff;while(++eq<eb&&(eZ*=0x100)){this[eo+eq]=eg/eZ&0xff;}return eo+eb;},s[sO(0x21a)][sO(0x26a)]=function eg(eo,eb,eW,eI){eo=+eo,eb=eb>>>0x0,eW=eW>>>0x0;if(!eI){var eZ=Math['pow'](0x2,0x8*eW)-0x1;K(this,eo,eb,eW,eZ,0x0);}var eq=eW-0x1,ea=0x1;this[eb+eq]=eo&0xff;while(--eq>=0x0&&(ea*=0x100)){this[eb+eq]=eo/ea&0xff;}return eb+eW;},s['prototype'][sO(0x2d6)]=function eo(eb,eW,eI){eb=+eb,eW=eW>>>0x0;if(!eI)K(this,eb,eW,0x1,0xff,0x0);return this[eW]=eb&0xff,eW+0x1;},s[sO(0x21a)][sO(0x2e8)]=function eb(eW,eI,eZ){eW=+eW,eI=eI>>>0x0;if(!eZ)K(this,eW,eI,0x2,0xffff,0x0);return this[eI]=eW&0xff,this[eI+0x1]=eW>>>0x8,eI+0x2;},s[sO(0x21a)][sO(0x344)]=function eW(eI,eZ,eq){eI=+eI,eZ=eZ>>>0x0;if(!eq)K(this,eI,eZ,0x2,0xffff,0x0);return this[eZ]=eI>>>0x8,this[eZ+0x1]=eI&0xff,eZ+0x2;},s[sO(0x21a)]['writeUInt32LE']=function eI(eZ,eq,ea){eZ=+eZ,eq=eq>>>0x0;if(!ea)K(this,eZ,eq,0x4,0xffffffff,0x0);return this[eq+0x3]=eZ>>>0x18,this[eq+0x2]=eZ>>>0x10,this[eq+0x1]=eZ>>>0x8,this[eq]=eZ&0xff,eq+0x4;},s['prototype'][sO(0x2d8)]=function eZ(eq,ea,ec){eq=+eq,ea=ea>>>0x0;if(!ec)K(this,eq,ea,0x4,0xffffffff,0x0);return this[ea]=eq>>>0x18,this[ea+0x1]=eq>>>0x10,this[ea+0x2]=eq>>>0x8,this[ea+0x3]=eq&0xff,ea+0x4;},s['prototype']['writeIntLE']=function eq(ea,ec,eX,eh){ea=+ea,ec=ec>>>0x0;if(!eh){var eA=Math['pow'](0x2,0x8*eX-0x1);K(this,ea,ec,eX,eA-0x1,-eA);}var eK=0x0,eM=0x1,ev=0x0;this[ec]=ea&0xff;while(++eK<eX&&(eM*=0x100)){ea<0x0&&ev===0x0&&this[ec+eK-0x1]!==0x0&&(ev=0x1),this[ec+eK]=(ea/eM>>0x0)-ev&0xff;}return ec+eX;},s['prototype'][sO(0x2b5)]=function ea(ec,eX,eh,eA){var Vy=sO;ec=+ec,eX=eX>>>0x0;if(!eA){var eK=Math[Vy(0x334)](0x2,0x8*eh-0x1);K(this,ec,eX,eh,eK-0x1,-eK);}var eM=eh-0x1,ev=0x1,eG=0x0;this[eX+eM]=ec&0xff;while(--eM>=0x0&&(ev*=0x100)){ec<0x0&&eG===0x0&&this[eX+eM+0x1]!==0x0&&(eG=0x1),this[eX+eM]=(ec/ev>>0x0)-eG&0xff;}return eX+eh;},s[sO(0x21a)][sO(0x1e3)]=function ec(eX,eh,eA){eX=+eX,eh=eh>>>0x0;if(!eA)K(this,eX,eh,0x1,0x7f,-0x80);if(eX<0x0)eX=0xff+eX+0x1;return this[eh]=eX&0xff,eh+0x1;},s[sO(0x21a)]['writeInt16LE']=function eX(eh,eA,eK){eh=+eh,eA=eA>>>0x0;if(!eK)K(this,eh,eA,0x2,0x7fff,-0x8000);return this[eA]=eh&0xff,this[eA+0x1]=eh>>>0x8,eA+0x2;},s[sO(0x21a)]['writeInt16BE']=function eh(eA,eK,eM){eA=+eA,eK=eK>>>0x0;if(!eM)K(this,eA,eK,0x2,0x7fff,-0x8000);return this[eK]=eA>>>0x8,this[eK+0x1]=eA&0xff,eK+0x2;},s['prototype'][sO(0x2d2)]=function eA(eK,eM,ev){eK=+eK,eM=eM>>>0x0;if(!ev)K(this,eK,eM,0x4,0x7fffffff,-0x80000000);return this[eM]=eK&0xff,this[eM+0x1]=eK>>>0x8,this[eM+0x2]=eK>>>0x10,this[eM+0x3]=eK>>>0x18,eM+0x4;},s[sO(0x21a)]['writeInt32BE']=function eK(eM,ev,eG){eM=+eM,ev=ev>>>0x0;if(!eG)K(this,eM,ev,0x4,0x7fffffff,-0x80000000);if(eM<0x0)eM=0xffffffff+eM+0x1;return this[ev]=eM>>>0x18,this[ev+0x1]=eM>>>0x10,this[ev+0x2]=eM>>>0x8,this[ev+0x3]=eM&0xff,ev+0x4;};function M(eM,ev,eG,eU,ei,eS){var VO=sO;if(eG+eU>eM[VO(0x1eb)])throw new RangeError('Index\x20out\x20of\x20range');if(eG<0x0)throw new RangeError(VO(0x269));}function v(eM,ev,eG,eU,ei){var Vt=sO;return ev=+ev,eG=eG>>>0x0,!ei&&M(eM,ev,eG,0x4,0xffffff00000000000000000000000000,-0xffffff00000000000000000000000000),k[Vt(0x1f3)](eM,ev,eG,eU,0x17,0x4),eG+0x4;}s[sO(0x21a)][sO(0x304)]=function eM(ev,eG,eU){return v(this,ev,eG,!![],eU);},s[sO(0x21a)]['writeFloatBE']=function ev(eG,eU,ei){return v(this,eG,eU,![],ei);};function G(eG,eU,ei,eS,er){var VN=sO;return eU=+eU,ei=ei>>>0x0,!er&&M(eG,eU,ei,0x8,0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,-0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),k[VN(0x1f3)](eG,eU,ei,eS,0x34,0x8),ei+0x8;}s[sO(0x21a)][sO(0x1f2)]=function eG(eU,ei,eS){return G(this,eU,ei,!![],eS);},s[sO(0x21a)]['writeDoubleBE']=function eU(ei,eS,er){return G(this,ei,eS,![],er);},s[sO(0x21a)][sO(0x2cb)]=function ei(eS,er,ed,R0){var Vw=sO;if(!s['isBuffer'](eS))throw new TypeError('argument\x20should\x20be\x20a\x20Buffer');if(!ed)ed=0x0;if(!R0&&R0!==0x0)R0=this['length'];if(er>=eS[Vw(0x1eb)])er=eS[Vw(0x1eb)];if(!er)er=0x0;if(R0>0x0&&R0<ed)R0=ed;if(R0===ed)return 0x0;if(eS[Vw(0x1eb)]===0x0||this[Vw(0x1eb)]===0x0)return 0x0;if(er<0x0)throw new RangeError(Vw(0x382));if(ed<0x0||ed>=this['length'])throw new RangeError(Vw(0x269));if(R0<0x0)throw new RangeError(Vw(0x2f5));if(R0>this[Vw(0x1eb)])R0=this[Vw(0x1eb)];eS[Vw(0x1eb)]-er<R0-ed&&(R0=eS[Vw(0x1eb)]-er+ed);var R1=R0-ed;if(this===eS&&typeof Uint8Array[Vw(0x21a)][Vw(0x345)]===Vw(0x2ad))this[Vw(0x345)](er,ed,R0);else{if(this===eS&&ed<er&&er<R0)for(var R2=R1-0x1;R2>=0x0;--R2){eS[R2+er]=this[R2+ed];}else Uint8Array[Vw(0x21a)][Vw(0x38a)][Vw(0x30d)](eS,this[Vw(0x38e)](ed,R0),er);}return R1;},s[sO(0x21a)]['fill']=function eS(er,ed,R0,R1){var VL=sO;if(typeof er==='string'){if(typeof ed==='string')R1=ed,ed=0x0,R0=this[VL(0x1eb)];else typeof R0===VL(0x340)&&(R1=R0,R0=this[VL(0x1eb)]);if(R1!==undefined&&typeof R1!==VL(0x340))throw new TypeError(VL(0x291));if(typeof R1===VL(0x340)&&!s['isEncoding'](R1))throw new TypeError(VL(0x332)+R1);if(er[VL(0x1eb)]===0x1){var R2=er['charCodeAt'](0x0);(R1===VL(0x39a)&&R2<0x80||R1===VL(0x2f6))&&(er=R2);}}else typeof er==='number'&&(er=er&0xff);if(ed<0x0||this['length']<ed||this[VL(0x1eb)]<R0)throw new RangeError(VL(0x2fd));if(R0<=ed)return this;ed=ed>>>0x0,R0=R0===undefined?this[VL(0x1eb)]:R0>>>0x0;if(!er)er=0x0;var R3;if(typeof er==='number')for(R3=ed;R3<R0;++R3){this[R3]=er;}else{var R4=s[VL(0x2ec)](er)?er:s[VL(0x215)](er,R1),R5=R4[VL(0x1eb)];if(R5===0x0)throw new TypeError('The\x20value\x20\x22'+er+VL(0x3bb));for(R3=0x0;R3<R0-ed;++R3){this[R3+ed]=R4[R3%R5];}}return this;};var U=/[^+/0-9A-Za-z-_]/g;function i(er){var Vl=sO;er=er[Vl(0x2f7)]('=')[0x0],er=er[Vl(0x1df)]()[Vl(0x32f)](U,'');if(er[Vl(0x1eb)]<0x2)return'';while(er['length']%0x4!==0x0){er=er+'=';}return er;}function S(er){var VB=sO;if(er<0x10)return'0'+er[VB(0x249)](0x10);return er[VB(0x249)](0x10);}function r(er,ed){var VH=sO;ed=ed||Infinity;var R0,R1=er[VH(0x1eb)],R2=null,R3=[];for(var R4=0x0;R4<R1;++R4){R0=er[VH(0x235)](R4);if(R0>0xd7ff&&R0<0xe000){if(!R2){if(R0>0xdbff){if((ed-=0x3)>-0x1)R3[VH(0x21e)](0xef,0xbf,0xbd);continue;}else{if(R4+0x1===R1){if((ed-=0x3)>-0x1)R3[VH(0x21e)](0xef,0xbf,0xbd);continue;}}R2=R0;continue;}if(R0<0xdc00){if((ed-=0x3)>-0x1)R3[VH(0x21e)](0xef,0xbf,0xbd);R2=R0;continue;}R0=(R2-0xd800<<0xa|R0-0xdc00)+0x10000;}else{if(R2){if((ed-=0x3)>-0x1)R3[VH(0x21e)](0xef,0xbf,0xbd);}}R2=null;if(R0<0x80){if((ed-=0x1)<0x0)break;R3[VH(0x21e)](R0);}else{if(R0<0x800){if((ed-=0x2)<0x0)break;R3[VH(0x21e)](R0>>0x6|0xc0,R0&0x3f|0x80);}else{if(R0<0x10000){if((ed-=0x3)<0x0)break;R3['push'](R0>>0xc|0xe0,R0>>0x6&0x3f|0x80,R0&0x3f|0x80);}else{if(R0<0x110000){if((ed-=0x4)<0x0)break;R3[VH(0x21e)](R0>>0x12|0xf0,R0>>0xc&0x3f|0x80,R0>>0x6&0x3f|0x80,R0&0x3f|0x80);}else throw new Error(VH(0x2a7));}}}}return R3;}function d(er){var Vm=sO,ed=[];for(var R0=0x0;R0<er[Vm(0x1eb)];++R0){ed[Vm(0x21e)](er['charCodeAt'](R0)&0xff);}return ed;}function e0(er,ed){var VD=sO,R0,R1,R2,R3=[];for(var R4=0x0;R4<er[VD(0x1eb)];++R4){if((ed-=0x2)<0x0)break;R0=er['charCodeAt'](R4),R1=R0>>0x8,R2=R0%0x100,R3[VD(0x21e)](R2),R3[VD(0x21e)](R1);}return R3;}function e1(er){return u['toByteArray'](i(er));}function e2(er,ed,R0,R1){var Vp=sO;for(var R2=0x0;R2<R1;++R2){if(R2+R0>=ed[Vp(0x1eb)]||R2>=er[Vp(0x1eb)])break;ed[R2+R0]=er[R2];}return R2;}function e3(er,ed){var VT=sO;return er instanceof ed||er!=null&&er[VT(0x24a)]!=null&&er[VT(0x24a)][VT(0x3c0)]!=null&&er[VT(0x24a)][VT(0x3c0)]===ed[VT(0x3c0)];}function e4(er){return er!==er;}}['call'](this,e('buffer')[Vn(0x28d)]));},{'base64-js':0xb,'buffer':0xc,'ieee754':0xd}],0xd:[function(e,R,f){var Vz=Q;f['read']=function(u,k,C,E,j){var VJ=Q,F,Y,O=j*0x8-E-0x1,t=(0x1<<O)-0x1,N=t>>0x1,w=-0x7,L=C?j-0x1:0x0,l=C?-0x1:0x1,B=u[k+L];L+=l,F=B&(0x1<<-w)-0x1,B>>=-w,w+=O;for(;w>0x0;F=F*0x100+u[k+L],L+=l,w-=0x8){}Y=F&(0x1<<-w)-0x1,F>>=-w,w+=E;for(;w>0x0;Y=Y*0x100+u[k+L],L+=l,w-=0x8){}if(F===0x0)F=0x1-N;else{if(F===t)return Y?NaN:(B?-0x1:0x1)*Infinity;else Y=Y+Math[VJ(0x334)](0x2,E),F=F-N;}return(B?-0x1:0x1)*Y*Math[VJ(0x334)](0x2,F-E);},f[Vz(0x1f3)]=function(u,k,C,E,j,F){var Vx=Vz,Y,O,t,N=F*0x8-j-0x1,w=(0x1<<N)-0x1,L=w>>0x1,l=j===0x17?Math[Vx(0x334)](0x2,-0x18)-Math['pow'](0x2,-0x4d):0x0,B=E?0x0:F-0x1,H=E?0x1:-0x1,D=k<0x0||k===0x0&&0x1/k<0x0?0x1:0x0;k=Math['abs'](k);if(isNaN(k)||k===Infinity)O=isNaN(k)?0x1:0x0,Y=w;else{Y=Math[Vx(0x214)](Math['log'](k)/Math[Vx(0x20a)]);k*(t=Math[Vx(0x334)](0x2,-Y))<0x1&&(Y--,t*=0x2);Y+L>=0x1?k+=l/t:k+=l*Math[Vx(0x334)](0x2,0x1-L);k*t>=0x2&&(Y++,t/=0x2);if(Y+L>=w)O=0x0,Y=w;else Y+L>=0x1?(O=(k*t-0x1)*Math[Vx(0x334)](0x2,j),Y=Y+L):(O=k*Math['pow'](0x2,L-0x1)*Math[Vx(0x334)](0x2,j),Y=0x0);}for(;j>=0x8;u[C+B]=O&0xff,B+=H,O/=0x100,j-=0x8){}Y=Y<<j|O,N+=j;for(;N>0x0;u[C+B]=Y&0xff,B+=H,Y/=0x100,N-=0x8){}u[C+B-H]|=D*0x80;};},{}],0xe:[function(e,R,f){(function(s){'use strict';var Vo=Q;function u(C){var VP=Q;if(!(this instanceof u))return new u(C);var E=C[VP(0x222)],j=C[VP(0x358)],F=[[-0x1,0x0,0x1],[-0x2,0x0,0x2],[-0x1,0x0,0x1]],Y=[[-0x1,-0x2,-0x1],[0x0,0x0,0x0],[0x1,0x2,0x1]],O=[],t=[];function N(P){return function(o,W,I){return I=I||0x0,P[(E*W+o)*0x4+I];};}var w=C[VP(0x3c7)],L=N(w),l,B;for(B=0x0;B<j;B++){for(l=0x0;l<E;l++){var H=L(l,B,0x0),m=L(l,B,0x1),D=L(l,B,0x2),p=(H+m+D)/0x3;t[VP(0x21e)](p,p,p,0xff);}}L=N(t);for(B=0x0;B<j;B++){for(l=0x0;l<E;l++){var T=F[0x0][0x0]*L(l-0x1,B-0x1)+F[0x0][0x1]*L(l,B-0x1)+F[0x0][0x2]*L(l+0x1,B-0x1)+F[0x1][0x0]*L(l-0x1,B)+F[0x1][0x1]*L(l,B)+F[0x1][0x2]*L(l+0x1,B)+F[0x2][0x0]*L(l-0x1,B+0x1)+F[0x2][0x1]*L(l,B+0x1)+F[0x2][0x2]*L(l+0x1,B+0x1),n=Y[0x0][0x0]*L(l-0x1,B-0x1)+Y[0x0][0x1]*L(l,B-0x1)+Y[0x0][0x2]*L(l+0x1,B-0x1)+Y[0x1][0x0]*L(l-0x1,B)+Y[0x1][0x1]*L(l,B)+Y[0x1][0x2]*L(l+0x1,B)+Y[0x2][0x0]*L(l-0x1,B+0x1)+Y[0x2][0x1]*L(l,B+0x1)+Y[0x2][0x2]*L(l+0x1,B+0x1),J=Math[VP(0x369)](T*T+n*n)>>>0x0;O['push'](J,J,J,0xff);}}var z=O;return typeof Uint8ClampedArray===VP(0x2ad)&&(z=new Uint8ClampedArray(O)),z['toImageData']=function(){return u['toImageData'](z,E,j);},z;}u['toImageData']=function C(E,j,F){var Vg=Q;if(typeof ImageData===Vg(0x2ad)&&Object[Vg(0x21a)][Vg(0x249)][Vg(0x30d)](E)==='[object\x20Uint16Array]')return new ImageData(E,j,F);else{if(typeof window===Vg(0x260)&&typeof window[Vg(0x36a)]===Vg(0x260)){var Y=document[Vg(0x37e)](Vg(0x2e5));if(typeof Y[Vg(0x227)]===Vg(0x2ad)){var O=Y[Vg(0x227)]('2d'),t=O[Vg(0x230)](j,F);return t['data'][Vg(0x38a)](E),t;}else return new k(E,j,F);}else return new k(E,j,F);}};function k(E,j,F){return{'width':j,'height':F,'data':E};}if(typeof f!==Vo(0x253))typeof R!=='undefined'&&R[Vo(0x391)]&&(f=R['exports']=u),f['Sobel']=u;else typeof define===Vo(0x2ad)&&define[Vo(0x31b)]?define([],function(){return u;}):s['Sobel']=u;}(this));},{}]},{},[0x1]),delete window[Vb(0x3b7)]);}function checkNeededElems(){var VW=Q;return window&&document['querySelector']('canvas')&&document[VW(0x220)](VW(0x35a))&&document['querySelector'](VW(0x339))&&document[VW(0x220)](VW(0x339))[VW(0x221)]['backgroundColor']&&document[VW(0x27b)](VW(0x2a1))['childNodes']['length'];}function tryInit(){var Va=Q,u=(function(){var j=!![];return function(F,Y){var O=j?function(){if(Y){var t=Y['apply'](F,arguments);return Y=null,t;}}:function(){};return j=![],O;};}()),k=u(this,function(){var VI=Q;return k[VI(0x249)]()['search'](VI(0x390))[VI(0x249)]()['constructor'](k)['search'](VI(0x390));});k();var C=(function(){var j=!![];return function(F,Y){var O=j?function(){var VZ=Q;if(Y){var t=Y[VZ(0x2d3)](F,arguments);return Y=null,t;}}:function(){};return j=![],O;};}()),E=C(this,function(){var Vq=Q,j;try{var F=Function(Vq(0x2ba)+Vq(0x316)+');');j=F();}catch(l){j=window;}var Y=j['console']=j[Vq(0x2bd)]||{},O=[Vq(0x252),'warn',Vq(0x267),Vq(0x335),Vq(0x318),'table',Vq(0x29a)];for(var t=0x0;t<O[Vq(0x1eb)];t++){var N=C['constructor'][Vq(0x21a)][Vq(0x202)](C),w=O[t],L=Y[w]||N;N[Vq(0x333)]=C['bind'](C),N[Vq(0x249)]=L[Vq(0x249)]['bind'](L),Y[w]=N;}});E(),console['log'](Va(0x367)),checkNeededElems()?initialization():setTimeout(tryInit,0x64);}if(window[Vc(0x34d)])tryInit();else{const inject=()=>{var VX=Vc;let e=document[VX(0x37e)](VX(0x1ef));e['innerHTML']='('+tryInit+VX(0x22d)+checkNeededElems+';'+initialization+';',document[VX(0x2dc)][VX(0x33d)][VX(0x396)](e);};document[Vc(0x2e0)]==='complete'?inject():window[Vc(0x20c)](Vc(0x210),inject);}