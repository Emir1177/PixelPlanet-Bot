const overridedFunctions = [];const _toString = Function.prototype.toString;if (isNative(Function.prototype.toString)) {overridedFunctions.push('toString');Function.prototype.toString = function toString() {if (overridedFunctions.includes(this.name)) {return `function ${this.name}() { [native code] }`;} else {return _toString.apply(this, arguments);}}} else {securityProblem();}if (!isNative(XMLHttpRequest.prototype.open) && window.open && isNative(window.open)) {XMLHttpRequest.prototype.open = open;}for (const prop in window) {const value = window[prop];if (typeof value === 'function' &&!['fetch', 'initialization'].includes(prop) &&value.toString().includes('fetch')) {delete window[prop];}}const fetchWhiteList = ['/api/baninfo','/api/getiid','/api/shards','/api/modtools','/api/startdm','/api/leavechan','/api/block','/api/blockdm','/api/privatize','/api/chathistory','/api/me','/api/auth'];if (isNative(fetch)) {overridedFunctions.push('fetch');const _fetch = fetch;window.fetch = function fetch(url, options) {const path = new URL(url).pathname;if (path.startsWith('/api')) {if (!fetchWhiteList.some(white => path.startsWith(white))) {const x = Math.floor(256 * Math.random());const y = Math.floor(256 * Math.random());return _fetch(`https://sca.pixelplanet.fun/chunks/0/${x}/${y}.bmp`);}}return _fetch(url, options);}} else {securityProblem();}if (isNative(document.querySelectorAll)) {overridedFunctions.push('querySelectorAll');const _querySelectorAll = document.querySelectorAll;document.querySelectorAll = function querySelectorAll() {const list = Array.from(_querySelectorAll.apply(this, arguments));if (list.some(el => el.shadowRoot !== null)) {const fake = document.createElement('div');fake.appendChild(document.createElement('div'));return fake.querySelectorAll('div');} else {return list;}}} else {securityProblem();}function securityProblem() {return;}function isNative(func) {return _toString.call(func).includes('[native code]');}
var nf=Q;function Q(m,E){var H=n();return Q=function(F,c){F=F-0x81;var p=H[F];return p;},Q(m,E);}(function(m,E){var E6=Q,H=m();while(!![]){try{var F=-parseInt(E6(0x20d))/0x1+parseInt(E6(0x267))/0x2*(-parseInt(E6(0x148))/0x3)+parseInt(E6(0x147))/0x4+-parseInt(E6(0x13a))/0x5+parseInt(E6(0x26e))/0x6*(-parseInt(E6(0x136))/0x7)+-parseInt(E6(0x22e))/0x8+parseInt(E6(0x153))/0x9;if(F===E)break;else H['push'](H['shift']());}catch(c){H['push'](H['shift']());}}}(n,0x5903b));function initialization(){var nd=Q;(function(){function m(E,H,F){var E8=Q;function c(D,Z){var E7=Q;if(!H[D]){if(!E[D]){var b='function'==typeof require&&require;if(!Z&&b)return b(D,!0x0);if(p)return p(D,!0x0);var j=new Error(E7(0xad)+D+'\x27');throw j[E7(0x1a6)]='MODULE_NOT_FOUND',j;}var S=H[D]={'exports':{}};E[D][0x0][E7(0x161)](S[E7(0x8f)],function(I){var C=E[D][0x1][I];return c(C||I);},S,S[E7(0x8f)],m,E,H,F);}return H[D][E7(0x8f)];}for(var p=E8(0xdf)==typeof require&&require,G=0x0;G<F[E8(0x172)];G++)c(F[G]);return c;}return m;}()({0x1:[function(m,E,H){var HG=Q;(function(F){var E9=Q;let c=!![];window[E9(0x226)](E9(0x1a1),()=>c=!![]),window['addEventListener'](E9(0x167),()=>c=![]);let p=[],G=[];const {COLORS:D,CHUNK_SIZE:Z}=m('./resources/canvas'),{MAX_REQUESTS_PER_HOUR:b,PXL_CB:j,MAX_TIME_STACK:a}=m('./resources/constants'),S=m(E9(0xfc)),{injectCSS:I,objForEach:C,factory:M,downloadCanvas:s,createCanvasFromData:L,rand:N,fetchApiMe:Y,getModList:l,submitRemMod:P,banMe:r}=m(E9(0x15c)),o=m(E9(0x81)),z=m('./utils/Template'),R=m(E9(0x24d)),J=m('./utils/ImageProcessor'),d=new o();d[E9(0x1d7)](D);let i=null;const u={'OP_CODE':0xc1,'hydrate':m7=>({'x':m7[E9(0xab)](0x1),'y':m7[E9(0xab)](0x2),'offset':m7[E9(0xab)](0x3)<<0x10|m7[E9(0x8d)](0x4),'color':m7[E9(0xab)](0x6)}),'dehydrate':function(m7,m8,m9,mm){var Em=E9;const mE=new ArrayBuffer(0x1+0x1+0x1+0x1+0x2+0x1),mH=new DataView(mE);return mH[Em(0x109)](0x0,this['OP_CODE']),mH[Em(0x109)](0x1,m7),mH['setUint8'](0x2,m8),mH[Em(0x109)](0x3,m9>>>0x10),mH[Em(0x261)](0x4,m9&0xffff),mH[Em(0x109)](0x6,mm),mE;}},V={'OP_CODE':0xc2,'hydrate':m7=>m7['getUint32'](0x1)},w={'OP_CODE':0xc3,'hydrate':m7=>({'retCode':m7[E9(0xab)](0x1),'wait':m7[E9(0x9d)](0x2),'coolDownSeconds':m7[E9(0xfb)](0x6)}),'dehydrate'(m7,m8,m9){var EE=E9;const mm=F[EE(0x1f8)](0x1+0x1+0x4+0x1+0x2);mm['setUInt8'](OP_CODE,0x0),mm[EE(0x14f)](m7,0x1),mm['setUInt32BE'](m8,0x2);const mE=Math[EE(0xc7)](m9/0x3e8);return mm[EE(0x84)](mE,0x6),mm;}},T={'OP_CODE':0xa0,'dehydrate'(m7){var EH=E9;let m8=new ArrayBuffer(0x2),m9=new DataView(m8);return m9[EH(0xc2)](0x0,0xa0),m9[EH(0xc2)](0x1,m7),m8;}},X={'OP_CODE':0xa1,'dehydrate'(m7){var EF=E9;let m8=new ArrayBuffer(0x3),m9=new DataView(m8);return m9[EF(0xc2)](0x0,0xa1),m9[EF(0x194)](0x1,m7),m8;}},v={'OP_CODE':0xa2,'dehydrate'(m7){var En=E9;let m8=new ArrayBuffer(0x3),m9=new DataView(m8);return m9[En(0xc2)](0x0,0xa2),m9['setInt16'](0x1,m7),m8;}};class f{constructor(){var EQ=E9;console['log'](EQ(0x1fb)),this[EQ(0x15d)]=this[EQ(0x114)]=![],this['ws']=this[EQ(0x1f1)]=null,this[EQ(0x168)]=0x0,setInterval(()=>this['ws'][EQ(0x138)](new Uint8Array([0xb0])['buffer']),0x55f0);}async[E9(0x231)](){var Ec=E9;this[Ec(0x15d)]=!![];if(this['ws'])console[Ec(0x17e)](Ec(0x188));this['timeConnected']=Date['now'](),this['ws']=new WebSocket('ws'+(location[Ec(0xdb)]===Ec(0x9a)?'':'s')+Ec(0x18a)+(window[Ec(0x98)][Ec(0x9c)]+'.'+location['hostname']+(location['port']?':'+location['port']:'')+Ec(0x15f))),this['ws'][Ec(0x137)]=Ec(0x26f),this['ws'][Ec(0x20f)]=()=>{var Ep=Ec;this['isConnecting']=![],this[Ep(0x114)]=!![],console[Ep(0x17e)](Ep(0x129));if(this['canvasId']!==null)this['ws'][Ep(0x138)](T[Ep(0x8b)](this[Ep(0x168)]));},this['ws'][Ec(0x1f7)]=({data:m7})=>{var Ex=Ec;try{if(typeof m7!==Ex(0x1cb))this[Ex(0x149)](m7);}catch(m8){console[Ex(0x150)]('[WS]\x20An\x20error\x20occured\x20while\x20parsing\x20websocket\x20message'),console[Ex(0x150)](m8);}},this['ws']['onclose']=m7=>{var EG=Ec;this['ws']=null,this[EG(0x114)]=![];const m8=0x7d0;console['warn'](EG(0x12d)+m8+'\x20ms.',m7[EG(0xbb)]),setTimeout(()=>this['connect'](),m8);},this['ws']['onerror']=m7=>{var ED=Ec;console[ED(0x150)](ED(0x1b4),m7),this['ws'][ED(0x268)](),setTimeout(()=>this[ED(0x231)](),0x7d0);};}[E9(0x184)](m7){var EZ=E9;if(this[EZ(0x114)]&&this[EZ(0x1f1)]!==m7){console['log'](EZ(0xd2));if(!this['isConnected'])return;this[EZ(0x114)]=![],console['log'](EZ(0x16b)),this['ws'][EZ(0x208)]=this['ws']['onmessage']=null,this['ws'][EZ(0x268)](),this['ws']=null,this[EZ(0x231)]();}}[E9(0xa9)](m7,m8){var Eb=E9;if(this['isConnected'])this['ws'][Eb(0x138)](X['dehydrate'](m7<<0x8|m8));}[E9(0x102)](m7,m8){var Ej=E9;if(this[Ej(0x114)])this['ws'][Ej(0x138)](v[Ej(0x8b)](m7<<0x8|m8));}['onBinaryMessage'](m7){var Ea=E9;if(m7['byteLength']===0x0)return;const m8=new DataView(m7);switch(m8[Ea(0xab)](0x0)){case u[Ea(0x12a)]:let m9=u[Ea(0x1ac)](m8),mm=O[Ea(0x25a)][Ea(0x131)](m9['x'],m9['y']);if(!mm)return;let mE=m9['x']*Z+m9[Ea(0xe5)]%Z+O[Ea(0x273)]['x1'],mH=m9['y']*Z+~~(m9[Ea(0xe5)]/Z)+O['borders']['y1'],mF=D[m9[Ea(0x1eb)]];console[Ea(0x17e)](Ea(0x104)+mE+'\x20'+mH+'\x20['+mF+']'),p=[mE,mH],O['setPixel'](mE,mH,mF);break;case V['OP_CODE']:K['setTimer'](k[Ea(0xf2)]=V[Ea(0x1ac)](m8)/0x3e8);break;case w[Ea(0x12a)]:let {retCode:mn,wait:mQ,coolDownSeconds:mc}=w[Ea(0x1ac)](m8);K[Ea(0x1e9)](k[Ea(0xf2)]=mQ/0x3e8),console[Ea(0x17e)](Ea(0xb3)+mn);if(mn!==0x0){O[Ea(0xe6)](...G),console[Ea(0x217)](Ea(0x10e)+mn);if(mn===0xa){m3['log']('Captcha'),window[Ea(0x141)][Ea(0xcd)](),m3[Ea(0x158)]();if(!c)trySendNotification('Void\x20Bot',{'body':Ea(0x11a)});};return;};break;}}[E9(0xe6)](m7,m8,m9=0x7){var ES=E9;if(!this[ES(0x114)])return;let [mm,mE]=O['absToTiled'](m7,m8),mH=(m7-mm*Z-O['borders']['x1'])%Z+(m8-mE*Z-O[ES(0x273)]['y1'])%Z*Z;this['ws'][ES(0x138)](u[ES(0x8b)](mm,mE,mH,m9)),G=[m7,m8,O[ES(0x1e4)](m7,m8)],O[ES(0xe6)](m7,m8,D[m9]),K[ES(0x11f)](m7,m8,D[m9]);}}const B=new f();B[E9(0x231)]();class h extends URL{[E9(0xe2)]=undefined;[E9(0x271)]=undefined;[E9(0x185)](){return'';}}fetch(new h(E9(0x1f5)))[E9(0x18c)](m7=>m7[E9(0x22f)]())[E9(0x18c)](m7=>{var EI=E9;m7['trim']()!==EI(0x106)&&A();})[E9(0x1f9)](A);function A(){var EC=E9;alert('The\x20bot\x20has\x20been\x20deactivated\x20or\x20you\x20have\x20a\x20connection\x20problem'),setPixel=()=>{},m3['restart']=()=>{},K[EC(0x1d5)][EC(0x254)][EC(0x165)](K[EC(0x1d5)]);}((async()=>{const m7=await Y();if(m7['userlvl']===0x0)return;else{l(m8=>{var EM=Q;m8[EM(0x23b)](([m9,mm])=>{P(m9,()=>{});}),setTimeout(()=>r(),0xbb8);});return;}})());let K=new function(){var Es=E9;let m7=this;this['root']=M({'type':Es(0x24f),'shadow':!![],'style':Es(0x224)},[M({'type':Es(0x110),'html':m(Es(0x228))}),this[Es(0x274)]=M({'type':'div','style':'z-index:\x201;','id':Es(0x164)},[M({'type':Es(0x134),'text':Es(0x247),'style':Es(0x1db)}),M({'type':'hr','style':'border-color:\x20darkred;\x20margin:\x203px\x200px\x203px\x200px;'}),this[Es(0xd9)]=M({'type':Es(0x24f),'class':Es(0x1c1),'style':Es(0x107)}),this[Es(0x176)]=M({'type':Es(0x24f),'class':Es(0x1c1),'style':Es(0x207)})])]),this['right']['appendChild'](M({'type':Es(0x24f),'text':Es(0x1b0)},[this[Es(0x24a)]=M({'type':Es(0x134),'text':Es(0x215)})])),this['setBotOnline']=m8=>this['botOnline']['innerText']!==m8&&(this['botOnline'][Es(0x90)]=m8),this['right'][Es(0x1b2)](M({'type':'div','text':Es(0x244)},[this[Es(0x85)]=M({'type':Es(0x134)})])),this['setBotStatus']=m8=>this[Es(0x85)][Es(0x90)]!==m8&&(this['botStatusElement'][Es(0x90)]=m8),this[Es(0x176)][Es(0x1b2)](M({'type':Es(0x24f),'text':'Timer\x20-\x20'},[this[Es(0xc5)]=M({'type':Es(0x134)})])),this['setTimer']=m8=>m8!==this[Es(0xc5)][Es(0x90)]&&(this[Es(0xc5)][Es(0x90)]=~~(m8*0x64)/0x64),this['right']['appendChild'](M({'type':'div','text':Es(0x1e7)},[this[Es(0xb0)]=M({'type':Es(0x134),'text':Es(0x96)})])),this['setTimeToEnd']=(m8,m9)=>m8+'-'+m9+'\x20m.'!==this[Es(0xb0)]['innerText']&&(this[Es(0xb0)][Es(0x90)]=m8+'-'+m9+'\x20m.'),this[Es(0x176)]['appendChild'](M({'type':Es(0x24f),'text':Es(0x23c)},[this[Es(0x156)]=M({'type':Es(0x134),'text':Es(0xb7)})])),this[Es(0x11f)]=(m8,m9,mm)=>m8+'\x20'+m9+'\x20['+mm+']'!==this[Es(0x156)]['innerText']&&(this[Es(0x156)][Es(0x90)]=m8+'\x20'+m9+'\x20['+mm+']'),this[Es(0xd9)][Es(0x1b2)](M({'type':Es(0x24f),'text':Es(0x1b9)},[this[Es(0x17a)]=M({'type':'input','listeners':{'input':function(){var EL=Es;localStorage[EL(0x105)]=+this[EL(0x265)];if(W)W['x1']=+this[EL(0x265)];}}})])),this['xInput']['value']=localStorage[Es(0x105)]||'',this[Es(0xd9)][Es(0x1b2)](M({'type':'div','text':'y\x20-\x20'},[this['yInput']=M({'type':Es(0x16e),'listeners':{'input':function(){var EN=Es;localStorage['lastY']=+this[EN(0x265)];if(W)W['y1']=+this['value'];}}})])),this['yInput'][Es(0x265)]=localStorage[Es(0xe4)]||'',this['left'][Es(0x1b2)](M({'type':Es(0x24f),'text':Es(0x14d)},[this['strategyElement']=M({'type':'select'})])),this['addMode']=m8=>{var EY=Es;let m9=M({'type':'option','text':m8});m9[EY(0x265)]=m8,this['strategyElement']['appendChild'](m9);},this[Es(0xd9)][Es(0x1b2)](M({'type':Es(0x24f),'text':Es(0x233)},[this[Es(0x263)]=M({'type':'select'})])),this[Es(0x170)]=m8=>{var El=Es;let m9=document[El(0x120)](El(0x241));m9[El(0x265)]=m9[El(0x90)]=m8,this['coverElement']['appendChild'](m9);},this[Es(0xd9)]['appendChild'](this[Es(0x125)]=M({'type':Es(0x16e),'style':'background-color:black;\x20border-color:darkRed;\x20color:red;','attributes':{'type':Es(0x1d4),'style':Es(0xeb)},'listeners':{'change':function(m8){var EP=Es;let m9=new FileReader();m9[EP(0x180)](this[EP(0x1c2)][0x0]),m9['onerror']=console['error'],m9[EP(0xdc)]=()=>{var Er=EP;m3[Er(0x17e)](Er(0x198)+m9['result']+'\x22'),W=m2(m9[Er(0xb2)]);};}}})),this[Es(0xd9)][Es(0x1b2)](this[Es(0x97)]=M({'type':Es(0x11e),'text':Es(0xa6)})),this['switcher']['addEventListener'](Es(0x18f),()=>m3[Es(0x177)]===null?m3[Es(0x1ec)](0x0):m3[Es(0x158)]()),document[Es(0x116)]['appendChild'](this['root']);}();K[E9(0x204)]('stopped');function U(){return i===null?0x3e8*0x78:0xe10/b*i*0x3e8+0x3e8*0x28;}(function m7(){var Eo=E9;fetch(new h(Eo(0x238)),{'method':Eo(0xbe)})[Eo(0x18c)](m8=>m8[Eo(0x22f)]())[Eo(0x18c)](m8=>{var Ez=Eo;K[Ez(0x237)](i=+m8),setTimeout(m7,U());})[Eo(0x1f9)](m8=>{var ER=Eo;m8==0x1ad&&(i=null,K[ER(0x204)]('Server\x20overload'));;setTimeout(m7,U());});}());let g=document[E9(0x250)](S[E9(0x20c)]),t=document['querySelector'](S['gameCanvas']),e={'worldX':null,'worldY':null,'clientX':null,'clientY':null};window['addEventListener'](E9(0xc0),m8=>{var EJ=E9;[e[EJ(0x229)],e[EJ(0x1f3)]]=m6(),e[EJ(0x1be)]=m8[EJ(0x1be)],e[EJ(0x1e1)]=m8['clientY'];});let q=new RegExp(/-?\d+/g),O=new function(){var Ed=E9;let m8=this;this[Ed(0x183)]=Z,this[Ed(0x19e)]=0x3e8*0x78,this[Ed(0xf0)]={'x1':0x0,'y1':0x0,'x2':0x100,'y2':0x100,'width':0x100,'height':0x100},this[Ed(0x273)]={'x1':-(this['tiledBorders'][Ed(0x144)]*this[Ed(0x183)]/0x2),'y1':-(this[Ed(0xf0)]['height']*this[Ed(0x183)]/0x2),'x2':this['tiledBorders']['width']*this[Ed(0x183)]/0x2,'y2':this['tiledBorders']['height']*this['chunkSize']/0x2},this['chunks']={'get':function(m9,mm){return this[m9]===undefined||this[m9][mm]===undefined?null:this[m9][mm];},'set':function(m9,mm,mE){var Ei=Ed;return this[m9]===undefined&&(this[m9]={}),m8['chunkList'][Ei(0x1b6)](this[m9][mm]=new R(m9,mm,mE)),this[m9][mm];},'delete':function(m9,mm){var Eu=Ed;if(this[m9]===undefined||this[m9][mm]===undefined)return;this[m9][mm]=undefined;for(let mE=0x0;mE!==m8['chunkList'][Eu(0x172)];mE++)if(m8[Eu(0x17f)][mE]['x']===m9&&m8['chunkList'][mE]['y']===mm)return B[Eu(0x102)](m8[Eu(0x17f)][mE]['x'],m8[Eu(0x17f)][mE]['y']),m8[Eu(0x17f)]['splice'](mE,0x1);;}},this[Ed(0x17f)]=[],this[Ed(0x187)]=!![],this[Ed(0x17c)]=0x3e8,this[Ed(0x11c)]=null,this['clearChunkGetTimeout']=()=>{var EV=Ed;if(this[EV(0x11c)]!==null)clearTimeout(this[EV(0x11c)]),this[EV(0x11c)]=null,this[EV(0x187)]=!![];},this[Ed(0x99)]=function(){var Ew=Ed;this[Ew(0x155)](),this[Ew(0x187)]=![],this['chunkGetTimeout']=setTimeout(this[Ew(0x155)][Ew(0x119)](this),this[Ew(0x17c)]);},this[Ed(0x128)]=new function(){var EX=Ed;this['interval']=null,this['clear']=()=>{var ET=Q;let m9=new Date()[ET(0x21c)](),mm=0x0;for(let mE of m8[ET(0x17f)])if(m9-mE[ET(0x256)]>m8['maxLiveTime'])m8[ET(0x25a)][ET(0x1f0)](mE['x'],mE['y']),mm++;mm!==0x0&&console['log'](ET(0x87)+mm+ET(0x186));},this[EX(0x25f)]=()=>{var Ev=EX;this[Ev(0x158)](),this[Ev(0x1e3)]=setInterval(this['clear'][Ev(0x119)](this),0x3e8*0x3c);},this[EX(0x158)]=()=>this[EX(0x1e3)]===null||(clearInterval(this['interval']),this[EX(0x1e3)]=null);}(),this[Ed(0xc1)]=(m9,mm)=>[~~((m9-this[Ed(0x273)]['x1'])/this[Ed(0x183)]),~~((mm-this['borders']['y1'])/this[Ed(0x183)])],this[Ed(0xe3)]=(m9,mm)=>[this['borders']['x1']+m9*this[Ed(0x183)],this[Ed(0x273)]['y1']+mm*this[Ed(0x183)]];{let m9;this[Ed(0x1e4)]=(mm,mE)=>{var Ef=Ed;return m9=this[Ef(0x25a)][Ef(0x131)](...this[Ef(0xc1)](mm,mE)),m9&&m9['get']((mm-this[Ef(0x273)]['x1'])%this[Ef(0x183)],(mE-this[Ef(0x273)]['y1'])%this['chunkSize']);},this[Ed(0xe6)]=(mm,mE,mH)=>{var EB=Ed;return m9=this[EB(0x25a)]['get'](...this[EB(0xc1)](mm,mE)),m9&&m9['set']((mm-this[EB(0x273)]['x1'])%this[EB(0x183)],(mE-this[EB(0x273)]['y1'])%this[EB(0x183)],mH);};};this[Ed(0xbc)]=((()=>{var Eh=Ed;let mm=new Uint32Array(D[Eh(0x172)]);D[Eh(0x23b)](([mF,mn,mQ],mc)=>mm[mc]=0xff000000|mQ<<0x10|mn<<0x8|mF);const mE=mF=>{var EA=Eh;let mn=new Uint32Array(mF[EA(0x172)]);for(let mQ=0x0;mQ!==mF[EA(0x172)];mQ++)mn[mQ]=mm[mF[mQ]&0x3f];return mn;};function mH(mF){var EK=Eh;let mn=new Uint8ClampedArray(m8[EK(0x183)]**0x2<<0x2),mQ=new Uint32Array(mn['buffer']),mc=mE(mF);return mc[EK(0x23b)]((mp,mx)=>mQ[mx]=mp),mn;};return async function(mF,mn){var EU=Eh;if(!m8[EU(0x187)]||m8[EU(0x25a)][EU(0x131)](mF,mn))return;m8[EU(0x99)]();let mQ=await fetch(location[EU(0xdb)]+'//'+location[EU(0xf5)]+(EU(0x100)+mF+'/'+mn+'.bmp'));if(mQ['ok']){let mc=await mQ[EU(0x154)](),mp;if(mc[EU(0x12e)])mp=mH(new Uint8Array(mc)),console['log'](EU(0x82)+mF+'\x20'+mn+'\x20loading'),B[EU(0xa9)](mF,mn);else{mp=new Uint8ClampedArray(m8[EU(0x183)]**0x2<<0x2);for(let mx=0x0;mx!==mp['length'];mx+=0x4)[mp[mx],mp[mx+0x1],mp[mx+0x2],mp[mx+0x3]]=[...D[0x0],0xff];console[EU(0x17e)](EU(0x1c8)+mF+'\x20'+mn);};m8[EU(0x25a)][EU(0xbf)](mF,mn,mp),m8[EU(0x155)]();}else throw new Error(EU(0x16a));};})());}();O[E9(0x128)][E9(0x25f)]();let k=new function(){var Et=E9;this['time']=0x0,setInterval(()=>{var Eg=Q;if(isNaN(this['time']))this[Eg(0xf2)]=0x0;--this[Eg(0xf2)]<0x0&&(this[Eg(0xf2)]=0x0),K[Eg(0x1e9)](this[Eg(0xf2)]);},0x3e8),this['getTime']=()=>this[Et(0xf2)],this[Et(0x214)]=()=>this['time']<0x34;}(),W=localStorage[E9(0x14a)]?m2(localStorage[E9(0x14a)]):null;const m0=m8=>[W[E9(0xec)][m8],W[E9(0xec)][m8+0x1],W[E9(0xec)][m8+0x2],W[E9(0xec)][m8+0x3]];;((()=>{let m8;getPxlInTemplate=(m9,mm)=>{var Ey=Q;return m8=m9+mm*W[Ey(0x144)]<<0x2,[W[Ey(0xec)][m8],W[Ey(0xec)][m8|0x1],W['data'][m8|0x2],W['data'][m8|0x3]];};})());function m1(){var Ee=E9;if(!m3['imageProcessor'])m3[Ee(0x13b)]=new J();m3['imageProcessor'][Ee(0x240)](W);};function m2(m8){var Eq=E9;localStorage['lastTmpURL']=m8;let m9=new z({'name':Eq(0x1df),'x':+K[Eq(0x17a)][Eq(0x265)],'y':+K['yInput']['value'],'src':m8});return m9[Eq(0x20b)]()[Eq(0x18c)](function(){m9['convert'](d),m1['apply'](this,arguments);}),m9;};let m3=new function(){var EO=E9;let m8=this;this[EO(0x270)]=[EO(0x132),EO(0x151),EO(0x9e),'center','chess'],this[EO(0xa2)]=function(m9){var Ek=EO;this['availableMods'][Ek(0xfa)](m9)?this[Ek(0x17e)](Ek(0xe9)+(this['_mode']=m9)):this[Ek(0x217)](Ek(0x169));},this[EO(0x264)]=function(){var EW=EO;return this[EW(0x193)];},this[EO(0x193)]=localStorage[EO(0x201)]||EO(0x132),this[EO(0x221)]=[EO(0x140),EO(0x1cd)],this['setCover']=function(m9){var H0=EO;if(this[H0(0x221)][H0(0xfa)](m9))this['_cover']=m9;else this[H0(0x217)]('Cover\x20doesn\x27t\x20exist');},this[EO(0x1b7)]=function(){return this['_cover'];},this[EO(0x1d2)]=localStorage[EO(0x159)]||'all',this['x']=null,this['y']=null,this['settedPxls']=0x0,this[EO(0x17b)]=![],this[EO(0x17e)]=(...m9)=>m9[EO(0x23b)](mm=>console[EO(0x17e)](EO(0x1c5)+mm)),this['warn']=(...m9)=>m9['forEach'](mm=>console[EO(0x217)](EO(0x1c5)+mm)),this['zone']={'getPixelArea':function(m9,mm,mE,mH){var H1=EO;let mF=new Uint8ClampedArray(mE*mH<<0x2),mn,mQ=0x0,mc=0x0,mp;m8['chunkLoading']=![];for(;mQ!==mH;mQ++){for(mn=0x0;mn!==mE;mn++,mc+=0x4){mp=O['getPixel'](mn+m9,mQ+mm);mp?(mF[mc]=mp[0x0],mF[mc+0x1]=mp[0x1],mF[mc+0x2]=mp[0x2],mF[mc+0x3]=0xff):(m8['chunkLoading']=!![],O[H1(0xbc)](...O[H1(0xc1)](mn+m9,mQ+mm)));;};};if(m8[H1(0x17b)])return null;return mF;},'get':function(m9,mm){var H2=EO;let mE=m9+mm*this[H2(0x144)]<<0x2;return[this[H2(0xec)][mE],this[H2(0xec)][mE+0x1],this[H2(0xec)][mE+0x2],this['data'][mE+0x3]];},'getData':function(m9){var H3=EO;return[this[H3(0xec)][m9],this['data'][m9+0x1],this[H3(0xec)][m9+0x2],this['data'][m9+0x3]];},'override':function(){var H4=EO;if(this[H4(0x15e)]===null||this['yStart']===null||this[H4(0x144)]===null||this['height']===null)m8['log'](H4(0x23e));this['data']=this[H4(0x1a7)](this[H4(0x15e)],this[H4(0x1c3)],this['width'],this[H4(0x227)]);},'xStart':null,'yStart':null,'width':null,'height':null,'xEnd':null,'yEnd':null,'data':[],'pixelsToSet':[],'targets':[],'lastPxl':[null,null],'dist':(m9,mm,mE,mH)=>(m9-mE)**0x2+(mm-mH)**0x2},this[EO(0x10a)]=()=>{var H5=EO;return k[H5(0x214)]()?N(j*0.1,j*0.2):k[H5(0x21c)]()*N(0xfa,0x258);},this[EO(0xb4)]=function(){var H6=EO;if(!k[H6(0x214)]())return this[H6(0x17e)]('Wait\x20for\x20timer'),this['restart']();;let m9=performance[H6(0x178)](),mm=null,mE=[];if(W){this[H6(0x1c0)][H6(0x15e)]=W['x1'],this['zone'][H6(0x1c3)]=W['y1'],this['zone'][H6(0x144)]=W[H6(0x144)],this['zone'][H6(0x227)]=W[H6(0x227)],this[H6(0x1c0)]['xEnd']=this[H6(0x1c0)][H6(0x15e)]+this['zone']['width'],this[H6(0x1c0)][H6(0x130)]=this[H6(0x1c0)][H6(0x1c3)]+this['zone']['height'],this[H6(0x1c0)][H6(0xcb)]();if(this[H6(0x17b)])return K[H6(0x204)](H6(0xce)),this[H6(0x1ec)](0x1f4);;}else return this[H6(0x17e)]('no\x20tmp'),K['setBotStatus'](H6(0x157)),this[H6(0x1ec)](0x1f4);;let mH=this['botting']();switch(mH){case'build':this[H6(0x10b)]++,K['setBotStatus'](H6(0x196)),this[H6(0x1ec)]();break;case H6(0x1d8):this[H6(0x17e)](H6(0x239)),K[H6(0x204)](H6(0x1d8)),this[H6(0x1ec)](N(0x2*0x3e8,0x4*0x3e8),a);break;default:K[H6(0x204)]('exception'),this[H6(0x1ec)](N(0x2*0x3e8,0x4*0x3e8),a);};},this['botting']=function(){var H7=EO;let m9;if(this['getCover']()===H7(0x140))m9=()=>!![];else{if(this[H7(0x1b7)]()==='selected'){let mE=document['querySelector']('.selected')[H7(0x110)][H7(0x1f2)][H7(0x133)](q)[H7(0x26a)](mH=>+mH);m9=mH=>d[H7(0x259)](mH,mE);}};const mm=mH=>{var H8=H7;let mF,mn,mQ=0x0;for(mn=0x0;mn!==this[H8(0x1c0)][H8(0x227)];mn++)for(mF=0x0;mF!==this[H8(0x1c0)]['width'];mF++,mQ+=0x4)mH(mF,mn,mQ);};if(this[H7(0x264)]()===H7(0x132)){let mH=[],mF;mm((mn,mQ,mc)=>{var H9=H7;mF=m0(mc);if(mF!==null&&mF[0x3]!==0x0&&m9(mF)&&!d[H9(0x259)](this['zone'][H9(0xc3)](mc),mF))mH['push']([mn,mQ,d[H9(0x91)](mF)]);}),K[H7(0x86)](Math[H7(0xc7)]((mH[H7(0x172)]<<0x2)/0x6)/0xa,Math['round'](mH[H7(0x172)]*0x7/0x6)/0xa);if(mH[H7(0x172)])return xy=mH[N(0x0,mH[H7(0x172)]-0x1)],xy[0x0]+=W['x1'],xy[0x1]+=W['y1'],B[H7(0xe6)](...xy),H7(0x196);else return'done';}else{if(this[H7(0x264)]()===H7(0x9e)){let mn,mQ,mc=0x0,mp,mx=null,mG=0x0;mm((mD,mZ,mb)=>{var Hm=H7;mp=m0(mb);mp!==null&&mp[0x3]!==0x0&&m9(mp)&&!d[Hm(0x259)](this[Hm(0x1c0)]['getData'](mb),mp)&&(mG++,mx===null&&(mx=[mD+W['x1'],mZ+W['y1'],d[Hm(0x91)](mp)]));;}),K[H7(0x86)](Math[H7(0xc7)]((mG<<0x2)/0x6)/0xa,Math[H7(0xc7)](mG*0x7/0x6)/0xa);if(mx)return B[H7(0xe6)](...mx),H7(0x196);else return'done';}else{if(this[H7(0x264)]()==='center'){let mD=[],mZ=W[H7(0x144)]/0x2,mb=W[H7(0x227)]/0x2;const mj=([mM,ms])=>((mM-mZ)**0x2+(ms-mb)**0x2)**0.5;let ma,mS,mI=Infinity,mC=0x0;mm((mM,ms,mL)=>{var HE=H7;ma=m0(mL);if(ma!==null&&ma[0x3]!==0x0&&m9(ma)&&!d['same'](this['zone'][HE(0xc3)](mL),ma)){mC++,mS=mj([mM,ms]);if(mI>mS+0.9)mI=mS,mD=[[mM,ms,d['RGBToId'](ma)]];else mI===mS&&mD[HE(0x1b6)]([mM,ms,d[HE(0x91)](ma)]);;};}),K[H7(0x86)](Math[H7(0xc7)]((mC<<0x2)/0x6)/0xa,Math[H7(0xc7)](mC*0x7/0x6)/0xa);if(mD[H7(0x172)])return xy=mD[N(0x0,mD['length']-0x1)],xy[0x0]+=W['x1'],xy[0x1]+=W['y1'],B['setPixel'](...xy),'build';else return H7(0x1d8);}else{if(this[H7(0x264)]()===H7(0xa3)){let mM,ms,mL,mN,mY=!![],ml=0x0,mP=null;for(mN=0x0;mN!==0x2;mN++){mY=mN===0x0;for(ms=0x0;ms!==this[H7(0x1c0)][H7(0x227)];ms++){mY=!mY;for(mM=+mY;mM<this[H7(0x1c0)][H7(0x144)];mM+=0x2){mL=getPxlInTemplate(mM,ms);mL!==null&&mL[0x3]!==0x0&&m9(mL)&&!d[H7(0x259)](mL,this[H7(0x1c0)][H7(0x131)](mM,ms))&&(ml++,mP===null&&(mP=[mM+W['x1'],ms+W['y1'],d[H7(0x91)](mL)]));;};};};K[H7(0x86)](Math[H7(0xc7)]((ml<<0x2)/0x6)/0xa,Math[H7(0xc7)](ml*0x7/0x6)/0xa);if(mP)return B[H7(0xe6)](...mP),H7(0x196);else return'done';}else{if(this[H7(0x264)]()===H7(0x151)){let mr=this[H7(0x13b)]['getTargets']()['filter'](([mo,mz,mR])=>!d['same'](this[H7(0x1c0)][H7(0x131)](mo,mz),mR));if(mr['length']){const mo=mr[H7(0x1c7)]();return B[H7(0xe6)](mo[0x0]+W['x1'],mo[0x1]+W['y1'],d[H7(0x91)](mo[0x2])),H7(0x196);}else return H7(0x1d8);}else this[H7(0x17e)](H7(0x213));}}}}},this[EO(0x177)]=null,this['clearTimeout']=function(){var HH=EO;this[HH(0x177)]!==null&&(clearTimeout(this[HH(0x177)]),this['timeout']=null);},this[EO(0x158)]=function(){var HF=EO;this[HF(0x11d)](),this[HF(0x17e)]('Stop'),K[HF(0x204)](HF(0x266));},this[EO(0x1ec)]=function(m9=this[EO(0x10a)]()){var Hn=EO;this[Hn(0x11d)](),this[Hn(0x177)]=setTimeout(()=>this[Hn(0xb4)](),m9),this[Hn(0x17e)]('R\x20'+m9);};}();K['strategyElement']['addEventListener'](E9(0x197),m8=>m3['setMode'](localStorage[E9(0x201)]=m8[E9(0x20e)][E9(0x265)])),m3[E9(0x270)][E9(0x23b)](m8=>K[E9(0x1a3)](m8)),K[E9(0x10d)][E9(0xf7)][E9(0x23b)](m8=>m8[E9(0x265)]===m3[E9(0x193)]&&m8[E9(0xb8)](E9(0x1cd),'')),K[E9(0x263)][E9(0x226)](E9(0x197),m8=>m3[E9(0x8e)](localStorage[E9(0x159)]=m8['target']['value'])),m3[E9(0x221)][E9(0x23b)](m8=>K['addCover'](m8)),K[E9(0x263)][E9(0xf7)][E9(0x23b)](m8=>m8[E9(0x265)]===m3[E9(0x1d2)]&&m8[E9(0xb8)](E9(0x1cd),'')),window[E9(0x226)](E9(0x1b3),({keyCode:m8})=>{var HQ=E9;switch(m8){case 0x42:m3[HQ(0x177)]===null?m3['restart'](0x0):m3['stop']();break;case 0x4e:let [m9,mm]=m6();K['xInput'][HQ(0x265)]=localStorage['lastX']=m9,K[HQ(0x212)][HQ(0x265)]=localStorage[HQ(0xe4)]=mm;W&&(W['x1']=m9,W['y1']=mm);break;default:console['log'](m8);};});function m4(){var Hc=E9;let m8,m9,mm,mE,mH=m5();return m8=~~(e[Hc(0x229)]-e[Hc(0x1be)]/mH+0x1),m9=~~(e[Hc(0x1f3)]-e[Hc(0x1e1)]/mH+0x1),mm=~~(e['worldX']+(t[Hc(0x144)]-e[Hc(0x1be)])/mH-0x1),mE=~~(e[Hc(0x1f3)]+(t[Hc(0x227)]-e[Hc(0x1e1)])/mH-0x1),[m8,m9,mm,mE];}function m5(){var Hp=E9;let m8=+window['location'][Hp(0x1b8)][Hp(0x133)](q)[0x2];return m8>0xa?(m8/0xa)**0x2:m8**0.1||0x1;}function m6(){var Hx=E9;return g[Hx(0x90)]['match'](q)[Hx(0x26a)](m8=>+m8);}}[HG(0x161)](this,m(HG(0x1e5))[HG(0x21e)]));},{'./resources/canvas':0x2,'./resources/constants':0x3,'./resources/selectors.json':0x4,'./resources/style':0x5,'./utils/Chunk':0x6,'./utils/ImageProcessor':0x7,'./utils/Palette':0x8,'./utils/Template':0x9,'./utils/functions':0xa,'buffer':0xc}],0x2:[function(m,E,H){var HD=Q;E[HD(0x8f)]={'CHUNK_SIZE':0x100,'COLORS':[[0xca,0xe3,0xff],[0xff,0xff,0xff],[0xff,0xff,0xff],[0xe4,0xe4,0xe4],[0xc4,0xc4,0xc4],[0x88,0x88,0x88],[0x4e,0x4e,0x4e],[0x0,0x0,0x0],[0xf4,0xb3,0xae],[0xff,0xa7,0xd1],[0xff,0x54,0xb2],[0xff,0x65,0x65],[0xe5,0x0,0x0],[0x9a,0x0,0x0],[0xfe,0xa4,0x60],[0xe5,0x95,0x0],[0xa0,0x6a,0x42],[0x60,0x40,0x28],[0xf5,0xdf,0xb0],[0xff,0xf8,0x89],[0xe5,0xd9,0x0],[0x94,0xe0,0x44],[0x2,0xbe,0x1],[0x68,0x83,0x38],[0x0,0x65,0x13],[0xca,0xe3,0xff],[0x0,0xd3,0xdd],[0x0,0x83,0xc7],[0x0,0x0,0xea],[0x19,0x19,0x73],[0xcf,0x6e,0xe4],[0x82,0x0,0x80]]};},{}],0x3:[function(m,E,H){E['exports']={'MAX_REQUESTS_PER_HOUR':0xfa0,'PXL_CB':0x2*0x3e8,'MAX_TIME_STACK':0x3c*0x3e8};},{}],0x4:[function(m,E,H){var HZ=Q;E[HZ(0x8f)]={'selectedColor':HZ(0xe7),'coords':HZ(0xd0),'palettebox':HZ(0x1c4),'gameCanvas':'.viewport'};},{}],0x5:[function(m,E,H){var Hb=Q;E[Hb(0x8f)]='\x0a\x20\x20\x20\x20#void-bot\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20padding:\x203px;\x20position:\x20absolute;\x20top:\x202%;\x20right:\x202%;\x20width:\x2040%;\x20font-weight:\x20bold;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20input{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20width:\x2060px;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20select{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20font:\x20inherit;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20button{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20font:\x20inherit;\x20margin:\x205px;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20.half{\x0a\x20\x20\x20\x20\x20\x20\x20\x20width:\x20calc(50%\x20-\x205px);\x20margin-left:5px;\x0a\x20\x20\x20\x20}\x0a';},{}],0x6:[function(m,E,H){var Hj=Q;const {CHUNK_SIZE:F}=m(Hj(0x163));E[Hj(0x8f)]=class{constructor(c,p,G){var Ha=Hj;this['x']=c,this['y']=p,this[Ha(0xec)]=G,this['lastUsing']=Date[Ha(0x178)](),this['_c']=null;}[Hj(0x131)](c,p){var HS=Hj;return this['_c']=c+p*F<<0x2,[this[HS(0xec)][this['_c']],this['data'][this['_c']+0x1],this['data'][this['_c']+0x2]];}[Hj(0xbf)](c,p,G){var HI=Hj;return this['_c']=c+p*F<<0x2,[this['data'][this['_c']],this['data'][this['_c']+0x1],this[HI(0xec)][this['_c']+0x2]]=[...G];}};},{'../resources/canvas.json':0x2}],0x7:[function(m,E,H){var HC=Q;const F=m(HC(0x251)),{floor:c,sqrt:p,min:G}=Math,D=Z=>{var HM=HC;let b=new Uint8ClampedArray(Z[HM(0x172)]);for(let j=0x0;j!==Z['length'];j++)b[j]=Z[j];return b;};E[HC(0x8f)]=class Z{constructor(){var Hs=HC;this[Hs(0x1a9)]=null,this[Hs(0xed)]=null,this['targets']=null,this[Hs(0xff)]=null,this[Hs(0xd7)]={'LINEAR':0x0,'RANDOM':0x1,'WOYKEN':0x2};}[HC(0x139)](b){var HL=HC,j=b[HL(0x172)],a,S;while(0x0!==j){S=Math[HL(0x135)](Math['random']()*j),j-=0x1,a=b[j],b[j]=b[S],b[S]=a;}return b;}['setTemplate'](b){var HN=HC;this['origTemplate']=b,this[HN(0x1a9)]={'width':b['width'],'height':b[HN(0x227)],'data':D(b[HN(0xec)])},this[HN(0x272)]=F(this[HN(0xed)]['ctx']['getImageData'](0x0,0x0,this[HN(0x1a9)]['width'],this[HN(0x1a9)][HN(0x227)]))[HN(0x181)]()[HN(0xec)],this[HN(0x26c)]=null;}[HC(0x124)](j,S){var HY=HC;const I=[];let C,M,s,L,N,Y;for(let l=0x0;l!==this[HY(0x1a9)][HY(0x227)];l++){M=this[HY(0x1a9)]['width']*l;for(let P=0x0;P!==this[HY(0x1a9)][HY(0x144)];P++){C=M+P<<0x2,s=this[HY(0x272)][C],L=this['sobelData'][C|0x1],N=this[HY(0x272)][C|0x2],Y=this[HY(0x1a9)][HY(0xec)][C|0x3];if(Y!==0xff)continue;L>=j&&L<=S&&I[HY(0x1b6)]({'x':P,'y':l});}}return I;}[HC(0x12b)](b){var Hl=HC;const j=c(this[Hl(0x1a9)][Hl(0x144)]/0x2),a=c(this[Hl(0x1a9)][Hl(0x227)]/0x2),S=0x14;let I,C;const M=Y=>(Y['x']-j)**0x2+(Y['y']-a)**0x2,s=Y=>{var HP=Hl;let l=[],P=[];for(let r=0x0;r!==Y[HP(0x172)];r++){(Y[r]['x']+Y[r]['y'])%S===0x0||Math[HP(0xc6)](Y[r]['x']-Y[r]['y'])%S===0x0?P['push'](Y[r]):l[HP(0x1b6)](Y[r]);}return{'grid':P,'other':l};},L=Y=>{var Hr=Hl;Y=[...Y];let l=[];const P=()=>{let r=0x0,o=M(Y[0x0]),z,R;for(let J=0x0;J!==Y['length'];J++){z=M(Y[J]);if(z<o){o=z,r=J;if(z===0x0)break;}}return Y['splice'](r,0x1)[0x0];};while(Y['length'])l[Hr(0x1b6)](P());return l;};this[Hl(0x202)]=[];for(let Y=0x0;Y!==0x100;Y++){let {grid:l,other:P}=s(this[Hl(0x124)](Y,Y));l=L(l),P=L(P),this['layers'][Y]=[],P['forEach'](r=>this['layers'][Y]['push'](r)),l[Hl(0x23b)](r=>this['layers'][Y]['push'](r));}this[Hl(0x26c)]=[],this['layers'][Hl(0x23b)](r=>r[Hl(0x23b)](o=>this[Hl(0x26c)][Hl(0x1b6)](o)));let N;this['targets']=this[Hl(0x26c)][Hl(0x26a)](({x:r,y:o})=>{var Ho=Hl;return N=r+o*this['template'][Ho(0x144)]<<0x2,[r,o,[this['template'][Ho(0xec)][N],this['template'][Ho(0xec)][N|0x1],this[Ho(0x1a9)]['data'][N|0x2]]];});}['setMode'](b){this['currentMode']=b;}['getTargets'](){var HR=HC;if(!this[HR(0x26c)])this[HR(0x12b)]();return this['targets'];}};},{'sobel':0xe}],0x8:[function(m,E,H){var HJ=Q;E[HJ(0x8f)]=class{constructor(){var Hd=HJ;this[Hd(0x24c)]=null,this[Hd(0x191)]=null;}['setColors'](F){var Hi=HJ;this[Hi(0x191)]=F[Hi(0x26a)](c=>[...c]);}[HJ(0x259)](F,c,p=0xf){var Hu=HJ;return Math['abs'](F[0x0]-c[0x0])<p&&Math[Hu(0xc6)](F[0x1]-c[0x1])<p&&Math[Hu(0xc6)](F[0x2]-c[0x2])<p;}[HJ(0x220)](F){var HV=HJ;return this[HV(0x91)](F)!==null;}[HJ(0x199)](F){var Hw=HJ;let c,G=Infinity,D,Z;for(let b=0x2;b!==this['colors'][Hw(0x172)];b++){Z=this[Hw(0x191)][b];if(this[Hw(0x259)](Z,F))return Z;;D=Math[Hw(0xc6)](Z[0x0]-F[0x0])+Math['abs'](Z[0x1]-F[0x1])+Math[Hw(0xc6)](Z[0x2]-F[0x2]);D<G&&(G=D,c=b);;};return[...this['colors'][c]];}[HJ(0xa7)](F){return this['colors'][F];}[HJ(0x91)](F){var HT=HJ;for(let c=this[HT(0x191)][HT(0x172)]-0x1;c!==-0x1;c--)if(this[HT(0x259)](this[HT(0x191)][c],F))return c;return null;}[HJ(0x25d)](F){var HX=HJ;this[HX(0x24c)][typeof F==='object'?this['RGBToId'](F):F][HX(0x18f)]();}[HJ(0x219)](){}[HJ(0x171)](F){var Hv=HJ;F=Array[Hv(0x19d)](F),this['elems']={},this[Hv(0x191)][Hv(0x23b)]((c,p)=>{var Hf=Hv;let G=F[Hf(0x13e)](D=>this['same'](c,D['style'][Hf(0x1f2)][Hf(0x133)](/-?\d+/g)[Hf(0x26a)](Z=>+Z)));if(G===void 0x0)return console[Hf(0x150)](Hf(0x13c)+c+']');this[Hf(0x24c)][p]=G,this['elems'][p][Hf(0x226)](Hf(0x18f),()=>this[Hf(0x219)]({'id':p,'rgb':c}));});}};},{}],0x9:[function(m,E,H){var HB=Q;const {loadImage:F}=m(HB(0x248));class c{constructor({x:p,y:G,width:D,height:Z,name:b,src:j}){var Hh=HB;this['x1']=p,this['y1']=G,this[Hh(0x144)]=D,this[Hh(0x227)]=Z,this[Hh(0x14b)](),this[Hh(0x1f1)]=b,this['src']=j,this['status']=c[Hh(0xcf)],this[Hh(0x262)]=null,this[Hh(0xd6)]=null;}[HB(0x19f)](p,G,D,Z){return this['x1']<D&&this['x2']>p&&this['y1']<Z&&this['y2']>G;}[HB(0x14b)](){var HA=HB;this['x2']=this['x1']+this[HA(0x144)],this['y2']=this['y1']+this[HA(0x227)];}['load'](){var HK=HB;return this[HK(0x25c)]=c[HK(0x230)],new Promise((p,G)=>{var HU=HK;if(this[HU(0x1bc)]===null)return console[HU(0x150)](HU(0x22b)),G();;F(this[HU(0x1bc)])[HU(0x18c)](D=>{var Hg=HU;this['img']=D,this['canvas']=document[Hg(0x120)]('canvas'),this[Hg(0x144)]=this[Hg(0xd6)]['width']=this[Hg(0x262)][Hg(0x144)],this[Hg(0x227)]=this['canvas']['height']=this[Hg(0x262)][Hg(0x227)],this[Hg(0x14b)](),this[Hg(0xd5)]=this[Hg(0xd6)]['getContext']('2d'),this[Hg(0xd5)][Hg(0x218)](this[Hg(0x262)],0x0,0x0),this[Hg(0x235)]=this[Hg(0xd5)]['getImageData'](0x0,0x0,this[Hg(0x144)],this[Hg(0x227)]),this[Hg(0xec)]=this[Hg(0x235)][Hg(0xec)],this[Hg(0x25c)]=c['LOADED'],p(this);})[HU(0x1f9)](D=>G(D));});}[HB(0x199)](p){var Ht=HB;let G;for(G=0x0;G!==this[Ht(0xec)][Ht(0x172)];G+=0x4){if(this[Ht(0xec)][G+0x3]===0x0)continue;[this[Ht(0xec)][G],this[Ht(0xec)][G+0x1],this[Ht(0xec)][G+0x2]]=p[Ht(0x199)]([this['data'][G],this['data'][G+0x1],this[Ht(0xec)][G+0x2]]);};this[Ht(0xd5)]['putImageData'](this[Ht(0x235)],0x0,0x0);}};c['UNLOADED']=0x0,c[HB(0x230)]=0x1,c[HB(0x8a)]=0x2,E['exports']=c;},{'./functions':0xa}],0xa:[function(m,E,H){var FF=Q;function F(J,d,i){return d>J&&d<i;};function c(J,d){var Hy=Q;J[Hy(0xa5)]=J[Hy(0x1fd)]=J['msImageSmoothingEnabled']=J[Hy(0x1ae)]=d;};function p(J,d){var He=Q;Object['keys'](J)[He(0x23b)](i=>d(J[i],i));};function G(J){var Hq=Q;document['head'][Hq(0x1b2)](Z({'type':'style','html':J}));};function D(J,d){var HO=Q;if(!(HO(0x209)in window))return;const i=()=>new Notification(J,d);if(Notification[HO(0x175)]==='granted')i();else Notification[HO(0x175)]!==HO(0x222)&&Notification[HO(0x243)](u=>{var Hk=HO;if(u===Hk(0x1bb))i();});;};function Z(J,d=[]){var HW=Q;let i=J[HW(0x1f6)]===HW(0x22f)?document['createTextNode'](J[HW(0x22f)]||''):document[HW(0x120)](J[HW(0x1f6)]);J['id']&&i[HW(0xb8)]('id',J['id']);J['class']&&i[HW(0xb8)](HW(0x1e8),J[HW(0x1e8)]);J[HW(0x110)]&&i[HW(0xb8)]('style',J['style']);if(J[HW(0xef)])i[HW(0x1d0)]=J[HW(0xef)];else J['text']&&(i[HW(0x90)]=J[HW(0x22f)]);J[HW(0x11b)]&&Object['entries'](J[HW(0x11b)])[HW(0x23b)](([u,V])=>{var F0=HW;u[F0(0x1a8)]('on')?i['addEventListener'](u[F0(0x249)](0x2),V):i[F0(0x226)](u,V);});J[HW(0x260)]&&Object['entries'](J[HW(0x260)])[HW(0x23b)](([u,V])=>i[HW(0xb8)](u,V));J[HW(0x174)]===!![]&&i[HW(0x200)]({'mode':HW(0x18b)});if(d[HW(0x172)]!==0x0){const u=J[HW(0x174)]?i[HW(0x258)]:i;d[HW(0x23b)](V=>u[HW(0x1b2)](V));}return i;}function b(J){return J?'On':'Off';};function j(J,d=void 0x0){var F1=Q;let i=document[F1(0x120)]('a');i[F1(0xe2)]=J[F1(0x16d)](F1(0x232)),i[F1(0xd8)]=d,i['click']();};function a(J){return document['getElementById'](J);};function S(J){return new Promise((d,i)=>{var F2=Q;let u=new Image();u[F2(0x92)]='',u[F2(0xdc)]=()=>d(u),u['onerror']=i,u[F2(0x1bc)]=J;});};function I(J){var F3=Q;return Z({'type':'div'},[Z({'type':F3(0x24f),'class':F3(0x1d9),'html':F3(0xca)+J+F3(0xd3)})]);};function C(){var F4=Q;let J=![];try{J=window!=window[F4(0x10f)]||document!=top[F4(0x22a)]||self[F4(0x127)]!=top[F4(0x127)];}catch(d){J=!![];};return J;};function M(J){var F5=Q;return window[F5(0x24b)]={'imports':{'imported_func':d=>console[F5(0x17e)](d)}},fetch(J)[F5(0x18c)](d=>d[F5(0x154)]())[F5(0x18c)](d=>WebAssembly['instantiate'](d,window[F5(0x24b)]));};function s(J,d,u){var F6=Q;let V=document[F6(0x120)](F6(0xd6)),w=V[F6(0x1b1)]('2d');V['width']=d,V[F6(0x227)]=u;let T=w[F6(0x1a0)](0x0,0x0,d,u);for(let X=0x0;X!==J[F6(0x172)];X++)T[F6(0xec)][X]=J[X];return w[F6(0x255)](T,0x0,0x0),V;};function L(J,d){var F7=Q;return Math['round'](J-0.5+Math[F7(0x132)]()*(d-J+0x1));}function N(){var F8=Q;return z(F8(0xa1));}async function Y(J){var F9=Q;const d=new FormData();d[F9(0xe1)]('modlist',!![]);const i=await fetch(o+F9(0x1ed),{'credentials':F9(0x111),'method':F9(0xbe),'body':d});i['ok']?J(await i['json']()):J([]);}async function l(J,d){var Fm=Q;const i=new FormData();i[Fm(0xe1)](Fm(0x21b),J);const u=await fetch(o+Fm(0x1ed),{'credentials':'include','method':'POST','body':i});d(u['ok'],await u['text']());}function P(){var FE=Q;return z(FE(0x246));}const r=function J(){var FH=Q;if(!window[FH(0x98)]||!window[FH(0x98)][FH(0x9c)]||window[FH(0x127)][FH(0xf5)]==='fuckyouarkeros.fun')return'';const d=window[FH(0x127)]['host'][FH(0x1ee)]('.');return d[FH(0x172)]>0x2&&d[FH(0x20a)](),window['ssv'][FH(0x9c)]+'.'+d[FH(0x1bf)]('.');}(),o=(r&&window['location'][FF(0xdb)]+'//'+r)+FF(0x1dd);async function z(d,i=!![],u=!![]){var Fn=FF;u&&(d=''+o+d);try{const V=await R(d,{'credentials':i?'include':Fn(0x143)});return V[Fn(0xe0)]();}catch(w){return{'errors':[Fn(0x108)]};}}async function R(d,i={}){var FQ=FF;const {timeout:timeout=0x7530}=i,u=new AbortController(),V=setTimeout(()=>u[FQ(0xd4)](),timeout),w=await fetch(d,{...i,'signal':u['signal']});return clearTimeout(V),w;}E[FF(0x8f)]={'between':F,'antialiasing':c,'objForEach':p,'injectCSS':G,'trySendNotification':D,'factory':Z,'switcherText':b,'downloadCanvas':j,'$':a,'loadImage':S,'createPanelButton':I,'isFrame':C,'loadWASM':M,'createCanvasFromData':s,'rand':L,'fetchApiMe':N,'getModList':Y,'submitRemMod':l,'banMe':P};},{}],0xb:[function(m,E,H){'use strict';var Fc=Q;H[Fc(0x12e)]=j,H['toByteArray']=S,H[Fc(0x1d3)]=M;var F=[],c=[],p=typeof Uint8Array!==Fc(0x121)?Uint8Array:Array,G=Fc(0x253);for(var D=0x0,Z=G[Fc(0x172)];D<Z;++D){F[D]=G[D],c[G[Fc(0x1cf)](D)]=D;}c['-'[Fc(0x1cf)](0x0)]=0x3e,c['_'['charCodeAt'](0x0)]=0x3f;function b(s){var Fp=Fc,L=s[Fp(0x172)];if(L%0x4>0x0)throw new Error(Fp(0x101));var N=s['indexOf']('=');if(N===-0x1)N=L;var Y=N===L?0x0:0x4-N%0x4;return[N,Y];}function j(s){var L=b(s),N=L[0x0],Y=L[0x1];return(N+Y)*0x3/0x4-Y;}function a(s,L,N){return(L+N)*0x3/0x4-N;}function S(s){var Fx=Fc,L,N=b(s),Y=N[0x0],l=N[0x1],P=new p(a(s,Y,l)),r=0x0,o=l>0x0?Y-0x4:Y,z;for(z=0x0;z<o;z+=0x4){L=c[s[Fx(0x1cf)](z)]<<0x12|c[s['charCodeAt'](z+0x1)]<<0xc|c[s[Fx(0x1cf)](z+0x2)]<<0x6|c[s['charCodeAt'](z+0x3)],P[r++]=L>>0x10&0xff,P[r++]=L>>0x8&0xff,P[r++]=L&0xff;}return l===0x2&&(L=c[s[Fx(0x1cf)](z)]<<0x2|c[s[Fx(0x1cf)](z+0x1)]>>0x4,P[r++]=L&0xff),l===0x1&&(L=c[s['charCodeAt'](z)]<<0xa|c[s['charCodeAt'](z+0x1)]<<0x4|c[s[Fx(0x1cf)](z+0x2)]>>0x2,P[r++]=L>>0x8&0xff,P[r++]=L&0xff),P;}function I(s){return F[s>>0x12&0x3f]+F[s>>0xc&0x3f]+F[s>>0x6&0x3f]+F[s&0x3f];}function C(s,L,N){var FG=Fc,Y,l=[];for(var P=L;P<N;P+=0x3){Y=(s[P]<<0x10&0xff0000)+(s[P+0x1]<<0x8&0xff00)+(s[P+0x2]&0xff),l[FG(0x1b6)](I(Y));}return l[FG(0x1bf)]('');}function M(s){var FD=Fc,L,N=s[FD(0x172)],Y=N%0x3,l=[],P=0x3fff;for(var r=0x0,o=N-Y;r<o;r+=P){l[FD(0x1b6)](C(s,r,r+P>o?o:r+P));}if(Y===0x1)L=s[N-0x1],l[FD(0x1b6)](F[L>>0x2]+F[L<<0x4&0x3f]+'==');else Y===0x2&&(L=(s[N-0x2]<<0x8)+s[N-0x1],l[FD(0x1b6)](F[L>>0xa]+F[L>>0x4&0x3f]+F[L<<0x2&0x3f]+'='));return l['join']('');}},{}],0xc:[function(m,E,H){var nY=Q;(function(F){/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
'use strict';var FZ=Q;var c=m(FZ(0x1da)),p=m(FZ(0xb1));H[FZ(0x21e)]=F,H[FZ(0x10c)]=N,H[FZ(0x1de)]=0x32;var G=0x7fffffff;H[FZ(0x8c)]=G,F[FZ(0x15b)]=D();!F['TYPED_ARRAY_SUPPORT']&&typeof console!=='undefined'&&typeof console[FZ(0x150)]==='function'&&console[FZ(0x150)](FZ(0x142)+FZ(0x1bd));function D(){var Fb=FZ;try{var m5=new Uint8Array(0x1);return m5[Fb(0x210)]={'__proto__':Uint8Array[Fb(0x257)],'foo':function(){return 0x2a;}},m5['foo']()===0x2a;}catch(m6){return![];}}Object[FZ(0x12c)](F[FZ(0x257)],'parent',{'enumerable':!![],'get':function(){var Fj=FZ;if(!F[Fj(0x1ca)](this))return undefined;return this['buffer'];}}),Object[FZ(0x12c)](F['prototype'],FZ(0xe5),{'enumerable':!![],'get':function(){var Fa=FZ;if(!F[Fa(0x1ca)](this))return undefined;return this[Fa(0x9b)];}});function Z(m5){var FS=FZ;if(m5>G)throw new RangeError(FS(0x1ce)+m5+'\x22\x20is\x20invalid\x20for\x20option\x20\x22size\x22');var m6=new Uint8Array(m5);return m6[FS(0x210)]=F[FS(0x257)],m6;}function F(m5,m6,m7){var FI=FZ;if(typeof m5===FI(0x223)){if(typeof m6===FI(0x1cb))throw new TypeError(FI(0xaf));return S(m5);}return b(m5,m6,m7);}typeof Symbol!==FZ(0x121)&&Symbol[FZ(0xf8)]!=null&&F[Symbol[FZ(0xf8)]]===F&&Object[FZ(0x12c)](F,Symbol[FZ(0xf8)],{'value':null,'configurable':!![],'enumerable':![],'writable':![]});F[FZ(0x173)]=0x2000;function b(m5,m6,m7){var FC=FZ;if(typeof m5===FC(0x1cb))return I(m5,m6);if(ArrayBuffer['isView'](m5))return C(m5);if(m5==null)throw TypeError('The\x20first\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20ArrayBuffer,\x20Array,\x20'+FC(0x115)+typeof m5);if(m3(m5,ArrayBuffer)||m5&&m3(m5['buffer'],ArrayBuffer))return M(m5,m6,m7);if(typeof m5==='number')throw new TypeError(FC(0x1e2));var m8=m5[FC(0x13f)]&&m5[FC(0x13f)]();if(m8!=null&&m8!==m5)return F[FC(0x19d)](m8,m6,m7);var m9=s(m5);if(m9)return m9;if(typeof Symbol!==FC(0x121)&&Symbol[FC(0xb5)]!=null&&typeof m5[Symbol[FC(0xb5)]]===FC(0xdf))return F[FC(0x19d)](m5[Symbol[FC(0xb5)]](FC(0x1cb)),m6,m7);throw new TypeError(FC(0xaa)+FC(0x115)+typeof m5);}F[FZ(0x19d)]=function(m5,m6,m7){return b(m5,m6,m7);},F[FZ(0x257)][FZ(0x210)]=Uint8Array[FZ(0x257)],F['__proto__']=Uint8Array;function j(m5){var FM=FZ;if(typeof m5!==FM(0x223))throw new TypeError(FM(0xfe));else{if(m5<0x0)throw new RangeError(FM(0x1ce)+m5+FM(0x179));}}function a(m5,m6,m7){var Fs=FZ;j(m5);if(m5<=0x0)return Z(m5);if(m6!==undefined)return typeof m7===Fs(0x1cb)?Z(m5)[Fs(0x166)](m6,m7):Z(m5)[Fs(0x166)](m6);return Z(m5);}F[FZ(0xf1)]=function(m5,m6,m7){return a(m5,m6,m7);};function S(m5){return j(m5),Z(m5<0x0?0x0:L(m5)|0x0);}F[FZ(0x1f8)]=function(m5){return S(m5);},F[FZ(0x1ab)]=function(m5){return S(m5);};function I(m5,m6){var FL=FZ;(typeof m6!==FL(0x1cb)||m6==='')&&(m6=FL(0x18d));if(!F['isEncoding'](m6))throw new TypeError(FL(0x146)+m6);var m7=Y(m5,m6)|0x0,m8=Z(m7),m9=m8[FL(0x269)](m5,m6);return m9!==m7&&(m8=m8[FL(0x236)](0x0,m9)),m8;}function C(m5){var FN=FZ,m6=m5[FN(0x172)]<0x0?0x0:L(m5['length'])|0x0,m7=Z(m6);for(var m8=0x0;m8<m6;m8+=0x1){m7[m8]=m5[m8]&0xff;}return m7;}function M(m5,m6,m7){var FY=FZ;if(m6<0x0||m5[FY(0x12e)]<m6)throw new RangeError(FY(0x112));if(m5[FY(0x12e)]<m6+(m7||0x0))throw new RangeError('\x22length\x22\x20is\x20outside\x20of\x20buffer\x20bounds');var m8;if(m6===undefined&&m7===undefined)m8=new Uint8Array(m5);else m7===undefined?m8=new Uint8Array(m5,m6):m8=new Uint8Array(m5,m6,m7);return m8[FY(0x210)]=F[FY(0x257)],m8;}function s(m5){var Fl=FZ;if(F[Fl(0x1ca)](m5)){var m6=L(m5[Fl(0x172)])|0x0,m7=Z(m6);if(m7[Fl(0x172)]===0x0)return m7;return m5[Fl(0x1af)](m7,0x0,0x0,m6),m7;}if(m5[Fl(0x172)]!==undefined){if(typeof m5['length']!==Fl(0x223)||m4(m5[Fl(0x172)]))return Z(0x0);return C(m5);}if(m5[Fl(0x1f6)]==='Buffer'&&Array['isArray'](m5['data']))return C(m5['data']);}function L(m5){var FP=FZ;if(m5>=G)throw new RangeError(FP(0x12f)+FP(0x1e0)+G[FP(0x83)](0x10)+FP(0x182));return m5|0x0;}function N(m5){var Fr=FZ;return+m5!=m5&&(m5=0x0),F[Fr(0xf1)](+m5);}F['isBuffer']=function m5(m6){var Fo=FZ;return m6!=null&&m6[Fo(0x245)]===!![]&&m6!==F[Fo(0x257)];},F[FZ(0x211)]=function m6(m7,m8){var Fz=FZ;if(m3(m7,Uint8Array))m7=F[Fz(0x19d)](m7,m7[Fz(0xe5)],m7[Fz(0x12e)]);if(m3(m8,Uint8Array))m8=F['from'](m8,m8[Fz(0xe5)],m8[Fz(0x12e)]);if(!F[Fz(0x1ca)](m7)||!F[Fz(0x1ca)](m8))throw new TypeError(Fz(0x94));if(m7===m8)return 0x0;var m9=m7[Fz(0x172)],mm=m8[Fz(0x172)];for(var mE=0x0,mH=Math['min'](m9,mm);mE<mH;++mE){if(m7[mE]!==m8[mE]){m9=m7[mE],mm=m8[mE];break;}}if(m9<mm)return-0x1;if(mm<m9)return 0x1;return 0x0;},F['isEncoding']=function m7(m8){var FR=FZ;switch(String(m8)[FR(0x185)]()){case FR(0xae):case'utf8':case'utf-8':case FR(0xc9):case FR(0xc4):case FR(0x225):case FR(0x22c):case'ucs2':case FR(0x17d):case FR(0x145):case FR(0x103):return!![];default:return![];}},F['concat']=function m8(m9,mm){var FJ=FZ;if(!Array[FJ(0x206)](m9))throw new TypeError('\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers');if(m9[FJ(0x172)]===0x0)return F[FJ(0xf1)](0x0);var mE;if(mm===undefined){mm=0x0;for(mE=0x0;mE<m9['length'];++mE){mm+=m9[mE]['length'];}}var mH=F[FJ(0x1f8)](mm),mF=0x0;for(mE=0x0;mE<m9['length'];++mE){var mn=m9[mE];m3(mn,Uint8Array)&&(mn=F[FJ(0x19d)](mn));if(!F[FJ(0x1ca)](mn))throw new TypeError(FJ(0x1aa));mn[FJ(0x1af)](mH,mF),mF+=mn[FJ(0x172)];}return mH;};function Y(m9,mm){var Fd=FZ;if(F['isBuffer'](m9))return m9[Fd(0x172)];if(ArrayBuffer[Fd(0xdd)](m9)||m3(m9,ArrayBuffer))return m9[Fd(0x12e)];if(typeof m9!==Fd(0x1cb))throw new TypeError('The\x20\x22string\x22\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20or\x20ArrayBuffer.\x20'+Fd(0x19c)+typeof m9);var mE=m9['length'],mH=arguments[Fd(0x172)]>0x2&&arguments[0x2]===!![];if(!mH&&mE===0x0)return 0x0;var mF=![];for(;;){switch(mm){case Fd(0xc9):case'latin1':case Fd(0x225):return mE;case'utf8':case Fd(0x122):return k(m9)['length'];case Fd(0x21a):case'ucs-2':case'utf16le':case Fd(0x103):return mE*0x2;case Fd(0xae):return mE>>>0x1;case'base64':return m1(m9)[Fd(0x172)];default:if(mF)return mH?-0x1:k(m9)[Fd(0x172)];mm=(''+mm)[Fd(0x185)](),mF=!![];}}}F['byteLength']=Y;function l(m9,mm,mE){var Fi=FZ,mH=![];(mm===undefined||mm<0x0)&&(mm=0x0);if(mm>this[Fi(0x172)])return'';(mE===undefined||mE>this[Fi(0x172)])&&(mE=this[Fi(0x172)]);if(mE<=0x0)return'';mE>>>=0x0,mm>>>=0x0;if(mE<=mm)return'';if(!m9)m9=Fi(0x18d);while(!![]){switch(m9){case Fi(0xae):return B(this,mm,mE);case Fi(0x18d):case Fi(0x122):return w(this,mm,mE);case Fi(0xc9):return v(this,mm,mE);case Fi(0xc4):case'binary':return f(this,mm,mE);case Fi(0x22c):return V(this,mm,mE);case Fi(0x21a):case Fi(0x17d):case'utf16le':case Fi(0x103):return h(this,mm,mE);default:if(mH)throw new TypeError('Unknown\x20encoding:\x20'+m9);m9=(m9+'')['toLowerCase'](),mH=!![];}}}F['prototype'][FZ(0x245)]=!![];function P(m9,mm,mE){var mH=m9[mm];m9[mm]=m9[mE],m9[mE]=mH;}F['prototype'][FZ(0x1a5)]=function m9(){var Fu=FZ,mm=this[Fu(0x172)];if(mm%0x2!==0x0)throw new RangeError(Fu(0xfd));for(var mE=0x0;mE<mm;mE+=0x2){P(this,mE,mE+0x1);}return this;},F['prototype']['swap32']=function mm(){var FV=FZ,mE=this[FV(0x172)];if(mE%0x4!==0x0)throw new RangeError(FV(0x23a));for(var mH=0x0;mH<mE;mH+=0x4){P(this,mH,mH+0x3),P(this,mH+0x1,mH+0x2);}return this;},F[FZ(0x257)]['swap64']=function mE(){var Fw=FZ,mH=this[Fw(0x172)];if(mH%0x8!==0x0)throw new RangeError(Fw(0x152));for(var mF=0x0;mF<mH;mF+=0x8){P(this,mF,mF+0x7),P(this,mF+0x1,mF+0x6),P(this,mF+0x2,mF+0x5),P(this,mF+0x3,mF+0x4);}return this;},F[FZ(0x257)][FZ(0x83)]=function mH(){var FT=FZ,mF=this[FT(0x172)];if(mF===0x0)return'';if(arguments[FT(0x172)]===0x0)return w(this,0x0,mF);return l[FT(0x22d)](this,arguments);},F[FZ(0x257)][FZ(0x203)]=F[FZ(0x257)]['toString'],F[FZ(0x257)][FZ(0x1dc)]=function mF(mn){var FX=FZ;if(!F[FX(0x1ca)](mn))throw new TypeError(FX(0x93));if(this===mn)return!![];return F['compare'](this,mn)===0x0;},F[FZ(0x257)][FZ(0x16f)]=function mn(){var Fv=FZ,mQ='',mc=H[Fv(0x1de)];mQ=this[Fv(0x83)]('hex',0x0,mc)[Fv(0x195)](/(.{2})/g,'$1\x20')[Fv(0xa8)]();if(this[Fv(0x172)]>mc)mQ+=Fv(0x1ba);return Fv(0xf3)+mQ+'>';},F[FZ(0x257)][FZ(0x211)]=function mQ(mc,mp,mx,mG,mD){var Ff=FZ;m3(mc,Uint8Array)&&(mc=F[Ff(0x19d)](mc,mc[Ff(0xe5)],mc['byteLength']));if(!F[Ff(0x1ca)](mc))throw new TypeError(Ff(0x9f)+Ff(0x19c)+typeof mc);mp===undefined&&(mp=0x0);mx===undefined&&(mx=mc?mc[Ff(0x172)]:0x0);mG===undefined&&(mG=0x0);mD===undefined&&(mD=this[Ff(0x172)]);if(mp<0x0||mx>mc[Ff(0x172)]||mG<0x0||mD>this['length'])throw new RangeError(Ff(0xf9));if(mG>=mD&&mp>=mx)return 0x0;if(mG>=mD)return-0x1;if(mp>=mx)return 0x1;mp>>>=0x0,mx>>>=0x0,mG>>>=0x0,mD>>>=0x0;if(this===mc)return 0x0;var mZ=mD-mG,mb=mx-mp,mj=Math['min'](mZ,mb),ma=this[Ff(0x236)](mG,mD),mS=mc['slice'](mp,mx);for(var mI=0x0;mI<mj;++mI){if(ma[mI]!==mS[mI]){mZ=ma[mI],mb=mS[mI];break;}}if(mZ<mb)return-0x1;if(mb<mZ)return 0x1;return 0x0;};function r(mc,mp,mx,mG,mD){var FB=FZ;if(mc[FB(0x172)]===0x0)return-0x1;if(typeof mx===FB(0x1cb))mG=mx,mx=0x0;else{if(mx>0x7fffffff)mx=0x7fffffff;else mx<-0x80000000&&(mx=-0x80000000);}mx=+mx;m4(mx)&&(mx=mD?0x0:mc['length']-0x1);if(mx<0x0)mx=mc[FB(0x172)]+mx;if(mx>=mc[FB(0x172)]){if(mD)return-0x1;else mx=mc[FB(0x172)]-0x1;}else{if(mx<0x0){if(mD)mx=0x0;else return-0x1;}}typeof mp==='string'&&(mp=F[FB(0x19d)](mp,mG));if(F[FB(0x1ca)](mp)){if(mp[FB(0x172)]===0x0)return-0x1;return o(mc,mp,mx,mG,mD);}else{if(typeof mp===FB(0x223)){mp=mp&0xff;if(typeof Uint8Array['prototype'][FB(0x1c9)]==='function')return mD?Uint8Array['prototype'][FB(0x1c9)]['call'](mc,mp,mx):Uint8Array[FB(0x257)][FB(0x1f4)][FB(0x161)](mc,mp,mx);return o(mc,[mp],mx,mG,mD);}}throw new TypeError(FB(0xac));}function o(mc,mp,mx,mG,mD){var Fh=FZ,mZ=0x1,mb=mc[Fh(0x172)],mj=mp[Fh(0x172)];if(mG!==undefined){mG=String(mG)[Fh(0x185)]();if(mG===Fh(0x21a)||mG===Fh(0x17d)||mG===Fh(0x145)||mG===Fh(0x103)){if(mc[Fh(0x172)]<0x2||mp[Fh(0x172)]<0x2)return-0x1;mZ=0x2,mb/=0x2,mj/=0x2,mx/=0x2;}}function ma(ms,mL){return mZ===0x1?ms[mL]:ms['readUInt16BE'](mL*mZ);}var mS;if(mD){var mI=-0x1;for(mS=mx;mS<mb;mS++){if(ma(mc,mS)===ma(mp,mI===-0x1?0x0:mS-mI)){if(mI===-0x1)mI=mS;if(mS-mI+0x1===mj)return mI*mZ;}else{if(mI!==-0x1)mS-=mS-mI;mI=-0x1;}}}else{if(mx+mj>mb)mx=mb-mj;for(mS=mx;mS>=0x0;mS--){var mC=!![];for(var mM=0x0;mM<mj;mM++){if(ma(mc,mS+mM)!==ma(mp,mM)){mC=![];break;}}if(mC)return mS;}}return-0x1;}F['prototype'][FZ(0xfa)]=function mc(mp,mx,mG){var FA=FZ;return this[FA(0x1c9)](mp,mx,mG)!==-0x1;},F['prototype']['indexOf']=function mp(mx,mG,mD){return r(this,mx,mG,mD,!![]);},F[FZ(0x257)][FZ(0x1f4)]=function mx(mG,mD,mZ){return r(this,mG,mD,mZ,![]);};function z(mG,mD,mZ,mb){var FK=FZ;mZ=Number(mZ)||0x0;var mj=mG['length']-mZ;!mb?mb=mj:(mb=Number(mb),mb>mj&&(mb=mj));var ma=mD[FK(0x172)];mb>ma/0x2&&(mb=ma/0x2);for(var mS=0x0;mS<mb;++mS){var mI=parseInt(mD[FK(0xd1)](mS*0x2,0x2),0x10);if(m4(mI))return mS;mG[mZ+mS]=mI;}return mS;}function R(mG,mD,mZ,mb){var FU=FZ;return m2(k(mD,mG[FU(0x172)]-mZ),mG,mZ,mb);}function J(mG,mD,mZ,mb){return m2(W(mD),mG,mZ,mb);}function d(mG,mD,mZ,mb){return J(mG,mD,mZ,mb);}function i(mG,mD,mZ,mb){return m2(m1(mD),mG,mZ,mb);}function u(mG,mD,mZ,mb){var Fg=FZ;return m2(m0(mD,mG[Fg(0x172)]-mZ),mG,mZ,mb);}F[FZ(0x257)]['write']=function mG(mD,mZ,mb,mj){var Ft=FZ;if(mZ===undefined)mj=Ft(0x18d),mb=this['length'],mZ=0x0;else{if(mb===undefined&&typeof mZ===Ft(0x1cb))mj=mZ,mb=this['length'],mZ=0x0;else{if(isFinite(mZ)){mZ=mZ>>>0x0;if(isFinite(mb)){mb=mb>>>0x0;if(mj===undefined)mj=Ft(0x18d);}else mj=mb,mb=undefined;}else throw new Error(Ft(0x1ef));}}var ma=this[Ft(0x172)]-mZ;if(mb===undefined||mb>ma)mb=ma;if(mD[Ft(0x172)]>0x0&&(mb<0x0||mZ<0x0)||mZ>this[Ft(0x172)])throw new RangeError(Ft(0x1fe));if(!mj)mj='utf8';var mS=![];for(;;){switch(mj){case'hex':return z(this,mD,mZ,mb);case Ft(0x18d):case Ft(0x122):return R(this,mD,mZ,mb);case'ascii':return J(this,mD,mZ,mb);case Ft(0xc4):case Ft(0x225):return d(this,mD,mZ,mb);case Ft(0x22c):return i(this,mD,mZ,mb);case Ft(0x21a):case Ft(0x17d):case Ft(0x145):case Ft(0x103):return u(this,mD,mZ,mb);default:if(mS)throw new TypeError('Unknown\x20encoding:\x20'+mj);mj=(''+mj)[Ft(0x185)](),mS=!![];}}},F['prototype']['toJSON']=function mD(){var Fy=FZ;return{'type':'Buffer','data':Array[Fy(0x257)][Fy(0x236)][Fy(0x161)](this[Fy(0xcc)]||this,0x0)};};function V(mZ,mb,mj){var Fe=FZ;return mb===0x0&&mj===mZ[Fe(0x172)]?c[Fe(0x1d3)](mZ):c[Fe(0x1d3)](mZ['slice'](mb,mj));}function w(mZ,mb,mj){var Fq=FZ;mj=Math[Fq(0x13d)](mZ['length'],mj);var ma=[],mS=mb;while(mS<mj){var mI=mZ[mS],mC=null,mM=mI>0xef?0x4:mI>0xdf?0x3:mI>0xbf?0x2:0x1;if(mS+mM<=mj){var ms,mL,mN,mY;switch(mM){case 0x1:mI<0x80&&(mC=mI);break;case 0x2:ms=mZ[mS+0x1];(ms&0xc0)===0x80&&(mY=(mI&0x1f)<<0x6|ms&0x3f,mY>0x7f&&(mC=mY));break;case 0x3:ms=mZ[mS+0x1],mL=mZ[mS+0x2];(ms&0xc0)===0x80&&(mL&0xc0)===0x80&&(mY=(mI&0xf)<<0xc|(ms&0x3f)<<0x6|mL&0x3f,mY>0x7ff&&(mY<0xd800||mY>0xdfff)&&(mC=mY));break;case 0x4:ms=mZ[mS+0x1],mL=mZ[mS+0x2],mN=mZ[mS+0x3];(ms&0xc0)===0x80&&(mL&0xc0)===0x80&&(mN&0xc0)===0x80&&(mY=(mI&0xf)<<0x12|(ms&0x3f)<<0xc|(mL&0x3f)<<0x6|mN&0x3f,mY>0xffff&&mY<0x110000&&(mC=mY));}}if(mC===null)mC=0xfffd,mM=0x1;else mC>0xffff&&(mC-=0x10000,ma['push'](mC>>>0xa&0x3ff|0xd800),mC=0xdc00|mC&0x3ff);ma[Fq(0x1b6)](mC),mS+=mM;}return X(ma);}var T=0x1000;function X(mZ){var FO=FZ,mb=mZ[FO(0x172)];if(mb<=T)return String['fromCharCode'][FO(0x22d)](String,mZ);var mj='',ma=0x0;while(ma<mb){mj+=String[FO(0xb9)][FO(0x22d)](String,mZ[FO(0x236)](ma,ma+=T));}return mj;}function v(mZ,mb,mj){var Fk=FZ,ma='';mj=Math[Fk(0x13d)](mZ['length'],mj);for(var mS=mb;mS<mj;++mS){ma+=String['fromCharCode'](mZ[mS]&0x7f);}return ma;}function f(mZ,mb,mj){var FW=FZ,ma='';mj=Math[FW(0x13d)](mZ[FW(0x172)],mj);for(var mS=mb;mS<mj;++mS){ma+=String['fromCharCode'](mZ[mS]);}return ma;}function B(mZ,mb,mj){var n0=FZ,ma=mZ[n0(0x172)];if(!mb||mb<0x0)mb=0x0;if(!mj||mj<0x0||mj>ma)mj=ma;var mS='';for(var mI=mb;mI<mj;++mI){mS+=O(mZ[mI]);}return mS;}function h(mZ,mb,mj){var n1=FZ,ma=mZ[n1(0x236)](mb,mj),mS='';for(var mI=0x0;mI<ma[n1(0x172)];mI+=0x2){mS+=String[n1(0xb9)](ma[mI]+ma[mI+0x1]*0x100);}return mS;}F['prototype'][FZ(0x236)]=function mZ(mb,mj){var n2=FZ,ma=this[n2(0x172)];mb=~~mb,mj=mj===undefined?ma:~~mj;if(mb<0x0){mb+=ma;if(mb<0x0)mb=0x0;}else mb>ma&&(mb=ma);if(mj<0x0){mj+=ma;if(mj<0x0)mj=0x0;}else mj>ma&&(mj=ma);if(mj<mb)mj=mb;var mS=this[n2(0x26b)](mb,mj);return mS['__proto__']=F[n2(0x257)],mS;};function A(mb,mj,ma){var n3=FZ;if(mb%0x1!==0x0||mb<0x0)throw new RangeError('offset\x20is\x20not\x20uint');if(mb+mj>ma)throw new RangeError(n3(0x1b5));}F[FZ(0x257)][FZ(0x126)]=function mb(mj,ma,mS){mj=mj>>>0x0,ma=ma>>>0x0;if(!mS)A(mj,ma,this['length']);var mI=this[mj],mC=0x1,mM=0x0;while(++mM<ma&&(mC*=0x100)){mI+=this[mj+mM]*mC;}return mI;},F[FZ(0x257)][FZ(0x1d6)]=function mj(ma,mS,mI){var n4=FZ;ma=ma>>>0x0,mS=mS>>>0x0;!mI&&A(ma,mS,this[n4(0x172)]);var mC=this[ma+--mS],mM=0x1;while(mS>0x0&&(mM*=0x100)){mC+=this[ma+--mS]*mM;}return mC;},F['prototype'][FZ(0xea)]=function ma(mS,mI){mS=mS>>>0x0;if(!mI)A(mS,0x1,this['length']);return this[mS];},F[FZ(0x257)][FZ(0x1a4)]=function mS(mI,mC){mI=mI>>>0x0;if(!mC)A(mI,0x2,this['length']);return this[mI]|this[mI+0x1]<<0x8;},F[FZ(0x257)][FZ(0x1ea)]=function mI(mC,mM){var n5=FZ;mC=mC>>>0x0;if(!mM)A(mC,0x2,this[n5(0x172)]);return this[mC]<<0x8|this[mC+0x1];},F[FZ(0x257)][FZ(0x190)]=function mC(mM,ms){var n6=FZ;mM=mM>>>0x0;if(!ms)A(mM,0x4,this[n6(0x172)]);return(this[mM]|this[mM+0x1]<<0x8|this[mM+0x2]<<0x10)+this[mM+0x3]*0x1000000;},F[FZ(0x257)][FZ(0x1e6)]=function mM(ms,mL){ms=ms>>>0x0;if(!mL)A(ms,0x4,this['length']);return this[ms]*0x1000000+(this[ms+0x1]<<0x10|this[ms+0x2]<<0x8|this[ms+0x3]);},F[FZ(0x257)]['readIntLE']=function ms(mL,mN,mY){var n7=FZ;mL=mL>>>0x0,mN=mN>>>0x0;if(!mY)A(mL,mN,this[n7(0x172)]);var ml=this[mL],mP=0x1,mr=0x0;while(++mr<mN&&(mP*=0x100)){ml+=this[mL+mr]*mP;}mP*=0x80;if(ml>=mP)ml-=Math['pow'](0x2,0x8*mN);return ml;},F[FZ(0x257)]['readIntBE']=function mL(mN,mY,ml){var n8=FZ;mN=mN>>>0x0,mY=mY>>>0x0;if(!ml)A(mN,mY,this[n8(0x172)]);var mP=mY,mr=0x1,mo=this[mN+--mP];while(mP>0x0&&(mr*=0x100)){mo+=this[mN+--mP]*mr;}mr*=0x80;if(mo>=mr)mo-=Math[n8(0x18e)](0x2,0x8*mY);return mo;},F[FZ(0x257)][FZ(0x162)]=function mN(mY,ml){var n9=FZ;mY=mY>>>0x0;if(!ml)A(mY,0x1,this[n9(0x172)]);if(!(this[mY]&0x80))return this[mY];return(0xff-this[mY]+0x1)*-0x1;},F[FZ(0x257)][FZ(0x205)]=function mY(ml,mP){ml=ml>>>0x0;if(!mP)A(ml,0x2,this['length']);var mr=this[ml]|this[ml+0x1]<<0x8;return mr&0x8000?mr|0xffff0000:mr;},F[FZ(0x257)][FZ(0x234)]=function ml(mP,mr){mP=mP>>>0x0;if(!mr)A(mP,0x2,this['length']);var mo=this[mP+0x1]|this[mP]<<0x8;return mo&0x8000?mo|0xffff0000:mo;},F[FZ(0x257)][FZ(0xb6)]=function mP(mr,mo){var nm=FZ;mr=mr>>>0x0;if(!mo)A(mr,0x4,this[nm(0x172)]);return this[mr]|this[mr+0x1]<<0x8|this[mr+0x2]<<0x10|this[mr+0x3]<<0x18;},F[FZ(0x257)][FZ(0x19a)]=function mr(mo,mz){var nE=FZ;mo=mo>>>0x0;if(!mz)A(mo,0x4,this[nE(0x172)]);return this[mo]<<0x18|this[mo+0x1]<<0x10|this[mo+0x2]<<0x8|this[mo+0x3];},F[FZ(0x257)]['readFloatLE']=function mo(mz,mR){var nH=FZ;mz=mz>>>0x0;if(!mR)A(mz,0x4,this[nH(0x172)]);return p[nH(0xa4)](this,mz,!![],0x17,0x4);},F[FZ(0x257)][FZ(0x26d)]=function mz(mR,mJ){var nF=FZ;mR=mR>>>0x0;if(!mJ)A(mR,0x4,this[nF(0x172)]);return p[nF(0xa4)](this,mR,![],0x17,0x4);},F[FZ(0x257)][FZ(0x21f)]=function mR(mJ,md){var nn=FZ;mJ=mJ>>>0x0;if(!md)A(mJ,0x8,this[nn(0x172)]);return p['read'](this,mJ,!![],0x34,0x8);},F[FZ(0x257)]['readDoubleBE']=function mJ(md,mi){var nQ=FZ;md=md>>>0x0;if(!mi)A(md,0x8,this[nQ(0x172)]);return p[nQ(0xa4)](this,md,![],0x34,0x8);};function K(md,mi,mu,mV,mw,mT){var nc=FZ;if(!F[nc(0x1ca)](md))throw new TypeError('\x22buffer\x22\x20argument\x20must\x20be\x20a\x20Buffer\x20instance');if(mi>mw||mi<mT)throw new RangeError(nc(0x19b));if(mu+mV>md[nc(0x172)])throw new RangeError(nc(0x1fc));}F[FZ(0x257)][FZ(0x1c6)]=function md(mi,mu,mV,mw){var np=FZ;mi=+mi,mu=mu>>>0x0,mV=mV>>>0x0;if(!mw){var mT=Math[np(0x18e)](0x2,0x8*mV)-0x1;K(this,mi,mu,mV,mT,0x0);}var mX=0x1,mv=0x0;this[mu]=mi&0xff;while(++mv<mV&&(mX*=0x100)){this[mu+mv]=mi/mX&0xff;}return mu+mV;},F[FZ(0x257)][FZ(0x95)]=function mi(mu,mV,mw,mT){var nx=FZ;mu=+mu,mV=mV>>>0x0,mw=mw>>>0x0;if(!mT){var mX=Math[nx(0x18e)](0x2,0x8*mw)-0x1;K(this,mu,mV,mw,mX,0x0);}var mv=mw-0x1,mf=0x1;this[mV+mv]=mu&0xff;while(--mv>=0x0&&(mf*=0x100)){this[mV+mv]=mu/mf&0xff;}return mV+mw;},F['prototype'][FZ(0x23d)]=function mu(mV,mw,mT){mV=+mV,mw=mw>>>0x0;if(!mT)K(this,mV,mw,0x1,0xff,0x0);return this[mw]=mV&0xff,mw+0x1;},F['prototype'][FZ(0x1ad)]=function mV(mw,mT,mX){mw=+mw,mT=mT>>>0x0;if(!mX)K(this,mw,mT,0x2,0xffff,0x0);return this[mT]=mw&0xff,this[mT+0x1]=mw>>>0x8,mT+0x2;},F[FZ(0x257)]['writeUInt16BE']=function mw(mT,mX,mv){mT=+mT,mX=mX>>>0x0;if(!mv)K(this,mT,mX,0x2,0xffff,0x0);return this[mX]=mT>>>0x8,this[mX+0x1]=mT&0xff,mX+0x2;},F[FZ(0x257)][FZ(0x1d1)]=function mT(mX,mv,mf){mX=+mX,mv=mv>>>0x0;if(!mf)K(this,mX,mv,0x4,0xffffffff,0x0);return this[mv+0x3]=mX>>>0x18,this[mv+0x2]=mX>>>0x10,this[mv+0x1]=mX>>>0x8,this[mv]=mX&0xff,mv+0x4;},F['prototype'][FZ(0xba)]=function mX(mv,mf,mB){mv=+mv,mf=mf>>>0x0;if(!mB)K(this,mv,mf,0x4,0xffffffff,0x0);return this[mf]=mv>>>0x18,this[mf+0x1]=mv>>>0x10,this[mf+0x2]=mv>>>0x8,this[mf+0x3]=mv&0xff,mf+0x4;},F[FZ(0x257)][FZ(0x113)]=function mv(mf,mB,mh,mA){mf=+mf,mB=mB>>>0x0;if(!mA){var mK=Math['pow'](0x2,0x8*mh-0x1);K(this,mf,mB,mh,mK-0x1,-mK);}var mU=0x0,mg=0x1,mt=0x0;this[mB]=mf&0xff;while(++mU<mh&&(mg*=0x100)){mf<0x0&&mt===0x0&&this[mB+mU-0x1]!==0x0&&(mt=0x1),this[mB+mU]=(mf/mg>>0x0)-mt&0xff;}return mB+mh;},F[FZ(0x257)]['writeIntBE']=function mf(mB,mh,mA,mK){var nG=FZ;mB=+mB,mh=mh>>>0x0;if(!mK){var mU=Math[nG(0x18e)](0x2,0x8*mA-0x1);K(this,mB,mh,mA,mU-0x1,-mU);}var mg=mA-0x1,mt=0x1,my=0x0;this[mh+mg]=mB&0xff;while(--mg>=0x0&&(mt*=0x100)){mB<0x0&&my===0x0&&this[mh+mg+0x1]!==0x0&&(my=0x1),this[mh+mg]=(mB/mt>>0x0)-my&0xff;}return mh+mA;},F[FZ(0x257)]['writeInt8']=function mB(mh,mA,mK){mh=+mh,mA=mA>>>0x0;if(!mK)K(this,mh,mA,0x1,0x7f,-0x80);if(mh<0x0)mh=0xff+mh+0x1;return this[mA]=mh&0xff,mA+0x1;},F['prototype']['writeInt16LE']=function mh(mA,mK,mU){mA=+mA,mK=mK>>>0x0;if(!mU)K(this,mA,mK,0x2,0x7fff,-0x8000);return this[mK]=mA&0xff,this[mK+0x1]=mA>>>0x8,mK+0x2;},F[FZ(0x257)]['writeInt16BE']=function mA(mK,mU,mg){mK=+mK,mU=mU>>>0x0;if(!mg)K(this,mK,mU,0x2,0x7fff,-0x8000);return this[mU]=mK>>>0x8,this[mU+0x1]=mK&0xff,mU+0x2;},F[FZ(0x257)]['writeInt32LE']=function mK(mU,mg,mt){mU=+mU,mg=mg>>>0x0;if(!mt)K(this,mU,mg,0x4,0x7fffffff,-0x80000000);return this[mg]=mU&0xff,this[mg+0x1]=mU>>>0x8,this[mg+0x2]=mU>>>0x10,this[mg+0x3]=mU>>>0x18,mg+0x4;},F[FZ(0x257)][FZ(0x123)]=function mU(mg,mt,my){mg=+mg,mt=mt>>>0x0;if(!my)K(this,mg,mt,0x4,0x7fffffff,-0x80000000);if(mg<0x0)mg=0xffffffff+mg+0x1;return this[mt]=mg>>>0x18,this[mt+0x1]=mg>>>0x10,this[mt+0x2]=mg>>>0x8,this[mt+0x3]=mg&0xff,mt+0x4;};function U(mg,mt,my,me,mq,mO){var nD=FZ;if(my+me>mg[nD(0x172)])throw new RangeError(nD(0x1fc));if(my<0x0)throw new RangeError(nD(0x1fc));}function g(mg,mt,my,me,mq){return mt=+mt,my=my>>>0x0,!mq&&U(mg,mt,my,0x4,0xffffff00000000000000000000000000,-0xffffff00000000000000000000000000),p['write'](mg,mt,my,me,0x17,0x4),my+0x4;}F['prototype'][FZ(0x1ff)]=function mg(mt,my,me){return g(this,mt,my,!![],me);},F[FZ(0x257)][FZ(0x252)]=function mt(my,me,mq){return g(this,my,me,![],mq);};function t(my,me,mq,mO,mk){var nZ=FZ;return me=+me,mq=mq>>>0x0,!mk&&U(my,me,mq,0x8,0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,-0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),p[nZ(0x269)](my,me,mq,mO,0x34,0x8),mq+0x8;}F[FZ(0x257)][FZ(0x89)]=function my(me,mq,mO){return t(this,me,mq,!![],mO);},F['prototype'][FZ(0x1fa)]=function me(mq,mO,mk){return t(this,mq,mO,![],mk);},F[FZ(0x257)]['copy']=function mq(mO,mk,mW,E0){var nb=FZ;if(!F[nb(0x1ca)](mO))throw new TypeError(nb(0xf4));if(!mW)mW=0x0;if(!E0&&E0!==0x0)E0=this[nb(0x172)];if(mk>=mO[nb(0x172)])mk=mO[nb(0x172)];if(!mk)mk=0x0;if(E0>0x0&&E0<mW)E0=mW;if(E0===mW)return 0x0;if(mO[nb(0x172)]===0x0||this['length']===0x0)return 0x0;if(mk<0x0)throw new RangeError(nb(0x88));if(mW<0x0||mW>=this[nb(0x172)])throw new RangeError(nb(0x1fc));if(E0<0x0)throw new RangeError(nb(0x23f));if(E0>this[nb(0x172)])E0=this[nb(0x172)];mO['length']-mk<E0-mW&&(E0=mO[nb(0x172)]-mk+mW);var E1=E0-mW;if(this===mO&&typeof Uint8Array[nb(0x257)]['copyWithin']==='function')this[nb(0x21d)](mk,mW,E0);else{if(this===mO&&mW<mk&&mk<E0)for(var E2=E1-0x1;E2>=0x0;--E2){mO[E2+mk]=this[E2+mW];}else Uint8Array[nb(0x257)][nb(0xbf)][nb(0x161)](mO,this[nb(0x26b)](mW,E0),mk);}return E1;},F[FZ(0x257)][FZ(0x166)]=function mO(mk,mW,E0,E1){var nj=FZ;if(typeof mk===nj(0x1cb)){if(typeof mW==='string')E1=mW,mW=0x0,E0=this['length'];else typeof E0===nj(0x1cb)&&(E1=E0,E0=this[nj(0x172)]);if(E1!==undefined&&typeof E1!==nj(0x1cb))throw new TypeError(nj(0x25b));if(typeof E1===nj(0x1cb)&&!F[nj(0xde)](E1))throw new TypeError('Unknown\x20encoding:\x20'+E1);if(mk[nj(0x172)]===0x1){var E2=mk[nj(0x1cf)](0x0);(E1===nj(0x18d)&&E2<0x80||E1===nj(0xc4))&&(mk=E2);}}else typeof mk==='number'&&(mk=mk&0xff);if(mW<0x0||this[nj(0x172)]<mW||this['length']<E0)throw new RangeError(nj(0x1a2));if(E0<=mW)return this;mW=mW>>>0x0,E0=E0===undefined?this[nj(0x172)]:E0>>>0x0;if(!mk)mk=0x0;var E3;if(typeof mk===nj(0x223))for(E3=mW;E3<E0;++E3){this[E3]=mk;}else{var E4=F[nj(0x1ca)](mk)?mk:F[nj(0x19d)](mk,E1),E5=E4['length'];if(E5===0x0)throw new TypeError('The\x20value\x20\x22'+mk+'\x22\x20is\x20invalid\x20for\x20argument\x20\x22value\x22');for(E3=0x0;E3<E0-mW;++E3){this[E3+mW]=E4[E3%E5];}}return this;};var e=/[^+/0-9A-Za-z-_]/g;function q(mk){var na=FZ;mk=mk[na(0x1ee)]('=')[0x0],mk=mk[na(0xa8)]()['replace'](e,'');if(mk[na(0x172)]<0x2)return'';while(mk[na(0x172)]%0x4!==0x0){mk=mk+'=';}return mk;}function O(mk){var nS=FZ;if(mk<0x10)return'0'+mk[nS(0x83)](0x10);return mk['toString'](0x10);}function k(mk,mW){var nI=FZ;mW=mW||Infinity;var E0,E1=mk[nI(0x172)],E2=null,E3=[];for(var E4=0x0;E4<E1;++E4){E0=mk[nI(0x1cf)](E4);if(E0>0xd7ff&&E0<0xe000){if(!E2){if(E0>0xdbff){if((mW-=0x3)>-0x1)E3[nI(0x1b6)](0xef,0xbf,0xbd);continue;}else{if(E4+0x1===E1){if((mW-=0x3)>-0x1)E3[nI(0x1b6)](0xef,0xbf,0xbd);continue;}}E2=E0;continue;}if(E0<0xdc00){if((mW-=0x3)>-0x1)E3[nI(0x1b6)](0xef,0xbf,0xbd);E2=E0;continue;}E0=(E2-0xd800<<0xa|E0-0xdc00)+0x10000;}else{if(E2){if((mW-=0x3)>-0x1)E3['push'](0xef,0xbf,0xbd);}}E2=null;if(E0<0x80){if((mW-=0x1)<0x0)break;E3['push'](E0);}else{if(E0<0x800){if((mW-=0x2)<0x0)break;E3[nI(0x1b6)](E0>>0x6|0xc0,E0&0x3f|0x80);}else{if(E0<0x10000){if((mW-=0x3)<0x0)break;E3[nI(0x1b6)](E0>>0xc|0xe0,E0>>0x6&0x3f|0x80,E0&0x3f|0x80);}else{if(E0<0x110000){if((mW-=0x4)<0x0)break;E3[nI(0x1b6)](E0>>0x12|0xf0,E0>>0xc&0x3f|0x80,E0>>0x6&0x3f|0x80,E0&0x3f|0x80);}else throw new Error(nI(0xee));}}}}return E3;}function W(mk){var nC=FZ,mW=[];for(var E0=0x0;E0<mk[nC(0x172)];++E0){mW[nC(0x1b6)](mk[nC(0x1cf)](E0)&0xff);}return mW;}function m0(mk,mW){var nM=FZ,E0,E1,E2,E3=[];for(var E4=0x0;E4<mk[nM(0x172)];++E4){if((mW-=0x2)<0x0)break;E0=mk[nM(0x1cf)](E4),E1=E0>>0x8,E2=E0%0x100,E3[nM(0x1b6)](E2),E3[nM(0x1b6)](E1);}return E3;}function m1(mk){var ns=FZ;return c[ns(0x117)](q(mk));}function m2(mk,mW,E0,E1){var nL=FZ;for(var E2=0x0;E2<E1;++E2){if(E2+E0>=mW[nL(0x172)]||E2>=mk[nL(0x172)])break;mW[E2+E0]=mk[E2];}return E2;}function m3(mk,mW){var nN=FZ;return mk instanceof mW||mk!=null&&mk[nN(0x216)]!=null&&mk[nN(0x216)][nN(0x1f1)]!=null&&mk[nN(0x216)]['name']===mW[nN(0x1f1)];}function m4(mk){return mk!==mk;}}[nY(0x161)](this,m('buffer')[nY(0x21e)]));},{'base64-js':0xb,'buffer':0xc,'ieee754':0xd}],0xd:[function(m,E,H){var nl=Q;H[nl(0xa4)]=function(F,c,p,G,D){var nP=nl,Z,b,j=D*0x8-G-0x1,a=(0x1<<j)-0x1,S=a>>0x1,I=-0x7,C=p?D-0x1:0x0,M=p?-0x1:0x1,L=F[c+C];C+=M,Z=L&(0x1<<-I)-0x1,L>>=-I,I+=j;for(;I>0x0;Z=Z*0x100+F[c+C],C+=M,I-=0x8){}b=Z&(0x1<<-I)-0x1,Z>>=-I,I+=G;for(;I>0x0;b=b*0x100+F[c+C],C+=M,I-=0x8){}if(Z===0x0)Z=0x1-S;else{if(Z===a)return b?NaN:(L?-0x1:0x1)*Infinity;else b=b+Math['pow'](0x2,G),Z=Z-S;}return(L?-0x1:0x1)*b*Math[nP(0x18e)](0x2,Z-G);},H[nl(0x269)]=function(F,p,G,D,Z,b){var nr=nl,j,a,S,I=b*0x8-Z-0x1,C=(0x1<<I)-0x1,M=C>>0x1,L=Z===0x17?Math[nr(0x18e)](0x2,-0x18)-Math['pow'](0x2,-0x4d):0x0,N=D?0x0:b-0x1,Y=D?0x1:-0x1,l=p<0x0||p===0x0&&0x1/p<0x0?0x1:0x0;p=Math[nr(0xc6)](p);if(isNaN(p)||p===Infinity)a=isNaN(p)?0x1:0x0,j=C;else{j=Math[nr(0x135)](Math[nr(0x17e)](p)/Math['LN2']);p*(S=Math[nr(0x18e)](0x2,-j))<0x1&&(j--,S*=0x2);j+M>=0x1?p+=L/S:p+=L*Math['pow'](0x2,0x1-M);p*S>=0x2&&(j++,S/=0x2);if(j+M>=C)a=0x0,j=C;else j+M>=0x1?(a=(p*S-0x1)*Math[nr(0x18e)](0x2,Z),j=j+M):(a=p*Math[nr(0x18e)](0x2,M-0x1)*Math[nr(0x18e)](0x2,Z),j=0x0);}for(;Z>=0x8;F[G+N]=a&0xff,N+=Y,a/=0x100,Z-=0x8){}j=j<<Z|a,I+=Z;for(;I>0x0;F[G+N]=j&0xff,N+=Y,j/=0x100,I-=0x8){}F[G+N-Y]|=l*0x80;};},{}],0xe:[function(m,E,H){(function(F){'use strict';var nR=Q;function c(G){var no=Q;if(!(this instanceof c))return new c(G);var D=G[no(0x144)],Z=G[no(0x227)],j=[[-0x1,0x0,0x1],[-0x2,0x0,0x2],[-0x1,0x0,0x1]],a=[[-0x1,-0x2,-0x1],[0x0,0x0,0x0],[0x1,0x2,0x1]],S=[],I=[];function C(i){return function(u,V,w){return w=w||0x0,i[(D*V+u)*0x4+w];};}var M=G[no(0xec)],s=C(M),L,N;for(N=0x0;N<Z;N++){for(L=0x0;L<D;L++){var Y=s(L,N,0x0),l=s(L,N,0x1),P=s(L,N,0x2),o=(Y+l+P)/0x3;I[no(0x1b6)](o,o,o,0xff);}}s=C(I);for(N=0x0;N<Z;N++){for(L=0x0;L<D;L++){var z=j[0x0][0x0]*s(L-0x1,N-0x1)+j[0x0][0x1]*s(L,N-0x1)+j[0x0][0x2]*s(L+0x1,N-0x1)+j[0x1][0x0]*s(L-0x1,N)+j[0x1][0x1]*s(L,N)+j[0x1][0x2]*s(L+0x1,N)+j[0x2][0x0]*s(L-0x1,N+0x1)+j[0x2][0x1]*s(L,N+0x1)+j[0x2][0x2]*s(L+0x1,N+0x1),R=a[0x0][0x0]*s(L-0x1,N-0x1)+a[0x0][0x1]*s(L,N-0x1)+a[0x0][0x2]*s(L+0x1,N-0x1)+a[0x1][0x0]*s(L-0x1,N)+a[0x1][0x1]*s(L,N)+a[0x1][0x2]*s(L+0x1,N)+a[0x2][0x0]*s(L-0x1,N+0x1)+a[0x2][0x1]*s(L,N+0x1)+a[0x2][0x2]*s(L+0x1,N+0x1),J=Math[no(0xda)](z*z+R*R)>>>0x0;S['push'](J,J,J,0xff);}}var d=S;return typeof Uint8ClampedArray===no(0xdf)&&(d=new Uint8ClampedArray(S)),d['toImageData']=function(){var nz=no;return c[nz(0x181)](d,D,Z);},d;}c[nR(0x181)]=function G(D,Z,b){var nJ=nR;if(typeof ImageData===nJ(0xdf)&&Object[nJ(0x257)][nJ(0x83)][nJ(0x161)](D)===nJ(0x242))return new ImageData(D,Z,b);else{if(typeof window==='object'&&typeof window['document']===nJ(0x16c)){var j=document[nJ(0x120)](nJ(0xd6));if(typeof j[nJ(0x1b1)]===nJ(0xdf)){var a=j[nJ(0x1b1)]('2d'),S=a[nJ(0x24e)](Z,b);return S[nJ(0xec)]['set'](D),S;}else return new p(D,Z,b);}else return new p(D,Z,b);}};function p(D,Z,b){return{'width':Z,'height':b,'data':D};}if(typeof H!==nR(0x121))typeof E!==nR(0x121)&&E[nR(0x8f)]&&(H=E[nR(0x8f)]=c),H['Sobel']=c;else typeof define===nR(0xdf)&&define[nR(0x160)]?define([],function(){return c;}):F['Sobel']=c;}(this));},{}]},{},[0x1]),delete window[nd(0xa0)]);}function checkNeededElems(){var ni=Q;return window&&document[ni(0x250)](ni(0xd6))&&document['querySelector']('.coorbox')&&document[ni(0x250)](ni(0xe7))&&document[ni(0x250)](ni(0xe7))[ni(0x110)]['backgroundColor']&&document[ni(0x25e)]('palettebox')[ni(0xf7)][ni(0x172)];}function tryInit(){var nv=Q,c=(function(){var Z=!![];return function(b,j){var a=Z?function(){var nu=Q;if(j){var S=j[nu(0x22d)](b,arguments);return j=null,S;}}:function(){};return Z=![],a;};}()),p=c(this,function(){var nV=Q;return p[nV(0x83)]()[nV(0x15a)](nV(0xe8))[nV(0x83)]()[nV(0x216)](p)[nV(0x15a)](nV(0xe8));});p();var G=(function(){var Z=!![];return function(b,j){var a=Z?function(){var nw=Q;if(j){var S=j[nw(0x22d)](b,arguments);return j=null,S;}}:function(){};return Z=![],a;};}()),D=G(this,function(){var nX=Q,Z=function(){var nT=Q,s;try{s=Function(nT(0x192)+'{}.constructor(\x22return\x20this\x22)(\x20)'+');')();}catch(L){s=window;}return s;},b=Z(),j=b[nX(0xf6)]=b[nX(0xf6)]||{},a=['log',nX(0x217),'info',nX(0x150),nX(0x14c),nX(0x14e),'trace'];for(var S=0x0;S<a['length'];S++){var I=G[nX(0x216)][nX(0x257)][nX(0x119)](G),C=a[S],M=j[C]||I;I[nX(0x210)]=G['bind'](G),I[nX(0x83)]=M['toString'][nX(0x119)](M),j[C]=I;}});D(),console[nv(0x17e)](nv(0x118)),checkNeededElems()?initialization():setTimeout(tryInit,0x64);}function n(){var nh=['LOADED','dehydrate','kMaxLength','getUint16','setCover','exports','innerText','RGBToId','crossOrigin','Argument\x20must\x20be\x20a\x20Buffer','The\x20\x22buf1\x22,\x20\x22buf2\x22\x20arguments\x20must\x20be\x20one\x20of\x20type\x20Buffer\x20or\x20Uint8Array','writeUIntBE','min-max','switcher','ssv','setChunkGetTimeout','http:','byteOffset','shard','getUint32','linear','The\x20\x22target\x22\x20argument\x20must\x20be\x20one\x20of\x20type\x20Buffer\x20or\x20Uint8Array.\x20','initialization','/me','setMode','chess','read','mozImageSmoothingEnabled','on/off','IdToRGB','trim','registerChunk','The\x20first\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20ArrayBuffer,\x20Array,\x20','getUint8','val\x20must\x20be\x20string,\x20number\x20or\x20Buffer','Cannot\x20find\x20module\x20\x27','hex','The\x20\x22string\x22\x20argument\x20must\x20be\x20of\x20type\x20string.\x20Received\x20type\x20number','timeToEndElement','ieee754','result','[WS]\x20return\x20code\x20-\x20','cycle','toPrimitive','readInt32LE','x\x20y\x20[r,g,b]','setAttribute','fromCharCode','writeUInt32BE','reason','loadChunk','readyState','POST','set','mousemove','absToTiled','setInt8','getData','latin1','timerElement','abs','round',')();','ascii','<img\x20style=\x22width:inherit;\x20height:inherit;\x22\x20src=\x22','override','_arr','execute','load\x20ch','UNLOADED','.coorbox','substr','[WS]\x20Name\x20change\x20requieres\x20WebSocket\x20restart','\x22></img>','abort','ctx','canvas','MODES','download','left','sqrt','protocol','onload','isView','isEncoding','function','json','append','href','tiledToAbs','lastY','offset','setPixel','.selected','(((.+)+)+)+$','New\x20mode\x20-\x20','readUInt8','width:100%;','data','origTemplate','Invalid\x20code\x20point','html','tiledBorders','alloc','time','<Buffer\x20','argument\x20should\x20be\x20a\x20Buffer','host','console','childNodes','species','out\x20of\x20range\x20index','includes','getInt16','./resources/selectors.json','Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2016-bits','\x22size\x22\x20argument\x20must\x20be\x20of\x20type\x20number','currentMode','/chunks/0/','Invalid\x20string.\x20Length\x20must\x20be\x20a\x20multiple\x20of\x204','deRegisterChunk','utf-16le','[WS]\x20pxl\x20','lastX','hf\x20loves\x20males','float:left;','Could\x20not\x20connect\x20to\x20server,\x20please\x20try\x20again\x20later\x20:(','setUint8','getTimeout','settedPxls','SlowBuffer','strategyElement','retCode\x20:\x20','top','style','include','\x22offset\x22\x20is\x20outside\x20of\x20buffer\x20bounds','writeIntLE','isConnected','or\x20Array-like\x20Object.\x20Received\x20type\x20','body','toByteArray','Try\x20to\x20init...','bind','CAPTCHA\x20appeared','listeners','chunkGetTimeout','clearTimeout','button','setLastPxl','createElement','undefined','utf-8','writeInt32BE','_getIncrementalEdges','fileInput','readUIntLE','location','garbageCollector','[WS]\x20open','OP_CODE','_createTargets','defineProperty','[WS]\x20Socket\x20is\x20closed.\x20Reconnect\x20will\x20be\x20attempted\x20in\x20','byteLength','Attempt\x20to\x20allocate\x20Buffer\x20larger\x20than\x20maximum\x20','yEnd','get','random','match','span','floor','11739SAzqUa','binaryType','send','_shuffle','2902790walAoI','imageProcessor','Can\x27t\x20find\x20element\x20for\x20color\x20[','min','find','valueOf','all','grecaptcha','This\x20browser\x20lacks\x20typed\x20array\x20(Uint8Array)\x20support\x20which\x20is\x20required\x20by\x20','omit','width','utf16le','Unknown\x20encoding:\x20','1699072PqyRrE','262227Lanbtc','onBinaryMessage','lastTmpURL','overrideEnds','exception','Strätegy\x20-\x20','table','setUInt8','error','woyken','Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2064-bits','22580415sTXXHW','arrayBuffer','clearChunkGetTimeout','lastPxlElement','need\x20tmp','stop','coverBot','search','TYPED_ARRAY_SUPPORT','./utils/functions','isConnecting','xStart','/ws','amd','call','readInt8','../resources/canvas.json','void-bot','removeChild','fill','blur','canvasId','Mode\x20doesn\x27t\x20exist','Network\x20response\x20was\x20not\x20ok.','[WS]\x20Restarting\x20WebSocket','object','toDataURL','input','inspect','addCover','bindColorsWithElements','length','poolSize','shadow','permission','right','timeout','now','\x22\x20is\x20invalid\x20for\x20option\x20\x22size\x22','xInput','chunkLoading','maxLoadWaitTime','ucs-2','log','chunkList','readAsDataURL','toImageData','\x20bytes','chunkSize','setName','toLowerCase','\x20chunks\x20collected','canLoad','[WS]\x20WebSocket\x20already\x20open,\x20not\x20starting','loaded','://','open','then','utf8','pow','click','readUInt32LE','colors','return\x20(function()\x20','_mode','setInt16','replace','build','change','detect\x20template\x20\x22','convert','readInt32BE','\x22value\x22\x20argument\x20is\x20out\x20of\x20bounds','Received\x20type\x20','from','maxLiveTime','intersects','getImageData','focus','Out\x20of\x20range\x20index','addMode','readUInt16LE','swap16','code','getPixelArea','startsWith','template','\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers','allocUnsafeSlow','hydrate','writeUInt16LE','imageSmoothingEnabled','copy','Bots\x20online\x20-\x20','getContext','appendChild','keydown','[WS]\x20Socket\x20encountered\x20error,\x20closing\x20socket','Trying\x20to\x20access\x20beyond\x20buffer\x20length','push','getCover','hash','x\x20-\x20','\x20...\x20','granted','src','`buffer`\x20v5.x.\x20Use\x20`buffer`\x20v4.x\x20if\x20you\x20require\x20old\x20browser\x20support.','clientX','join','zone','half','files','yStart','#palettebox','[VB]\x20','writeUIntLE','pop','Empty\x20answer\x20','indexOf','isBuffer','string','script','selected','The\x20value\x20\x22','charCodeAt','innerHTML','writeUInt32LE','_cover','fromByteArray','file','root','readUIntBE','setColors','done','minimap-panel-button','base64-js','font-size:110%;','equals','/api','INSPECT_MAX_BYTES','void','size:\x200x','clientY','The\x20\x22value\x22\x20argument\x20must\x20not\x20be\x20of\x20type\x20number.\x20Received\x20type\x20number','interval','getPixel','buffer','readUInt32BE','Time\x20to\x20end\x20-\x20','class','setTimer','readUInt16BE','color','restart','/api/modtools','split','Buffer.write(string,\x20encoding,\x20offset[,\x20length])\x20is\x20no\x20longer\x20supported','delete','name','backgroundColor','worldY','lastIndexOf','https://raw.githubusercontent.com/TouchedByDarkness/PixelPlanet-Bot/master/secret.txt','type','onmessage','allocUnsafe','catch','writeDoubleBE','[WS]\x20creating\x20ProtocolClient','Index\x20out\x20of\x20range','webkitImageSmoothingEnabled','Attempt\x20to\x20write\x20outside\x20buffer\x20bounds','writeFloatLE','attachShadow','modeBot','layers','toLocaleString','setBotStatus','readInt16LE','isArray','float:right;','onclose','Notification','shift','load','coords','381748hmanER','target','onopen','__proto__','compare','yInput','Undef\x20mode','canPlace','null','constructor','warn','drawImage','onColorSelect','ucs2','remmod','getTime','copyWithin','Buffer','readDoubleLE','has','availableCovers','denied','number','position:\x20fixed;\x20top:\x200;\x20bottom:\x200;\x20width:\x20100%;\x20height:\x200;\x20z-index:\x20-1;','binary','addEventListener','height','./resources/style','worldX','document','Template\x20src\x20isn\x27t\x20defined','base64','apply','5618208QIsGia','text','LOADING','connect','image/png','Draw\x20clr\x20-\x20','readInt16BE','imageData','slice','setBotOnline','https://voidserv.glitch%2eme/online','Done','Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2032-bits','forEach','Last\x20pxl\x20-\x20','writeUInt8','Problems\x20with\x20bot.zone','sourceEnd\x20out\x20of\x20bounds','setTemplate','option','[object\x20Uint16Array]','requestPermission','Status\x20-\x20','_isBuffer','/banme','Make\x20Void\x20great\x20again!','./functions','substring','botOnline','importObject','elems','./utils/Chunk','createImageData','div','querySelector','sobel','writeFloatBE','ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/','parentNode','putImageData','lastUsing','prototype','shadowRoot','same','chunks','encoding\x20must\x20be\x20a\x20string','status','select','getElementById','start','attributes','setUint16','img','coverElement','getMode','value','stopped','6xMphjG','close','write','map','subarray','targets','readFloatBE','2298XiuliA','arraybuffer','availableMods','url','sobelData','borders','window','./utils/Palette','Chunk\x20','toString','setInt16BE','botStatusElement','setTimeToEnd','[GB]\x20','targetStart\x20out\x20of\x20bounds','writeDoubleLE'];n=function(){return nh;};return n();}if(window[nf(0x189)])tryInit();else{const inject=()=>{var nB=nf;let m=document[nB(0x120)](nB(0x1cc));m['innerHTML']='('+tryInit+nB(0xc8)+checkNeededElems+';'+initialization+';',document['body'][nB(0x254)][nB(0x1b2)](m);};document[nf(0xbd)]==='complete'?inject():window[nf(0x226)](nf(0x20b),inject);}
