const overridedFunctions = [];const _toString = Function.prototype.toString;if (isNative(Function.prototype.toString)) {overridedFunctions.push('toString');Function.prototype.toString = function toString() {if (overridedFunctions.includes(this.name)) {return `function ${this.name}() { [native code] }`;} else {return _toString.apply(this, arguments);}}} else {securityProblem();}if (!isNative(XMLHttpRequest.prototype.open) && window.open && isNative(window.open)) {XMLHttpRequest.prototype.open = open;}for (const prop in window) {const value = window[prop];if (typeof value === 'function' &&!['fetch', 'initialization'].includes(prop) &&value.toString().includes('fetch')) {delete window[prop];}}const fetchWhiteList = ['/api/baninfo','/api/getiid','/api/shards','/api/modtools','/api/startdm','/api/leavechan','/api/block','/api/blockdm','/api/privatize','/api/chathistory','/api/me','/api/auth'];if (isNative(fetch)) {overridedFunctions.push('fetch');const _fetch = fetch;window.fetch = function fetch(url, options) {const path = new URL(url).pathname;if (path.startsWith('/api')) {if (!fetchWhiteList.some(white => path.startsWith(white))) {const x = Math.floor(256 * Math.random());const y = Math.floor(256 * Math.random());return _fetch(`https://sca.pixelplanet.fun/chunks/0/${x}/${y}.bmp`);}}return _fetch(url, options);}} else {securityProblem();}if (isNative(document.querySelectorAll)) {overridedFunctions.push('querySelectorAll');const _querySelectorAll = document.querySelectorAll;document.querySelectorAll = function querySelectorAll() {const list = Array.from(_querySelectorAll.apply(this, arguments));if (list.some(el => el.shadowRoot !== null)) {const fake = document.createElement('div');fake.appendChild(document.createElement('div'));return fake.querySelectorAll('div');} else {return list;}}} else {securityProblem();}function securityProblem() {return;}function isNative(func) {return _toString.call(func).includes('[native code]');}
var FH=T;function T(j,m){var N=F();return T=function(K,V){K=K-0x179;var B=N[K];return B;},T(j,m);}function F(){var Fw=['keydown','cycle','grecaptcha','type','Empty\x20answer\x20','writeIntBE','tiledToAbs','prototype','chess','Wait\x20for\x20timer','palettebox','subarray','onopen','background-color:black;\x20border-color:darkRed;\x20color:red;','1408005XcxKYa','getData','x\x20-\x20','span','button','registerChunk','Sobel','\x22\x20is\x20invalid\x20for\x20argument\x20\x22value\x22','botting','text','toImageData','stopped','sqrt','need\x20tmp','from','utf-8','base64','latin1','userlvl','_shuffle','shift','canvasId','fromCharCode','\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers','exception','/banme','font-size:110%;','writeIntLE','[WS]\x20Socket\x20is\x20closed.\x20Reconnect\x20will\x20be\x20attempted\x20in\x20','attributes','writeUInt32LE','setChunkGetTimeout','ucs-2','concat','sobelData','botStatusElement','ssv','[GB]\x20','setInt8','innerHTML','yEnd','valueOf','hf\x20loves\x20males','convert','/api/modtools','toString','chunkLoading','interval','timeToEndElement','hydrate','select','constructor','settedPxls','getUint16','yStart','origTemplate','readUInt8','Strätegy\x20-\x20','head','species','getPixel','[WS]\x20An\x20error\x20occured\x20while\x20parsing\x20websocket\x20message','18kHMBlF','isView','onmessage','getInt16','readDoubleLE','createImageData','./resources/canvas','./resources/style','writeDoubleLE','center','colors','childNodes','worldY','offset','_createTargets','xEnd','complete','clear','switcher','Stop','poolSize','change','imageSmoothingEnabled','Make\x20Void\x20great\x20again!','setUInt8','readInt32LE','./resources/constants','utf16le','selected','layers','setBotOnline','allocUnsafeSlow','half','fromByteArray','Cannot\x20find\x20module\x20\x27','lastX','1PQrnyZ','console','color','setCover','done','writeUInt16LE','innerText','__proto__','defineProperty','LOADING','Void\x20Bot','hex','map','warn','body','window','push','getUint8','send','OP_CODE','number','sobel','writeUInt32BE','[object\x20Uint16Array]','toByteArray','shadowRoot','xInput','Undef\x20mode','val\x20must\x20be\x20string,\x20number\x20or\x20Buffer','getTimeout','download','fuckyouarkeros.fun','out\x20of\x20range\x20index','modeBot','_arr','./utils/Template','or\x20Array-like\x20Object.\x20Received\x20type\x20','right','delete','targetStart\x20out\x20of\x20bounds','substring','pop','\x22buffer\x22\x20argument\x20must\x20be\x20a\x20Buffer\x20instance','open','abs','onclose','setUint16','arrayBuffer',')();','instantiate','ctx','same','shadow','granted','Can\x27t\x20find\x20element\x20for\x20color\x20[','Out\x20of\x20range\x20index','removeChild','LN2','set','shard','Network\x20response\x20was\x20not\x20ok.','location','omit','swap16','document','RGBToId','Status\x20-\x20','./resources/selectors.json','template','time','isConnecting','[WS]\x20creating\x20ProtocolClient','addEventListener','catch','readUInt16LE','[WS]\x20Name\x20change\x20requieres\x20WebSocket\x20restart','floor','8ghxvYr','2080729BAjQSt','.viewport','pow','lastIndexOf','toPrimitive','195FZHeYT','border-color:\x20darkred;\x20margin:\x203px\x200px\x203px\x200px;','bindColorsWithElements','1317460ZwneYS','The\x20value\x20\x22','[WS]\x20WebSocket\x20already\x20open,\x20not\x20starting','availableCovers','now','The\x20first\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20ArrayBuffer,\x20Array,\x20','canvas','splice','hostname','forEach','function','host','replace','clearChunkGetTimeout','borders','buffer','read','setTimeToEnd','equals','has','MODES','_getIncrementalEdges','click','chunkGetTimeout','keys','coverElement','match','worldX','setTemplate','getTime','Bots\x20online\x20-\x20','onerror','http:','listeners','style','396Gskmbw','min-max','zone','return\x20(function()\x20','utf8','setMode','writeInt16BE','find','toLowerCase','start','call','ascii','\x20loading','Draw\x20clr\x20-\x20','yInput','setInt16','setTimer','abort','stop','./utils/Chunk','arraybuffer','get','void-bot','mozImageSmoothingEnabled','trace','readyState','UNLOADED','lastTmpURL','on/off','imageData','/api','Could\x20not\x20connect\x20to\x20server,\x20please\x20try\x20again\x20later\x20:(','isArray','alloc','undefined','filter','startsWith','writeInt32LE','ieee754','backgroundColor','class','createElement','script','writeUIntLE','chunks','minimap-panel-button','search','hash','lastPxlElement','canPlace','utf-16le','getPixelArea','name','status','ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/','\x0a\x20\x20\x20\x20#void-bot\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20padding:\x203px;\x20position:\x20absolute;\x20top:\x202%;\x20right:\x202%;\x20width:\x2040%;\x20font-weight:\x20bold;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20input{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20width:\x2060px;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20select{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20font:\x20inherit;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20button{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20font:\x20inherit;\x20margin:\x205px;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20.half{\x0a\x20\x20\x20\x20\x20\x20\x20\x20width:\x20calc(50%\x20-\x205px);\x20margin-left:5px;\x0a\x20\x20\x20\x20}\x0a','https://raw.githubusercontent.com/TouchedByDarkness/PixelPlanet-Bot/master/secret.txt','getUint32','target','option','appendChild','[VB]\x20','The\x20\x22buf1\x22,\x20\x22buf2\x22\x20arguments\x20must\x20be\x20one\x20of\x20type\x20Buffer\x20or\x20Uint8Array','size:\x200x','readDoubleBE','bind','<img\x20style=\x22width:inherit;\x20height:inherit;\x22\x20src=\x22','Template\x20src\x20isn\x27t\x20defined','binary','currentMode','.bmp','/chunks/0/','requestPermission','coverBot','argument\x20should\x20be\x20a\x20Buffer','protocol','strategyElement','binaryType','17876pppDxP','readUIntLE','length','build','amd','setAttribute','toDataURL','\x22\x20is\x20invalid\x20for\x20option\x20\x22size\x22','left','blur','compare','garbageCollector','chunkSize','New\x20mode\x20-\x20','charCodeAt','setPixel','clearTimeout','webkitImageSmoothingEnabled','importObject','Received\x20type\x20','/me','Unknown\x20encoding:\x20','timeout','./utils/functions','Mode\x20doesn\x27t\x20exist','deRegisterChunk','reason','copyWithin','chunkList','Invalid\x20code\x20point','CAPTCHA\x20appeared','log','\x20chunks\x20collected','all','POST','close','\x20...\x20','getImageData','.selected','swap32','1053146IzuIdl','timeConnected','connect','foo','parent','\x22size\x22\x20argument\x20must\x20be\x20of\x20type\x20number','elems','ucs2','split','readIntLE','join','tiledBorders','file','entries','\x22offset\x22\x20is\x20outside\x20of\x20buffer\x20bounds','write','addCover','getMode','clientY','_cover','Buffer','round','absToTiled','includes','append','img','allocUnsafe','min','indexOf','linear','then','onload','getElementById','setLastPxl','setUint8','[WS]\x20pxl\x20','lastY','./utils/Palette','Problems\x20with\x20bot.zone','load\x20ch','clientX','Index\x20out\x20of\x20range','(((.+)+)+)+$','byteLength','overrideEnds','div','getContext','isBuffer','readUInt16BE','setBotStatus','drawImage','xStart','_mode','The\x20\x22string\x22\x20argument\x20must\x20be\x20of\x20type\x20string.\x20Received\x20type\x20number','origin','isEncoding','initialization','availableMods','The\x20\x22string\x22\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20or\x20ArrayBuffer.\x20','$1\x20','kMaxLength','[WS]\x20return\x20code\x20-\x20','float:right;','intersects','\x20m.','x\x20y\x20[r,g,b]','root','fill','Off','maxLoadWaitTime','setInt16BE','1114420QLtBEa','writeInt32BE','lastUsing','writeUIntBE','onColorSelect','getTargets','botOnline','image/png','44bgOAGU','height','object','offset\x20is\x20not\x20uint','LOADED','readFloatLE','getCover','255632UHlWMH','writeUInt8','coords','gameCanvas','value','crossOrigin','signal','Timer\x20-\x20','load','include','slice','random','Time\x20to\x20end\x20-\x20','apply','mousemove','copy','width','setColors','restart','data','base64-js','override','maxLiveTime','./functions','attachShadow','setUInt32BE','src','readIntBE','The\x20bot\x20has\x20been\x20deactivated\x20or\x20you\x20have\x20a\x20connection\x20problem','html','_isBuffer','port','https://voidserv.glitch%2eme/online','woyken','loadChunk','trim','toLocaleString','.coorbox','canLoad','url','querySelector','./utils/ImageProcessor','writeFloatLE','result','onBinaryMessage','targets','string','detect\x20template\x20\x22','dehydrate','Done','isConnected','byteOffset','Notification','MODULE_NOT_FOUND','\x20bytes','fileInput','error','exports','The\x20\x22target\x22\x20argument\x20must\x20be\x20one\x20of\x20type\x20Buffer\x20or\x20Uint8Array.\x20','input','imageProcessor','y\x20-\x20'];F=function(){return Fw;};return F();}(function(j,m){var m6=T,N=j();while(!![]){try{var K=parseInt(m6(0x258))/0x1*(parseInt(m6(0x347))/0x2)+parseInt(m6(0x2ab))/0x3*(parseInt(m6(0x31f))/0x4)+-parseInt(m6(0x19b))/0x5*(-parseInt(m6(0x234))/0x6)+parseInt(m6(0x2a6))/0x7*(parseInt(m6(0x2a5))/0x8)+-parseInt(m6(0x1f6))/0x9+parseInt(m6(0x2ae))/0xa*(-parseInt(m6(0x1a3))/0xb)+-parseInt(m6(0x2d1))/0xc*(parseInt(m6(0x1aa))/0xd);if(K===m)break;else N['push'](N['shift']());}catch(V){N['push'](N['shift']());}}}(F,0x6e038));function initialization(){var Fx=T;(function(){function j(m,N,K){var m8=T;function V(M,J){var m7=T;if(!N[M]){if(!m[M]){var k=m7(0x2b8)==typeof require&&require;if(!J&&k)return k(M,!0x0);if(B)return B(M,!0x0);var Q=new Error(m7(0x256)+M+'\x27');throw Q['code']=m7(0x1df),Q;}var D=N[M]={'exports':{}};m[M][0x0][m7(0x2db)](D[m7(0x1e3)],function(R){var d=m[M][0x1][R];return V(d||R);},D,D[m7(0x1e3)],j,m,N,K);}return N[M][m7(0x1e3)];}for(var B=m8(0x2b8)==typeof require&&require,l=0x0;l<K[m8(0x321)];l++)V(K[l]);return V;}return j;}()({0x1:[function(j,m,N){var NJ=T;(function(K){var m9=T;let V=!![];window[m9(0x2a0)]('focus',()=>V=!![]),window[m9(0x2a0)](m9(0x328),()=>V=![]);let B=[],l=[];const {COLORS:M,CHUNK_SIZE:t}=j(m9(0x23a)),{MAX_REQUESTS_PER_HOUR:c,PXL_CB:J,MAX_TIME_STACK:k}=j(m9(0x24e)),Q=j(m9(0x29b)),{injectCSS:D,objForEach:R,factory:i,downloadCanvas:d,createCanvasFromData:p,rand:v,fetchApiMe:G,getModList:h,submitRemMod:A,banMe:I}=j(m9(0x336)),e=j(m9(0x179)),u=j(m9(0x27b)),s=j(m9(0x2e4)),S=j(m9(0x1d3)),b=new e();b[m9(0x1bb)](M);let O=null;const E={'OP_CODE':0xc1,'hydrate':j7=>({'x':j7[m9(0x269)](0x1),'y':j7['getUint8'](0x2),'offset':j7[m9(0x269)](0x3)<<0x10|j7[m9(0x22b)](0x4),'color':j7[m9(0x269)](0x6)}),'dehydrate':function(j7,j8,j9,jj){var mj=m9;const jm=new ArrayBuffer(0x1+0x1+0x1+0x1+0x2+0x1),jN=new DataView(jm);return jN[mj(0x369)](0x0,this[mj(0x26b)]),jN[mj(0x369)](0x1,j7),jN[mj(0x369)](0x2,j8),jN['setUint8'](0x3,j9>>>0x10),jN[mj(0x286)](0x4,j9&0xffff),jN[mj(0x369)](0x6,jj),jm;}},Y={'OP_CODE':0xc2,'hydrate':j7=>j7[m9(0x30a)](0x1)},P={'OP_CODE':0xc3,'hydrate':j7=>({'retCode':j7[m9(0x269)](0x1),'wait':j7['getUint32'](0x2),'coolDownSeconds':j7[m9(0x237)](0x6)}),'dehydrate'(j7,j8,j9){var mm=m9;const jj=K['allocUnsafe'](0x1+0x1+0x4+0x1+0x2);jj[mm(0x24c)](OP_CODE,0x0),jj[mm(0x24c)](j7,0x1),jj[mm(0x1c3)](j8,0x2);const jm=Math[mm(0x35c)](j9/0x3e8);return jj[mm(0x19a)](jm,0x6),jj;}},W={'OP_CODE':0xa0,'dehydrate'(j7){var mN=m9;let j8=new ArrayBuffer(0x2),j9=new DataView(j8);return j9[mN(0x21c)](0x0,0xa0),j9[mN(0x21c)](0x1,j7),j8;}},X={'OP_CODE':0xa1,'dehydrate'(j7){var mK=m9;let j8=new ArrayBuffer(0x3),j9=new DataView(j8);return j9[mK(0x21c)](0x0,0xa1),j9[mK(0x2e0)](0x1,j7),j8;}},C={'OP_CODE':0xa2,'dehydrate'(j7){var mF=m9;let j8=new ArrayBuffer(0x3),j9=new DataView(j8);return j9[mF(0x21c)](0x0,0xa2),j9[mF(0x2e0)](0x1,j7),j8;}};class n{constructor(){var mT=m9;console[mT(0x33e)](mT(0x29f)),this[mT(0x29e)]=this[mT(0x1dc)]=![],this['ws']=this[mT(0x305)]=null,this[mT(0x20b)]=0x0,setInterval(()=>this['ws'][mT(0x26a)](new Uint8Array([0xb0])['buffer']),0x55f0);}async[m9(0x349)](){var mV=m9;this[mV(0x29e)]=!![];if(this['ws'])console[mV(0x33e)](mV(0x2b0));this[mV(0x348)]=Date[mV(0x2b2)](),this['ws']=new WebSocket('ws'+(location[mV(0x31c)]===mV(0x2ce)?'':'s')+'://'+(window['ssv']['shard']+'.'+location[mV(0x2b6)]+(location[mV(0x1c9)]?':'+location[mV(0x1c9)]:'')+'/ws')),this['ws'][mV(0x31e)]=mV(0x2e5),this['ws'][mV(0x1f4)]=()=>{var mB=mV;this['isConnecting']=![],this[mB(0x1dc)]=!![],console[mB(0x33e)]('[WS]\x20open');if(this[mB(0x20b)]!==null)this['ws'][mB(0x26a)](W[mB(0x1da)](this['canvasId']));},this['ws'][mV(0x236)]=({data:j7})=>{var ml=mV;try{if(typeof j7!=='string')this[ml(0x1d6)](j7);}catch(j8){console['error'](ml(0x233)),console[ml(0x1e2)](j8);}},this['ws'][mV(0x285)]=j7=>{var mM=mV;this['ws']=null,this[mM(0x1dc)]=![];const j8=0x7d0;console['warn'](mM(0x212)+j8+'\x20ms.',j7[mM(0x339)]),setTimeout(()=>this['connect'](),j8);},this['ws'][mV(0x2cd)]=j7=>{var mt=mV;console[mt(0x1e2)]('[WS]\x20Socket\x20encountered\x20error,\x20closing\x20socket',j7),this['ws'][mt(0x342)](),setTimeout(()=>this[mt(0x349)](),0x7d0);};}['setName'](j7){var mc=m9;if(this[mc(0x1dc)]&&this[mc(0x305)]!==j7){console[mc(0x33e)](mc(0x2a3));if(!this['isConnected'])return;this['isConnected']=![],console[mc(0x33e)]('[WS]\x20Restarting\x20WebSocket'),this['ws'][mc(0x285)]=this['ws'][mc(0x236)]=null,this['ws'][mc(0x342)](),this['ws']=null,this[mc(0x349)]();}}[m9(0x1fb)](j7,j8){var mJ=m9;if(this[mJ(0x1dc)])this['ws'][mJ(0x26a)](X[mJ(0x1da)](j7<<0x8|j8));}['deRegisterChunk'](j7,j8){var mk=m9;if(this['isConnected'])this['ws'][mk(0x26a)](C['dehydrate'](j7<<0x8|j8));}['onBinaryMessage'](j7){var mQ=m9;if(j7['byteLength']===0x0)return;const j8=new DataView(j7);switch(j8['getUint8'](0x0)){case E[mQ(0x26b)]:let j9=E[mQ(0x227)](j8),jj=f['chunks']['get'](j9['x'],j9['y']);if(!jj)return;let jm=j9['x']*t+j9[mQ(0x241)]%t+f[mQ(0x2bc)]['x1'],jN=j9['y']*t+~~(j9[mQ(0x241)]/t)+f[mQ(0x2bc)]['y1'],jK=M[j9[mQ(0x25a)]];console[mQ(0x33e)](mQ(0x36a)+jm+'\x20'+jN+'\x20['+jK+']'),B=[jm,jN],f[mQ(0x32e)](jm,jN,jK);break;case Y[mQ(0x26b)]:w[mQ(0x2e1)](Z['time']=Y[mQ(0x227)](j8)/0x3e8);break;case P[mQ(0x26b)]:let {retCode:jF,wait:jT,coolDownSeconds:jV}=P[mQ(0x227)](j8);w['setTimer'](Z[mQ(0x29d)]=jT/0x3e8),console['log'](mQ(0x191)+jF);if(jF!==0x0){f[mQ(0x32e)](...l),console[mQ(0x265)]('retCode\x20:\x20'+jF);if(jF===0xa){j3[mQ(0x33e)]('Captcha'),window[mQ(0x1ea)]['execute'](),j3['stop']();if(!V)trySendNotification(mQ(0x262),{'body':mQ(0x33d)});};return;};break;}}[m9(0x32e)](j7,j8,j9=0x7){var mD=m9;if(!this[mD(0x1dc)])return;let [jj,jm]=f[mD(0x35d)](j7,j8),jN=(j7-jj*t-f['borders']['x1'])%t+(j8-jm*t-f[mD(0x2bc)]['y1'])%t*t;this['ws']['send'](E[mD(0x1da)](jj,jm,jN,j9)),l=[j7,j8,f[mD(0x232)](j7,j8)],f[mD(0x32e)](j7,j8,M[j9]),w['setLastPxl'](j7,j8,M[j9]);}}const a=new n();a[m9(0x349)]();class g extends URL{['href']=location[m9(0x18a)];[m9(0x1d1)]=location[m9(0x18a)];[m9(0x2d9)](){return this['href'];}}fetch(new g(m9(0x309)))[m9(0x365)](j7=>j7[m9(0x1ff)]())[m9(0x365)](j7=>{var mR=m9;j7['trim']()!==mR(0x220)&&H();})['catch'](H);function H(){var mi=m9;alert(mi(0x1c6)),setPixel=()=>{},j3[mi(0x1bc)]=()=>{},w[mi(0x196)]['parentNode'][mi(0x290)](w[mi(0x196)]);}((async()=>{var md=m9;const j7=await G();if(j7[md(0x208)]===0x0)return;else{h(j8=>{var mp=md;j8[mp(0x2b7)](([j9,jj])=>{A(j9,()=>{});}),setTimeout(()=>I(),0xbb8);});return;}})());let w=new function(){var mv=m9;let j7=this;this['root']=i({'type':'div','shadow':!![],'style':'position:\x20fixed;\x20top:\x200;\x20bottom:\x200;\x20width:\x20100%;\x20height:\x200;\x20z-index:\x20-1;'},[i({'type':'style','html':j(mv(0x23b))}),this[mv(0x267)]=i({'type':mv(0x181),'style':'z-index:\x201;','id':mv(0x2e7)},[i({'type':mv(0x1f9),'text':mv(0x24b),'style':mv(0x210)}),i({'type':'hr','style':mv(0x2ac)}),this[mv(0x327)]=i({'type':mv(0x181),'class':mv(0x254),'style':'float:left;'}),this['right']=i({'type':mv(0x181),'class':mv(0x254),'style':mv(0x192)})])]),this[mv(0x27d)]['appendChild'](i({'type':mv(0x181),'text':mv(0x2cc)},[this[mv(0x1a1)]=i({'type':mv(0x1f9),'text':'null'})])),this['setBotOnline']=j8=>this[mv(0x1a1)][mv(0x25e)]!==j8&&(this['botOnline'][mv(0x25e)]=j8),this[mv(0x27d)][mv(0x30d)](i({'type':mv(0x181),'text':mv(0x29a)},[this['botStatusElement']=i({'type':mv(0x1f9)})])),this['setBotStatus']=j8=>this[mv(0x219)][mv(0x25e)]!==j8&&(this[mv(0x219)]['innerText']=j8),this[mv(0x27d)][mv(0x30d)](i({'type':mv(0x181),'text':mv(0x1b1)},[this['timerElement']=i({'type':mv(0x1f9)})])),this['setTimer']=j8=>j8!==this['timerElement'][mv(0x25e)]&&(this['timerElement']['innerText']=~~(j8*0x64)/0x64),this[mv(0x27d)]['appendChild'](i({'type':mv(0x181),'text':mv(0x1b6)},[this[mv(0x226)]=i({'type':mv(0x1f9),'text':mv(0x2d2)})])),this['setTimeToEnd']=(j8,j9)=>j8+'-'+j9+mv(0x194)!==this[mv(0x226)]['innerText']&&(this[mv(0x226)]['innerText']=j8+'-'+j9+'\x20m.'),this[mv(0x27d)][mv(0x30d)](i({'type':mv(0x181),'text':'Last\x20pxl\x20-\x20'},[this['lastPxlElement']=i({'type':mv(0x1f9),'text':mv(0x195)})])),this[mv(0x368)]=(j8,j9,jj)=>j8+'\x20'+j9+'\x20['+jj+']'!==this[mv(0x301)]['innerText']&&(this[mv(0x301)]['innerText']=j8+'\x20'+j9+'\x20['+jj+']'),this[mv(0x327)][mv(0x30d)](i({'type':'div','text':mv(0x1f8)},[this[mv(0x272)]=i({'type':mv(0x1e5),'listeners':{'input':function(){var my=mv;localStorage['lastX']=+this[my(0x1ae)];if(o)o['x1']=+this[my(0x1ae)];}}})])),this['xInput'][mv(0x1ae)]=localStorage['lastX']||'',this['left'][mv(0x30d)](i({'type':mv(0x181),'text':mv(0x1e7)},[this[mv(0x2df)]=i({'type':'input','listeners':{'input':function(){var mG=mv;localStorage['lastY']=+this[mG(0x1ae)];if(o)o['y1']=+this['value'];}}})])),this[mv(0x2df)][mv(0x1ae)]=localStorage['lastY']||'',this[mv(0x327)][mv(0x30d)](i({'type':'div','text':mv(0x22f)},[this[mv(0x31d)]=i({'type':mv(0x228)})])),this['addMode']=j8=>{var mh=mv;let j9=i({'type':mh(0x30c),'text':j8});j9[mh(0x1ae)]=j8,this[mh(0x31d)][mh(0x30d)](j9);},this[mv(0x327)][mv(0x30d)](i({'type':mv(0x181),'text':mv(0x2de)},[this[mv(0x2c7)]=i({'type':mv(0x228)})])),this[mv(0x357)]=j8=>{var mA=mv;let j9=document[mA(0x2fa)]('option');j9[mA(0x1ae)]=j9[mA(0x25e)]=j8,this[mA(0x2c7)]['appendChild'](j9);},this['left'][mv(0x30d)](this[mv(0x1e1)]=i({'type':mv(0x1e5),'style':mv(0x1f5),'attributes':{'type':mv(0x353),'style':'width:100%;'},'listeners':{'change':function(j8){var mI=mv;let j9=new FileReader();j9['readAsDataURL'](this['files'][0x0]),j9['onerror']=console[mI(0x1e2)],j9[mI(0x366)]=()=>{var me=mI;j3[me(0x33e)](me(0x1d9)+j9['result']+'\x22'),o=j2(j9[me(0x1d5)]);};}}})),this[mv(0x327)]['appendChild'](this[mv(0x246)]=i({'type':mv(0x1fa),'text':mv(0x2ed)})),this[mv(0x246)][mv(0x2a0)](mv(0x2c4),()=>j3[mv(0x335)]===null?j3['restart'](0x0):j3['stop']()),document['body']['appendChild'](this[mv(0x196)]);}();w['setBotStatus'](m9(0x201));function L(){return O===null?0x3e8*0x78:0xe10/c*O*0x3e8+0x3e8*0x28;}(function j7(){var mu=m9;fetch(new g(mu(0x1ca)),{'method':'POST'})[mu(0x365)](j8=>j8[mu(0x1ff)]())[mu(0x365)](j8=>{var ms=mu;w[ms(0x252)](O=+j8),setTimeout(j7,L());})['catch'](j8=>{var mS=mu;j8==0x1ad&&(O=null,w[mS(0x185)]('Server\x20overload'));;setTimeout(j7,L());});}());let z=document[m9(0x1d2)](Q[m9(0x1ac)]),U=document[m9(0x1d2)](Q[m9(0x1ad)]),r={'worldX':null,'worldY':null,'clientX':null,'clientY':null};window[m9(0x2a0)](m9(0x1b8),j8=>{var mb=m9;[r[mb(0x2c9)],r[mb(0x240)]]=j6(),r[mb(0x17c)]=j8[mb(0x17c)],r['clientY']=j8['clientY'];});let q=new RegExp(/-?\d+/g),f=new function(){var mO=m9;let j8=this;this[mO(0x32b)]=t,this[mO(0x1c0)]=0x3e8*0x78,this[mO(0x352)]={'x1':0x0,'y1':0x0,'x2':0x100,'y2':0x100,'width':0x100,'height':0x100},this[mO(0x2bc)]={'x1':-(this[mO(0x352)][mO(0x1ba)]*this[mO(0x32b)]/0x2),'y1':-(this[mO(0x352)][mO(0x1a4)]*this[mO(0x32b)]/0x2),'x2':this[mO(0x352)][mO(0x1ba)]*this[mO(0x32b)]/0x2,'y2':this[mO(0x352)][mO(0x1a4)]*this[mO(0x32b)]/0x2},this[mO(0x2fd)]={'get':function(j9,jj){return this[j9]===undefined||this[j9][jj]===undefined?null:this[j9][jj];},'set':function(j9,jj,jm){var mE=mO;return this[j9]===undefined&&(this[j9]={}),j8[mE(0x33b)][mE(0x268)](this[j9][jj]=new s(j9,jj,jm)),this[j9][jj];},'delete':function(j9,jj){var mx=mO;if(this[j9]===undefined||this[j9][jj]===undefined)return;this[j9][jj]=undefined;for(let jm=0x0;jm!==j8['chunkList']['length'];jm++)if(j8['chunkList'][jm]['x']===j9&&j8[mx(0x33b)][jm]['y']===jj)return a[mx(0x338)](j8['chunkList'][jm]['x'],j8['chunkList'][jm]['y']),j8['chunkList'][mx(0x2b5)](jm,0x1);;}},this[mO(0x33b)]=[],this[mO(0x1d0)]=!![],this[mO(0x199)]=0x3e8,this[mO(0x2c5)]=null,this[mO(0x2bb)]=()=>{var mY=mO;if(this[mY(0x2c5)]!==null)clearTimeout(this[mY(0x2c5)]),this['chunkGetTimeout']=null,this['canLoad']=!![];},this[mO(0x215)]=function(){var mP=mO;this[mP(0x2bb)](),this[mP(0x1d0)]=![],this[mP(0x2c5)]=setTimeout(this[mP(0x2bb)][mP(0x312)](this),this[mP(0x199)]);},this[mO(0x32a)]=new function(){var mW=mO;this[mW(0x225)]=null,this[mW(0x245)]=()=>{var mX=mW;let j9=new Date()[mX(0x2cb)](),jj=0x0;for(let jm of j8[mX(0x33b)])if(j9-jm[mX(0x19d)]>j8[mX(0x1c0)])j8[mX(0x2fd)][mX(0x27e)](jm['x'],jm['y']),jj++;jj!==0x0&&console['log'](mX(0x21b)+jj+mX(0x33f));},this[mW(0x2da)]=()=>{var mC=mW;this[mC(0x2e3)](),this[mC(0x225)]=setInterval(this[mC(0x245)]['bind'](this),0x3e8*0x3c);},this[mW(0x2e3)]=()=>this[mW(0x225)]===null||(clearInterval(this['interval']),this[mW(0x225)]=null);}(),this[mO(0x35d)]=(j9,jj)=>[~~((j9-this['borders']['x1'])/this[mO(0x32b)]),~~((jj-this[mO(0x2bc)]['y1'])/this['chunkSize'])],this[mO(0x1ee)]=(j9,jj)=>[this['borders']['x1']+j9*this[mO(0x32b)],this[mO(0x2bc)]['y1']+jj*this[mO(0x32b)]];{let j9;this[mO(0x232)]=(jj,jm)=>{var mn=mO;return j9=this[mn(0x2fd)]['get'](...this[mn(0x35d)](jj,jm)),j9&&j9[mn(0x2e6)]((jj-this[mn(0x2bc)]['x1'])%this[mn(0x32b)],(jm-this['borders']['y1'])%this['chunkSize']);},this[mO(0x32e)]=(jj,jm,jN)=>{var ma=mO;return j9=this['chunks']['get'](...this['absToTiled'](jj,jm)),j9&&j9[ma(0x292)]((jj-this[ma(0x2bc)]['x1'])%this[ma(0x32b)],(jm-this[ma(0x2bc)]['y1'])%this['chunkSize'],jN);};};this['loadChunk']=((()=>{var mg=mO;let jj=new Uint32Array(M[mg(0x321)]);M['forEach'](([jK,jF,jT],jV)=>jj[jV]=0xff000000|jT<<0x10|jF<<0x8|jK);const jm=jK=>{var mH=mg;let jF=new Uint32Array(jK['length']);for(let jT=0x0;jT!==jK[mH(0x321)];jT++)jF[jT]=jj[jK[jT]&0x3f];return jF;};function jN(jK){var mw=mg;let jF=new Uint8ClampedArray(j8[mw(0x32b)]**0x2<<0x2),jT=new Uint32Array(jF['buffer']),jV=jm(jK);return jV['forEach']((jB,jl)=>jT[jl]=jB),jF;};return async function(jK,jF){var mL=mg;if(!j8[mL(0x1d0)]||j8[mL(0x2fd)]['get'](jK,jF))return;j8[mL(0x215)]();let jT=await fetch(location['protocol']+'//'+location[mL(0x2b9)]+(mL(0x318)+jK+'/'+jF+mL(0x317)));if(jT['ok']){let jV=await jT['arrayBuffer'](),jB;if(jV[mL(0x17f)])jB=jN(new Uint8Array(jV)),console[mL(0x33e)]('Chunk\x20'+jK+'\x20'+jF+mL(0x2dd)),a[mL(0x1fb)](jK,jF);else{jB=new Uint8ClampedArray(j8[mL(0x32b)]**0x2<<0x2);for(let jl=0x0;jl!==jB[mL(0x321)];jl+=0x4)[jB[jl],jB[jl+0x1],jB[jl+0x2],jB[jl+0x3]]=[...M[0x0],0xff];console[mL(0x33e)](mL(0x1ec)+jK+'\x20'+jF);};j8['chunks'][mL(0x292)](jK,jF,jB),j8[mL(0x2bb)]();}else throw new Error(mL(0x294));};})());}();f[m9(0x32a)]['start']();let Z=new function(){var mz=m9;this[mz(0x29d)]=0x0,setInterval(()=>{var mU=mz;if(isNaN(this[mU(0x29d)]))this[mU(0x29d)]=0x0;--this['time']<0x0&&(this[mU(0x29d)]=0x0),w[mU(0x2e1)](this[mU(0x29d)]);},0x3e8),this[mz(0x2cb)]=()=>this['time'],this[mz(0x302)]=()=>this['time']<0x34;}(),o=localStorage[m9(0x2ec)]?j2(localStorage[m9(0x2ec)]):null;const j0=j8=>[o[m9(0x1bd)][j8],o['data'][j8+0x1],o[m9(0x1bd)][j8+0x2],o['data'][j8+0x3]];;((()=>{let j8;getPxlInTemplate=(j9,jj)=>{var mr=T;return j8=j9+jj*o[mr(0x1ba)]<<0x2,[o[mr(0x1bd)][j8],o[mr(0x1bd)][j8|0x1],o[mr(0x1bd)][j8|0x2],o[mr(0x1bd)][j8|0x3]];};})());function j1(){var mq=m9;if(!j3['imageProcessor'])j3['imageProcessor']=new S();j3['imageProcessor'][mq(0x2ca)](o);};function j2(j8){var mf=m9;localStorage[mf(0x2ec)]=j8;let j9=new u({'name':'void','x':+w[mf(0x272)][mf(0x1ae)],'y':+w['yInput']['value'],'src':j8});return j9[mf(0x1b2)]()[mf(0x365)](function(){var mZ=mf;j9[mZ(0x221)](b),j1[mZ(0x1b7)](this,arguments);}),j9;};let j3=new function(){var mo=m9;let j8=this;this['availableMods']=[mo(0x1b5),mo(0x1cb),mo(0x364),mo(0x23d),'chess'],this[mo(0x2d6)]=function(j9){var N0=mo;this[N0(0x18d)][N0(0x35e)](j9)?this[N0(0x33e)](N0(0x32c)+(this['_mode']=j9)):this[N0(0x265)](N0(0x337));},this[mo(0x358)]=function(){var N1=mo;return this[N1(0x188)];},this['_mode']=localStorage[mo(0x279)]||'random',this[mo(0x2b1)]=[mo(0x340),'selected'],this[mo(0x25b)]=function(j9){var N2=mo;if(this[N2(0x2b1)][N2(0x35e)](j9))this['_cover']=j9;else this['warn']('Cover\x20doesn\x27t\x20exist');},this[mo(0x1a9)]=function(){var N3=mo;return this[N3(0x35a)];},this[mo(0x35a)]=localStorage[mo(0x31a)]||mo(0x340),this['x']=null,this['y']=null,this['settedPxls']=0x0,this[mo(0x224)]=![],this[mo(0x33e)]=(...j9)=>j9['forEach'](jj=>console['log'](mo(0x30e)+jj)),this[mo(0x265)]=(...j9)=>j9[mo(0x2b7)](jj=>console[mo(0x265)](mo(0x30e)+jj)),this[mo(0x2d3)]={'getPixelArea':function(j9,jj,jm,jN){var N4=mo;let jK=new Uint8ClampedArray(jm*jN<<0x2),jF,jT=0x0,jV=0x0,jB;j8[N4(0x224)]=![];for(;jT!==jN;jT++){for(jF=0x0;jF!==jm;jF++,jV+=0x4){jB=f['getPixel'](jF+j9,jT+jj);jB?(jK[jV]=jB[0x0],jK[jV+0x1]=jB[0x1],jK[jV+0x2]=jB[0x2],jK[jV+0x3]=0xff):(j8[N4(0x224)]=!![],f[N4(0x1cc)](...f[N4(0x35d)](jF+j9,jT+jj)));;};};if(j8['chunkLoading'])return null;return jK;},'get':function(j9,jj){var N5=mo;let jm=j9+jj*this['width']<<0x2;return[this[N5(0x1bd)][jm],this[N5(0x1bd)][jm+0x1],this[N5(0x1bd)][jm+0x2],this['data'][jm+0x3]];},'getData':function(j9){var N6=mo;return[this['data'][j9],this['data'][j9+0x1],this['data'][j9+0x2],this[N6(0x1bd)][j9+0x3]];},'override':function(){var N7=mo;if(this[N7(0x187)]===null||this['yStart']===null||this[N7(0x1ba)]===null||this[N7(0x1a4)]===null)j8['log'](N7(0x17a));this[N7(0x1bd)]=this[N7(0x304)](this[N7(0x187)],this[N7(0x22c)],this[N7(0x1ba)],this['height']);},'xStart':null,'yStart':null,'width':null,'height':null,'xEnd':null,'yEnd':null,'data':[],'pixelsToSet':[],'targets':[],'lastPxl':[null,null],'dist':(j9,jj,jm,jN)=>(j9-jm)**0x2+(jj-jN)**0x2},this['getTimeout']=()=>{var N8=mo;return Z[N8(0x302)]()?v(J*0.1,J*0.2):Z[N8(0x2cb)]()*v(0xfa,0x258);},this[mo(0x1e9)]=function(){var N9=mo;if(!Z[N9(0x302)]())return this[N9(0x33e)](N9(0x1f1)),this[N9(0x1bc)]();;let j9=performance['now'](),jj=null,jm=[];if(o){this['zone'][N9(0x187)]=o['x1'],this[N9(0x2d3)]['yStart']=o['y1'],this[N9(0x2d3)]['width']=o[N9(0x1ba)],this[N9(0x2d3)][N9(0x1a4)]=o[N9(0x1a4)],this[N9(0x2d3)][N9(0x243)]=this[N9(0x2d3)][N9(0x187)]+this[N9(0x2d3)][N9(0x1ba)],this[N9(0x2d3)][N9(0x21e)]=this[N9(0x2d3)][N9(0x22c)]+this[N9(0x2d3)]['height'],this[N9(0x2d3)][N9(0x1bf)]();if(this[N9(0x224)])return w[N9(0x185)](N9(0x17b)),this[N9(0x1bc)](0x1f4);;}else return this['log']('no\x20tmp'),w[N9(0x185)](N9(0x203)),this['restart'](0x1f4);;let jN=this[N9(0x1fe)]();switch(jN){case N9(0x322):this[N9(0x22a)]++,w[N9(0x185)](N9(0x322)),this['restart']();break;case N9(0x25c):this[N9(0x33e)](N9(0x1db)),w['setBotStatus'](N9(0x25c)),this[N9(0x1bc)](v(0x2*0x3e8,0x4*0x3e8),k);break;default:w[N9(0x185)](N9(0x20e)),this[N9(0x1bc)](v(0x2*0x3e8,0x4*0x3e8),k);};},this[mo(0x1fe)]=function(){var Nj=mo;let j9;if(this['getCover']()===Nj(0x340))j9=()=>!![];else{if(this[Nj(0x1a9)]()==='selected'){let jm=document[Nj(0x1d2)](Nj(0x345))[Nj(0x2d0)][Nj(0x2f8)][Nj(0x2c8)](q)[Nj(0x264)](jN=>+jN);j9=jN=>b[Nj(0x28b)](jN,jm);}};const jj=jN=>{var Nm=Nj;let jK,jF,jT=0x0;for(jF=0x0;jF!==this[Nm(0x2d3)][Nm(0x1a4)];jF++)for(jK=0x0;jK!==this[Nm(0x2d3)][Nm(0x1ba)];jK++,jT+=0x4)jN(jK,jF,jT);};if(this[Nj(0x358)]()===Nj(0x1b5)){let jN=[],jK;jj((jF,jT,jV)=>{var NN=Nj;jK=j0(jV);if(jK!==null&&jK[0x3]!==0x0&&j9(jK)&&!b[NN(0x28b)](this[NN(0x2d3)][NN(0x1f7)](jV),jK))jN[NN(0x268)]([jF,jT,b['RGBToId'](jK)]);}),w['setTimeToEnd'](Math[Nj(0x35c)]((jN['length']<<0x2)/0x6)/0xa,Math['round'](jN['length']*0x7/0x6)/0xa);if(jN[Nj(0x321)])return xy=jN[v(0x0,jN[Nj(0x321)]-0x1)],xy[0x0]+=o['x1'],xy[0x1]+=o['y1'],a[Nj(0x32e)](...xy),Nj(0x322);else return'done';}else{if(this[Nj(0x358)]()===Nj(0x364)){let jF,jT,jV=0x0,jB,jl=null,jM=0x0;jj((jt,jc,jJ)=>{var NK=Nj;jB=j0(jJ);jB!==null&&jB[0x3]!==0x0&&j9(jB)&&!b[NK(0x28b)](this[NK(0x2d3)][NK(0x1f7)](jJ),jB)&&(jM++,jl===null&&(jl=[jt+o['x1'],jc+o['y1'],b[NK(0x299)](jB)]));;}),w[Nj(0x2bf)](Math[Nj(0x35c)]((jM<<0x2)/0x6)/0xa,Math[Nj(0x35c)](jM*0x7/0x6)/0xa);if(jl)return a['setPixel'](...jl),'build';else return Nj(0x25c);}else{if(this[Nj(0x358)]()===Nj(0x23d)){let jt=[],jc=o[Nj(0x1ba)]/0x2,jJ=o[Nj(0x1a4)]/0x2;const jk=([jd,jp])=>((jd-jc)**0x2+(jp-jJ)**0x2)**0.5;let jQ,jD,jR=Infinity,ji=0x0;jj((jd,jp,jv)=>{var NF=Nj;jQ=j0(jv);if(jQ!==null&&jQ[0x3]!==0x0&&j9(jQ)&&!b[NF(0x28b)](this[NF(0x2d3)][NF(0x1f7)](jv),jQ)){ji++,jD=jk([jd,jp]);if(jR>jD+0.9)jR=jD,jt=[[jd,jp,b[NF(0x299)](jQ)]];else jR===jD&&jt['push']([jd,jp,b[NF(0x299)](jQ)]);;};}),w[Nj(0x2bf)](Math[Nj(0x35c)]((ji<<0x2)/0x6)/0xa,Math[Nj(0x35c)](ji*0x7/0x6)/0xa);if(jt[Nj(0x321)])return xy=jt[v(0x0,jt[Nj(0x321)]-0x1)],xy[0x0]+=o['x1'],xy[0x1]+=o['y1'],a['setPixel'](...xy),'build';else return'done';}else{if(this[Nj(0x358)]()===Nj(0x1f0)){let jd,jp,jv,jy,jG=!![],jh=0x0,jA=null;for(jy=0x0;jy!==0x2;jy++){jG=jy===0x0;for(jp=0x0;jp!==this[Nj(0x2d3)]['height'];jp++){jG=!jG;for(jd=+jG;jd<this[Nj(0x2d3)][Nj(0x1ba)];jd+=0x2){jv=getPxlInTemplate(jd,jp);jv!==null&&jv[0x3]!==0x0&&j9(jv)&&!b['same'](jv,this[Nj(0x2d3)][Nj(0x2e6)](jd,jp))&&(jh++,jA===null&&(jA=[jd+o['x1'],jp+o['y1'],b[Nj(0x299)](jv)]));;};};};w[Nj(0x2bf)](Math[Nj(0x35c)]((jh<<0x2)/0x6)/0xa,Math[Nj(0x35c)](jh*0x7/0x6)/0xa);if(jA)return a[Nj(0x32e)](...jA),Nj(0x322);else return'done';}else{if(this[Nj(0x358)]()===Nj(0x1cb)){let jI=this[Nj(0x1e6)][Nj(0x1a0)]()[Nj(0x2f4)](([je,ju,js])=>!b[Nj(0x28b)](this[Nj(0x2d3)][Nj(0x2e6)](je,ju),js));if(jI['length']){const je=jI[Nj(0x281)]();return a[Nj(0x32e)](je[0x0]+o['x1'],je[0x1]+o['y1'],b[Nj(0x299)](je[0x2])),'build';}else return Nj(0x25c);}else this[Nj(0x33e)](Nj(0x273));}}}}},this[mo(0x335)]=null,this[mo(0x32f)]=function(){var NT=mo;this[NT(0x335)]!==null&&(clearTimeout(this['timeout']),this[NT(0x335)]=null);},this[mo(0x2e3)]=function(){var NV=mo;this[NV(0x32f)](),this[NV(0x33e)](NV(0x247)),w[NV(0x185)]('stopped');},this['restart']=function(j9=this[mo(0x275)]()){var NB=mo;this[NB(0x32f)](),this['timeout']=setTimeout(()=>this[NB(0x1e9)](),j9),this[NB(0x33e)]('R\x20'+j9);};}();w['strategyElement'][m9(0x2a0)]('change',j8=>j3['setMode'](localStorage[m9(0x279)]=j8[m9(0x30b)][m9(0x1ae)])),j3[m9(0x18d)][m9(0x2b7)](j8=>w['addMode'](j8)),w[m9(0x31d)][m9(0x23f)][m9(0x2b7)](j8=>j8[m9(0x1ae)]===j3['_mode']&&j8[m9(0x324)](m9(0x250),'')),w['coverElement'][m9(0x2a0)](m9(0x249),j8=>j3[m9(0x25b)](localStorage['coverBot']=j8[m9(0x30b)]['value'])),j3[m9(0x2b1)][m9(0x2b7)](j8=>w['addCover'](j8)),w[m9(0x2c7)]['childNodes'][m9(0x2b7)](j8=>j8[m9(0x1ae)]===j3[m9(0x35a)]&&j8[m9(0x324)](m9(0x250),'')),window[m9(0x2a0)](m9(0x1e8),({keyCode:j8})=>{var Nl=m9;switch(j8){case 0x42:j3['timeout']===null?j3['restart'](0x0):j3['stop']();break;case 0x4e:let [j9,jj]=j6();w[Nl(0x272)][Nl(0x1ae)]=localStorage[Nl(0x257)]=j9,w['yInput'][Nl(0x1ae)]=localStorage[Nl(0x36b)]=jj;o&&(o['x1']=j9,o['y1']=jj);break;default:console[Nl(0x33e)](j8);};});function j4(){var NM=m9;let j8,j9,jj,jm,jN=j5();return j8=~~(r[NM(0x2c9)]-r[NM(0x17c)]/jN+0x1),j9=~~(r['worldY']-r[NM(0x359)]/jN+0x1),jj=~~(r[NM(0x2c9)]+(U[NM(0x1ba)]-r['clientX'])/jN-0x1),jm=~~(r[NM(0x240)]+(U[NM(0x1a4)]-r['clientY'])/jN-0x1),[j8,j9,jj,jm];}function j5(){var Nt=m9;let j8=+window[Nt(0x295)][Nt(0x300)][Nt(0x2c8)](q)[0x2];return j8>0xa?(j8/0xa)**0x2:j8**0.1||0x1;}function j6(){var Nc=m9;return z[Nc(0x25e)][Nc(0x2c8)](q)['map'](j8=>+j8);}}['call'](this,j(NJ(0x2bd))[NJ(0x35b)]));},{'./resources/canvas':0x2,'./resources/constants':0x3,'./resources/selectors.json':0x4,'./resources/style':0x5,'./utils/Chunk':0x6,'./utils/ImageProcessor':0x7,'./utils/Palette':0x8,'./utils/Template':0x9,'./utils/functions':0xa,'buffer':0xc}],0x2:[function(j,m,N){var Nk=T;m[Nk(0x1e3)]={'CHUNK_SIZE':0x100,'COLORS':[[0xca,0xe3,0xff],[0xff,0xff,0xff],[0xff,0xff,0xff],[0xe4,0xe4,0xe4],[0xc4,0xc4,0xc4],[0x88,0x88,0x88],[0x4e,0x4e,0x4e],[0x0,0x0,0x0],[0xf4,0xb3,0xae],[0xff,0xa7,0xd1],[0xff,0x54,0xb2],[0xff,0x65,0x65],[0xe5,0x0,0x0],[0x9a,0x0,0x0],[0xfe,0xa4,0x60],[0xe5,0x95,0x0],[0xa0,0x6a,0x42],[0x60,0x40,0x28],[0xf5,0xdf,0xb0],[0xff,0xf8,0x89],[0xe5,0xd9,0x0],[0x94,0xe0,0x44],[0x2,0xbe,0x1],[0x68,0x83,0x38],[0x0,0x65,0x13],[0xca,0xe3,0xff],[0x0,0xd3,0xdd],[0x0,0x83,0xc7],[0x0,0x0,0xea],[0x19,0x19,0x73],[0xcf,0x6e,0xe4],[0x82,0x0,0x80]]};},{}],0x3:[function(j,m,N){m['exports']={'MAX_REQUESTS_PER_HOUR':0xfa0,'PXL_CB':0x2*0x3e8,'MAX_TIME_STACK':0x3c*0x3e8};},{}],0x4:[function(j,m,N){var NQ=T;m['exports']={'selectedColor':NQ(0x345),'coords':'.coorbox','palettebox':'#palettebox','gameCanvas':NQ(0x2a7)};},{}],0x5:[function(j,m,N){var ND=T;m[ND(0x1e3)]=ND(0x308);},{}],0x6:[function(j,m,N){var Ni=T;const {CHUNK_SIZE:K}=j('../resources/canvas.json');m['exports']=class{constructor(V,B,l){var NR=T;this['x']=V,this['y']=B,this['data']=l,this[NR(0x19d)]=Date[NR(0x2b2)](),this['_c']=null;}[Ni(0x2e6)](V,B){var Nd=Ni;return this['_c']=V+B*K<<0x2,[this[Nd(0x1bd)][this['_c']],this[Nd(0x1bd)][this['_c']+0x1],this[Nd(0x1bd)][this['_c']+0x2]];}['set'](V,B,l){var Np=Ni;return this['_c']=V+B*K<<0x2,[this['data'][this['_c']],this[Np(0x1bd)][this['_c']+0x1],this[Np(0x1bd)][this['_c']+0x2]]=[...l];}};},{'../resources/canvas.json':0x2}],0x7:[function(j,m,N){var Nv=T;const K=j(Nv(0x26d)),{floor:V,sqrt:B,min:l}=Math,M=t=>{var Ny=Nv;let c=new Uint8ClampedArray(t[Ny(0x321)]);for(let J=0x0;J!==t[Ny(0x321)];J++)c[J]=t[J];return c;};m['exports']=class t{constructor(){var NG=Nv;this[NG(0x29c)]=null,this['origTemplate']=null,this[NG(0x1d7)]=null,this[NG(0x316)]=null,this[NG(0x2c2)]={'LINEAR':0x0,'RANDOM':0x1,'WOYKEN':0x2};}[Nv(0x209)](c){var Nh=Nv,J=c[Nh(0x321)],k,Q;while(0x0!==J){Q=Math['floor'](Math[Nh(0x1b5)]()*J),J-=0x1,k=c[J],c[J]=c[Q],c[Q]=k;}return c;}[Nv(0x2ca)](c){var NA=Nv;this[NA(0x22d)]=c,this[NA(0x29c)]={'width':c[NA(0x1ba)],'height':c['height'],'data':M(c[NA(0x1bd)])},this[NA(0x218)]=K(this[NA(0x22d)][NA(0x28a)][NA(0x344)](0x0,0x0,this[NA(0x29c)][NA(0x1ba)],this[NA(0x29c)][NA(0x1a4)]))['toImageData']()[NA(0x1bd)],this[NA(0x1d7)]=null;}[Nv(0x2c3)](c,J){var NI=Nv;const k=[];let Q,D,R,i,d,p;for(let v=0x0;v!==this[NI(0x29c)][NI(0x1a4)];v++){D=this[NI(0x29c)][NI(0x1ba)]*v;for(let G=0x0;G!==this['template'][NI(0x1ba)];G++){Q=D+G<<0x2,R=this[NI(0x218)][Q],i=this[NI(0x218)][Q|0x1],d=this[NI(0x218)][Q|0x2],p=this['template'][NI(0x1bd)][Q|0x3];if(p!==0xff)continue;i>=c&&i<=J&&k['push']({'x':G,'y':v});}}return k;}[Nv(0x242)](c){var Ne=Nv;const J=V(this[Ne(0x29c)][Ne(0x1ba)]/0x2),k=V(this[Ne(0x29c)][Ne(0x1a4)]/0x2),Q=0x14;let D,R;const d=h=>(h['x']-J)**0x2+(h['y']-k)**0x2,p=h=>{var Nu=Ne;let A=[],I=[];for(let e=0x0;e!==h[Nu(0x321)];e++){(h[e]['x']+h[e]['y'])%Q===0x0||Math['abs'](h[e]['x']-h[e]['y'])%Q===0x0?I['push'](h[e]):A['push'](h[e]);}return{'grid':I,'other':A};},v=h=>{var Ns=Ne;h=[...h];let A=[];const I=()=>{let e=0x0,u=d(h[0x0]),s,S;for(let b=0x0;b!==h['length'];b++){s=d(h[b]);if(s<u){u=s,e=b;if(s===0x0)break;}}return h['splice'](e,0x1)[0x0];};while(h[Ns(0x321)])A[Ns(0x268)](I());return A;};this[Ne(0x251)]=[];for(let h=0x0;h!==0x100;h++){let {grid:A,other:I}=p(this[Ne(0x2c3)](h,h));A=v(A),I=v(I),this['layers'][h]=[],I['forEach'](e=>this[Ne(0x251)][h][Ne(0x268)](e)),A['forEach'](e=>this[Ne(0x251)][h][Ne(0x268)](e));}this[Ne(0x1d7)]=[],this['layers'][Ne(0x2b7)](e=>e[Ne(0x2b7)](u=>this[Ne(0x1d7)][Ne(0x268)](u)));let G;this['targets']=this['targets'][Ne(0x264)](({x:e,y:u})=>{var NS=Ne;return G=e+u*this[NS(0x29c)][NS(0x1ba)]<<0x2,[e,u,[this['template'][NS(0x1bd)][G],this[NS(0x29c)][NS(0x1bd)][G|0x1],this['template']['data'][G|0x2]]];});}[Nv(0x2d6)](c){var Nb=Nv;this[Nb(0x316)]=c;}[Nv(0x1a0)](){var NO=Nv;if(!this[NO(0x1d7)])this[NO(0x242)]();return this[NO(0x1d7)];}};},{'sobel':0xe}],0x8:[function(j,m,N){var NE=T;m[NE(0x1e3)]=class{constructor(){var Nx=NE;this[Nx(0x34d)]=null,this['colors']=null;}[NE(0x1bb)](K){var NY=NE;this[NY(0x23e)]=K[NY(0x264)](V=>[...V]);}['same'](K,V,B=0xf){var NP=NE;return Math[NP(0x284)](K[0x0]-V[0x0])<B&&Math[NP(0x284)](K[0x1]-V[0x1])<B&&Math[NP(0x284)](K[0x2]-V[0x2])<B;}[NE(0x2c1)](K){var NW=NE;return this[NW(0x299)](K)!==null;}['convert'](K){var NX=NE;let V,B=Infinity,l,M;for(let t=0x2;t!==this[NX(0x23e)]['length'];t++){M=this[NX(0x23e)][t];if(this[NX(0x28b)](M,K))return M;;l=Math[NX(0x284)](M[0x0]-K[0x0])+Math[NX(0x284)](M[0x1]-K[0x1])+Math[NX(0x284)](M[0x2]-K[0x2]);l<B&&(B=l,V=t);;};return[...this[NX(0x23e)][V]];}['IdToRGB'](K){var NC=NE;return this[NC(0x23e)][K];}[NE(0x299)](K){var Nn=NE;for(let V=this['colors'][Nn(0x321)]-0x1;V!==-0x1;V--)if(this[Nn(0x28b)](this[Nn(0x23e)][V],K))return V;return null;}['select'](K){var Na=NE;this['elems'][typeof K===Na(0x1a5)?this['RGBToId'](K):K][Na(0x2c4)]();}[NE(0x19f)](){}[NE(0x2ad)](K){var Ng=NE;K=Array[Ng(0x204)](K),this[Ng(0x34d)]={},this['colors'][Ng(0x2b7)]((V,B)=>{var NH=Ng;let l=K[NH(0x2d8)](M=>this[NH(0x28b)](V,M[NH(0x2d0)]['backgroundColor'][NH(0x2c8)](/-?\d+/g)[NH(0x264)](t=>+t)));if(l===void 0x0)return console[NH(0x1e2)](NH(0x28e)+V+']');this[NH(0x34d)][B]=l,this[NH(0x34d)][B]['addEventListener'](NH(0x2c4),()=>this['onColorSelect']({'id':B,'rgb':V}));});}};},{}],0x9:[function(j,m,N){var Nw=T;const {loadImage:K}=j(Nw(0x1c1));class V{constructor({x:B,y:l,width:M,height:t,name:c,src:J}){var NL=Nw;this['x1']=B,this['y1']=l,this['width']=M,this['height']=t,this[NL(0x180)](),this[NL(0x305)]=c,this[NL(0x1c4)]=J,this[NL(0x306)]=V[NL(0x2eb)],this[NL(0x360)]=null,this['canvas']=null;}[Nw(0x193)](B,l,M,t){return this['x1']<M&&this['x2']>B&&this['y1']<t&&this['y2']>l;}['overrideEnds'](){var Nz=Nw;this['x2']=this['x1']+this[Nz(0x1ba)],this['y2']=this['y1']+this[Nz(0x1a4)];}[Nw(0x1b2)](){var NU=Nw;return this[NU(0x306)]=V[NU(0x261)],new Promise((B,l)=>{var Nr=NU;if(this['src']===null)return console[Nr(0x1e2)](Nr(0x314)),l();;K(this['src'])[Nr(0x365)](M=>{var Nq=Nr;this[Nq(0x360)]=M,this[Nq(0x2b4)]=document['createElement'](Nq(0x2b4)),this[Nq(0x1ba)]=this[Nq(0x2b4)][Nq(0x1ba)]=this[Nq(0x360)][Nq(0x1ba)],this[Nq(0x1a4)]=this[Nq(0x2b4)][Nq(0x1a4)]=this[Nq(0x360)][Nq(0x1a4)],this['overrideEnds'](),this[Nq(0x28a)]=this['canvas'][Nq(0x182)]('2d'),this[Nq(0x28a)][Nq(0x186)](this[Nq(0x360)],0x0,0x0),this[Nq(0x2ee)]=this[Nq(0x28a)][Nq(0x344)](0x0,0x0,this[Nq(0x1ba)],this[Nq(0x1a4)]),this[Nq(0x1bd)]=this[Nq(0x2ee)][Nq(0x1bd)],this['status']=V[Nq(0x1a7)],B(this);})[Nr(0x2a1)](M=>l(M));});}[Nw(0x221)](B){var Nf=Nw;let l;for(l=0x0;l!==this[Nf(0x1bd)]['length'];l+=0x4){if(this['data'][l+0x3]===0x0)continue;[this['data'][l],this[Nf(0x1bd)][l+0x1],this[Nf(0x1bd)][l+0x2]]=B['convert']([this[Nf(0x1bd)][l],this[Nf(0x1bd)][l+0x1],this[Nf(0x1bd)][l+0x2]]);};this[Nf(0x28a)]['putImageData'](this[Nf(0x2ee)],0x0,0x0);}};V[Nw(0x2eb)]=0x0,V[Nw(0x261)]=0x1,V[Nw(0x1a7)]=0x2,m[Nw(0x1e3)]=V;},{'./functions':0xa}],0xa:[function(j,m,N){var KM=T;function K(S,O,E){return O>S&&O<E;};function V(S,b){var NZ=T;S[NZ(0x2e8)]=S[NZ(0x330)]=S['msImageSmoothingEnabled']=S[NZ(0x24a)]=b;};function B(S,b){var No=T;Object[No(0x2c6)](S)[No(0x2b7)](O=>b(S[O],O));};function l(S){var K0=T;document[K0(0x230)][K0(0x30d)](t({'type':K0(0x2d0),'html':S}));};function M(S,b){var K1=T;if(!(K1(0x1de)in window))return;const O=()=>new Notification(S,b);if(Notification['permission']==='granted')O();else Notification['permission']!=='denied'&&Notification[K1(0x319)](E=>{var K2=K1;if(E===K2(0x28d))O();});;};function t(S,b=[]){var K3=T;let O=S['type']==='text'?document['createTextNode'](S[K3(0x1ff)]||''):document[K3(0x2fa)](S[K3(0x1eb)]);S['id']&&O[K3(0x324)]('id',S['id']);S[K3(0x2f9)]&&O[K3(0x324)](K3(0x2f9),S[K3(0x2f9)]);S['style']&&O[K3(0x324)]('style',S['style']);if(S[K3(0x1c7)])O['innerHTML']=S[K3(0x1c7)];else S['text']&&(O['innerText']=S[K3(0x1ff)]);S[K3(0x2cf)]&&Object[K3(0x354)](S[K3(0x2cf)])[K3(0x2b7)](([E,Y])=>{var K4=K3;E[K4(0x2f5)]('on')?O[K4(0x2a0)](E[K4(0x280)](0x2),Y):O[K4(0x2a0)](E,Y);});S[K3(0x213)]&&Object['entries'](S[K3(0x213)])[K3(0x2b7)](([E,Y])=>O[K3(0x324)](E,Y));S[K3(0x28c)]===!![]&&O[K3(0x1c2)]({'mode':K3(0x283)});if(b[K3(0x321)]!==0x0){const E=S['shadow']?O[K3(0x271)]:O;b[K3(0x2b7)](Y=>E[K3(0x30d)](Y));}return O;}function c(S){var K5=T;return S?'On':K5(0x198);};function J(S,b=void 0x0){var K6=T;let O=document[K6(0x2fa)]('a');O['href']=S[K6(0x325)](K6(0x1a2)),O[K6(0x276)]=b,O[K6(0x2c4)]();};function k(S){var K7=T;return document[K7(0x367)](S);};function Q(S){return new Promise((b,O)=>{var K8=T;let E=new Image();E[K8(0x1af)]='',E['onload']=()=>b(E),E[K8(0x2cd)]=O,E[K8(0x1c4)]=S;});};function D(S){var K9=T;return t({'type':K9(0x181)},[t({'type':K9(0x181),'class':K9(0x2fe),'html':K9(0x313)+S+'\x22></img>'})]);};function R(){var Kj=T;let S=![];try{S=window!=window['top']||document!=top[Kj(0x298)]||self[Kj(0x295)]!=top[Kj(0x295)];}catch(b){S=!![];};return S;};function i(S){var Km=T;return window[Km(0x331)]={'imports':{'imported_func':b=>console[Km(0x33e)](b)}},fetch(S)[Km(0x365)](b=>b[Km(0x287)]())[Km(0x365)](b=>WebAssembly[Km(0x289)](b,window[Km(0x331)]));};function d(S,b,O){var KN=T;let E=document[KN(0x2fa)](KN(0x2b4)),Y=E[KN(0x182)]('2d');E[KN(0x1ba)]=b,E[KN(0x1a4)]=O;let P=Y[KN(0x344)](0x0,0x0,b,O);for(let W=0x0;W!==S[KN(0x321)];W++)P[KN(0x1bd)][W]=S[W];return Y['putImageData'](P,0x0,0x0),E;};function p(S,O){var KK=T;return Math[KK(0x35c)](S-0.5+Math[KK(0x1b5)]()*(O-S+0x1));}function v(){var KF=T;return u(KF(0x333));}async function G(S){var KT=T;const b=new FormData();b[KT(0x35f)]('modlist',!![]);const O=await fetch(e+KT(0x222),{'credentials':KT(0x1b3),'method':KT(0x341),'body':b});O['ok']?S(await O['json']()):S([]);}async function h(S,b){var KV=T;const O=new FormData();O[KV(0x35f)]('remmod',S);const E=await fetch(e+KV(0x222),{'credentials':KV(0x1b3),'method':KV(0x341),'body':O});b(E['ok'],await E[KV(0x1ff)]());}function A(){var KB=T;return u(KB(0x20f));}const I=function S(){var Kl=T;if(!window[Kl(0x21a)]||!window[Kl(0x21a)]['shard']||window[Kl(0x295)]['host']===Kl(0x277))return'';const b=window[Kl(0x295)]['host'][Kl(0x34f)]('.');return b[Kl(0x321)]>0x2&&b[Kl(0x20a)](),window[Kl(0x21a)][Kl(0x293)]+'.'+b[Kl(0x351)]('.');}(),e=(I&&window[KM(0x295)][KM(0x31c)]+'//'+I)+KM(0x2ef);async function u(b,O=!![],E=!![]){var Kt=KM;E&&(b=''+e+b);try{const Y=await s(b,{'credentials':O?Kt(0x1b3):Kt(0x296)});return Y['json']();}catch(P){return{'errors':[Kt(0x2f0)]};}}async function s(b,O={}){var Kc=KM;const {timeout:timeout=0x7530}=O,E=new AbortController(),Y=setTimeout(()=>E[Kc(0x2e2)](),timeout),P=await fetch(b,{...O,'signal':E[Kc(0x1b0)]});return clearTimeout(Y),P;}m[KM(0x1e3)]={'between':K,'antialiasing':V,'objForEach':B,'injectCSS':l,'trySendNotification':M,'factory':t,'switcherText':c,'downloadCanvas':J,'$':k,'loadImage':Q,'createPanelButton':D,'isFrame':R,'loadWASM':i,'createCanvasFromData':d,'rand':p,'fetchApiMe':v,'getModList':G,'submitRemMod':h,'banMe':A};},{}],0xb:[function(j,m,N){'use strict';var KJ=T;N['byteLength']=J,N[KJ(0x270)]=Q,N[KJ(0x255)]=d;var K=[],V=[],B=typeof Uint8Array!=='undefined'?Uint8Array:Array,l=KJ(0x307);for(var M=0x0,t=l[KJ(0x321)];M<t;++M){K[M]=l[M],V[l[KJ(0x32d)](M)]=M;}V['-'[KJ(0x32d)](0x0)]=0x3e,V['_'['charCodeAt'](0x0)]=0x3f;function c(p){var Kk=KJ,v=p[Kk(0x321)];if(v%0x4>0x0)throw new Error('Invalid\x20string.\x20Length\x20must\x20be\x20a\x20multiple\x20of\x204');var G=p['indexOf']('=');if(G===-0x1)G=v;var h=G===v?0x0:0x4-G%0x4;return[G,h];}function J(p){var v=c(p),G=v[0x0],h=v[0x1];return(G+h)*0x3/0x4-h;}function k(p,v,G){return(v+G)*0x3/0x4-G;}function Q(p){var KQ=KJ,v,G=c(p),h=G[0x0],A=G[0x1],I=new B(k(p,h,A)),e=0x0,u=A>0x0?h-0x4:h,s;for(s=0x0;s<u;s+=0x4){v=V[p[KQ(0x32d)](s)]<<0x12|V[p[KQ(0x32d)](s+0x1)]<<0xc|V[p[KQ(0x32d)](s+0x2)]<<0x6|V[p[KQ(0x32d)](s+0x3)],I[e++]=v>>0x10&0xff,I[e++]=v>>0x8&0xff,I[e++]=v&0xff;}return A===0x2&&(v=V[p['charCodeAt'](s)]<<0x2|V[p[KQ(0x32d)](s+0x1)]>>0x4,I[e++]=v&0xff),A===0x1&&(v=V[p[KQ(0x32d)](s)]<<0xa|V[p['charCodeAt'](s+0x1)]<<0x4|V[p['charCodeAt'](s+0x2)]>>0x2,I[e++]=v>>0x8&0xff,I[e++]=v&0xff),I;}function D(p){return K[p>>0x12&0x3f]+K[p>>0xc&0x3f]+K[p>>0x6&0x3f]+K[p&0x3f];}function R(p,v,G){var KD=KJ,h,A=[];for(var I=v;I<G;I+=0x3){h=(p[I]<<0x10&0xff0000)+(p[I+0x1]<<0x8&0xff00)+(p[I+0x2]&0xff),A[KD(0x268)](D(h));}return A[KD(0x351)]('');}function d(p){var KR=KJ,v,G=p['length'],h=G%0x3,A=[],I=0x3fff;for(var e=0x0,u=G-h;e<u;e+=I){A['push'](R(p,e,e+I>u?u:e+I));}if(h===0x1)v=p[G-0x1],A['push'](K[v>>0x2]+K[v<<0x4&0x3f]+'==');else h===0x2&&(v=(p[G-0x2]<<0x8)+p[G-0x1],A[KR(0x268)](K[v>>0xa]+K[v>>0x4&0x3f]+K[v<<0x2&0x3f]+'='));return A['join']('');}},{}],0xc:[function(j,m,N){var FI=T;(function(K){/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
'use strict';var Ki=T;var V=j(Ki(0x1be)),B=j(Ki(0x2f7));N[Ki(0x35b)]=K,N['SlowBuffer']=v,N['INSPECT_MAX_BYTES']=0x32;var l=0x7fffffff;N[Ki(0x190)]=l,K['TYPED_ARRAY_SUPPORT']=M();!K['TYPED_ARRAY_SUPPORT']&&typeof console!==Ki(0x2f3)&&typeof console[Ki(0x1e2)]===Ki(0x2b8)&&console[Ki(0x1e2)]('This\x20browser\x20lacks\x20typed\x20array\x20(Uint8Array)\x20support\x20which\x20is\x20required\x20by\x20'+'`buffer`\x20v5.x.\x20Use\x20`buffer`\x20v4.x\x20if\x20you\x20require\x20old\x20browser\x20support.');function M(){var Kd=Ki;try{var j5=new Uint8Array(0x1);return j5[Kd(0x25f)]={'__proto__':Uint8Array[Kd(0x1ef)],'foo':function(){return 0x2a;}},j5[Kd(0x34a)]()===0x2a;}catch(j6){return![];}}Object[Ki(0x260)](K['prototype'],Ki(0x34b),{'enumerable':!![],'get':function(){var Kp=Ki;if(!K[Kp(0x183)](this))return undefined;return this[Kp(0x2bd)];}}),Object[Ki(0x260)](K['prototype'],Ki(0x241),{'enumerable':!![],'get':function(){var Kv=Ki;if(!K[Kv(0x183)](this))return undefined;return this[Kv(0x1dd)];}});function t(j5){var Ky=Ki;if(j5>l)throw new RangeError('The\x20value\x20\x22'+j5+Ky(0x326));var j6=new Uint8Array(j5);return j6['__proto__']=K[Ky(0x1ef)],j6;}function K(j5,j6,j7){var KG=Ki;if(typeof j5===KG(0x26c)){if(typeof j6===KG(0x1d8))throw new TypeError(KG(0x189));return Q(j5);}return c(j5,j6,j7);}typeof Symbol!==Ki(0x2f3)&&Symbol[Ki(0x231)]!=null&&K[Symbol[Ki(0x231)]]===K&&Object[Ki(0x260)](K,Symbol[Ki(0x231)],{'value':null,'configurable':!![],'enumerable':![],'writable':![]});K[Ki(0x248)]=0x2000;function c(j5,j6,j7){var Kh=Ki;if(typeof j5===Kh(0x1d8))return D(j5,j6);if(ArrayBuffer[Kh(0x235)](j5))return R(j5);if(j5==null)throw TypeError(Kh(0x2b3)+Kh(0x27c)+typeof j5);if(j3(j5,ArrayBuffer)||j5&&j3(j5[Kh(0x2bd)],ArrayBuffer))return i(j5,j6,j7);if(typeof j5===Kh(0x26c))throw new TypeError('The\x20\x22value\x22\x20argument\x20must\x20not\x20be\x20of\x20type\x20number.\x20Received\x20type\x20number');var j8=j5[Kh(0x21f)]&&j5['valueOf']();if(j8!=null&&j8!==j5)return K[Kh(0x204)](j8,j6,j7);var j9=d(j5);if(j9)return j9;if(typeof Symbol!==Kh(0x2f3)&&Symbol[Kh(0x2aa)]!=null&&typeof j5[Symbol[Kh(0x2aa)]]===Kh(0x2b8))return K[Kh(0x204)](j5[Symbol[Kh(0x2aa)]](Kh(0x1d8)),j6,j7);throw new TypeError(Kh(0x2b3)+Kh(0x27c)+typeof j5);}K[Ki(0x204)]=function(j5,j6,j7){return c(j5,j6,j7);},K[Ki(0x1ef)][Ki(0x25f)]=Uint8Array[Ki(0x1ef)],K[Ki(0x25f)]=Uint8Array;function J(j5){var KA=Ki;if(typeof j5!=='number')throw new TypeError(KA(0x34c));else{if(j5<0x0)throw new RangeError(KA(0x2af)+j5+KA(0x326));}}function k(j5,j6,j7){var KI=Ki;J(j5);if(j5<=0x0)return t(j5);if(j6!==undefined)return typeof j7===KI(0x1d8)?t(j5)['fill'](j6,j7):t(j5)['fill'](j6);return t(j5);}K[Ki(0x2f2)]=function(j5,j6,j7){return k(j5,j6,j7);};function Q(j5){return J(j5),t(j5<0x0?0x0:p(j5)|0x0);}K[Ki(0x361)]=function(j5){return Q(j5);},K[Ki(0x253)]=function(j5){return Q(j5);};function D(j5,j6){var Ke=Ki;(typeof j6!==Ke(0x1d8)||j6==='')&&(j6=Ke(0x2d5));if(!K[Ke(0x18b)](j6))throw new TypeError(Ke(0x334)+j6);var j7=G(j5,j6)|0x0,j8=t(j7),j9=j8[Ke(0x356)](j5,j6);return j9!==j7&&(j8=j8[Ke(0x1b4)](0x0,j9)),j8;}function R(j5){var Ku=Ki,j6=j5[Ku(0x321)]<0x0?0x0:p(j5[Ku(0x321)])|0x0,j7=t(j6);for(var j8=0x0;j8<j6;j8+=0x1){j7[j8]=j5[j8]&0xff;}return j7;}function i(j5,j6,j7){var Ks=Ki;if(j6<0x0||j5[Ks(0x17f)]<j6)throw new RangeError(Ks(0x355));if(j5[Ks(0x17f)]<j6+(j7||0x0))throw new RangeError('\x22length\x22\x20is\x20outside\x20of\x20buffer\x20bounds');var j8;if(j6===undefined&&j7===undefined)j8=new Uint8Array(j5);else j7===undefined?j8=new Uint8Array(j5,j6):j8=new Uint8Array(j5,j6,j7);return j8[Ks(0x25f)]=K[Ks(0x1ef)],j8;}function d(j5){var KS=Ki;if(K[KS(0x183)](j5)){var j6=p(j5['length'])|0x0,j7=t(j6);if(j7[KS(0x321)]===0x0)return j7;return j5['copy'](j7,0x0,0x0,j6),j7;}if(j5['length']!==undefined){if(typeof j5[KS(0x321)]!==KS(0x26c)||j4(j5[KS(0x321)]))return t(0x0);return R(j5);}if(j5[KS(0x1eb)]===KS(0x35b)&&Array[KS(0x2f1)](j5[KS(0x1bd)]))return R(j5[KS(0x1bd)]);}function p(j5){var Kb=Ki;if(j5>=l)throw new RangeError('Attempt\x20to\x20allocate\x20Buffer\x20larger\x20than\x20maximum\x20'+Kb(0x310)+l[Kb(0x223)](0x10)+Kb(0x1e0));return j5|0x0;}function v(j5){var KO=Ki;return+j5!=j5&&(j5=0x0),K[KO(0x2f2)](+j5);}K[Ki(0x183)]=function j5(j6){var KE=Ki;return j6!=null&&j6[KE(0x1c8)]===!![]&&j6!==K['prototype'];},K[Ki(0x329)]=function j6(j7,j8){var Kx=Ki;if(j3(j7,Uint8Array))j7=K['from'](j7,j7[Kx(0x241)],j7[Kx(0x17f)]);if(j3(j8,Uint8Array))j8=K[Kx(0x204)](j8,j8[Kx(0x241)],j8[Kx(0x17f)]);if(!K['isBuffer'](j7)||!K['isBuffer'](j8))throw new TypeError(Kx(0x30f));if(j7===j8)return 0x0;var j9=j7[Kx(0x321)],jj=j8[Kx(0x321)];for(var jm=0x0,jN=Math[Kx(0x362)](j9,jj);jm<jN;++jm){if(j7[jm]!==j8[jm]){j9=j7[jm],jj=j8[jm];break;}}if(j9<jj)return-0x1;if(jj<j9)return 0x1;return 0x0;},K[Ki(0x18b)]=function j7(j8){var KY=Ki;switch(String(j8)[KY(0x2d9)]()){case KY(0x263):case KY(0x2d5):case'utf-8':case'ascii':case KY(0x207):case'binary':case KY(0x206):case KY(0x34e):case'ucs-2':case KY(0x24f):case KY(0x303):return!![];default:return![];}},K[Ki(0x217)]=function j8(j9,jj){var KP=Ki;if(!Array[KP(0x2f1)](j9))throw new TypeError(KP(0x20d));if(j9[KP(0x321)]===0x0)return K[KP(0x2f2)](0x0);var jm;if(jj===undefined){jj=0x0;for(jm=0x0;jm<j9[KP(0x321)];++jm){jj+=j9[jm][KP(0x321)];}}var jN=K['allocUnsafe'](jj),jK=0x0;for(jm=0x0;jm<j9[KP(0x321)];++jm){var jF=j9[jm];j3(jF,Uint8Array)&&(jF=K[KP(0x204)](jF));if(!K['isBuffer'](jF))throw new TypeError(KP(0x20d));jF[KP(0x1b9)](jN,jK),jK+=jF['length'];}return jN;};function G(j9,jj){var KW=Ki;if(K[KW(0x183)](j9))return j9['length'];if(ArrayBuffer['isView'](j9)||j3(j9,ArrayBuffer))return j9['byteLength'];if(typeof j9!==KW(0x1d8))throw new TypeError(KW(0x18e)+'Received\x20type\x20'+typeof j9);var jm=j9[KW(0x321)],jN=arguments[KW(0x321)]>0x2&&arguments[0x2]===!![];if(!jN&&jm===0x0)return 0x0;var jK=![];for(;;){switch(jj){case KW(0x2dc):case KW(0x207):case KW(0x315):return jm;case KW(0x2d5):case'utf-8':return Z(j9)[KW(0x321)];case'ucs2':case KW(0x216):case KW(0x24f):case KW(0x303):return jm*0x2;case'hex':return jm>>>0x1;case KW(0x206):return j1(j9)[KW(0x321)];default:if(jK)return jN?-0x1:Z(j9)['length'];jj=(''+jj)[KW(0x2d9)](),jK=!![];}}}K['byteLength']=G;function h(j9,jj,jm){var KX=Ki,jN=![];(jj===undefined||jj<0x0)&&(jj=0x0);if(jj>this[KX(0x321)])return'';(jm===undefined||jm>this[KX(0x321)])&&(jm=this[KX(0x321)]);if(jm<=0x0)return'';jm>>>=0x0,jj>>>=0x0;if(jm<=jj)return'';if(!j9)j9=KX(0x2d5);while(!![]){switch(j9){case KX(0x263):return a(this,jj,jm);case KX(0x2d5):case KX(0x205):return P(this,jj,jm);case'ascii':return C(this,jj,jm);case KX(0x207):case'binary':return n(this,jj,jm);case KX(0x206):return Y(this,jj,jm);case KX(0x34e):case KX(0x216):case KX(0x24f):case'utf-16le':return g(this,jj,jm);default:if(jN)throw new TypeError(KX(0x334)+j9);j9=(j9+'')[KX(0x2d9)](),jN=!![];}}}K[Ki(0x1ef)]['_isBuffer']=!![];function A(j9,jj,jm){var jN=j9[jj];j9[jj]=j9[jm],j9[jm]=jN;}K['prototype'][Ki(0x297)]=function j9(){var jj=this['length'];if(jj%0x2!==0x0)throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2016-bits');for(var jm=0x0;jm<jj;jm+=0x2){A(this,jm,jm+0x1);}return this;},K[Ki(0x1ef)][Ki(0x346)]=function jj(){var jm=this['length'];if(jm%0x4!==0x0)throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2032-bits');for(var jN=0x0;jN<jm;jN+=0x4){A(this,jN,jN+0x3),A(this,jN+0x1,jN+0x2);}return this;},K['prototype']['swap64']=function jm(){var KC=Ki,jN=this[KC(0x321)];if(jN%0x8!==0x0)throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2064-bits');for(var jK=0x0;jK<jN;jK+=0x8){A(this,jK,jK+0x7),A(this,jK+0x1,jK+0x6),A(this,jK+0x2,jK+0x5),A(this,jK+0x3,jK+0x4);}return this;},K[Ki(0x1ef)][Ki(0x223)]=function jN(){var Kn=Ki,jK=this[Kn(0x321)];if(jK===0x0)return'';if(arguments[Kn(0x321)]===0x0)return P(this,0x0,jK);return h[Kn(0x1b7)](this,arguments);},K[Ki(0x1ef)][Ki(0x1ce)]=K[Ki(0x1ef)]['toString'],K[Ki(0x1ef)][Ki(0x2c0)]=function jK(jF){if(!K['isBuffer'](jF))throw new TypeError('Argument\x20must\x20be\x20a\x20Buffer');if(this===jF)return!![];return K['compare'](this,jF)===0x0;},K[Ki(0x1ef)]['inspect']=function jF(){var Ka=Ki,jT='',jV=N['INSPECT_MAX_BYTES'];jT=this[Ka(0x223)](Ka(0x263),0x0,jV)['replace'](/(.{2})/g,Ka(0x18f))['trim']();if(this[Ka(0x321)]>jV)jT+=Ka(0x343);return'<Buffer\x20'+jT+'>';},K[Ki(0x1ef)]['compare']=function jT(jV,jB,jl,jM,jt){var Kg=Ki;j3(jV,Uint8Array)&&(jV=K['from'](jV,jV[Kg(0x241)],jV['byteLength']));if(!K[Kg(0x183)](jV))throw new TypeError(Kg(0x1e4)+Kg(0x332)+typeof jV);jB===undefined&&(jB=0x0);jl===undefined&&(jl=jV?jV[Kg(0x321)]:0x0);jM===undefined&&(jM=0x0);jt===undefined&&(jt=this[Kg(0x321)]);if(jB<0x0||jl>jV['length']||jM<0x0||jt>this['length'])throw new RangeError(Kg(0x278));if(jM>=jt&&jB>=jl)return 0x0;if(jM>=jt)return-0x1;if(jB>=jl)return 0x1;jB>>>=0x0,jl>>>=0x0,jM>>>=0x0,jt>>>=0x0;if(this===jV)return 0x0;var jc=jt-jM,jJ=jl-jB,jk=Math[Kg(0x362)](jc,jJ),jQ=this['slice'](jM,jt),jD=jV['slice'](jB,jl);for(var jR=0x0;jR<jk;++jR){if(jQ[jR]!==jD[jR]){jc=jQ[jR],jJ=jD[jR];break;}}if(jc<jJ)return-0x1;if(jJ<jc)return 0x1;return 0x0;};function I(jV,jB,jl,jM,jt){var KH=Ki;if(jV[KH(0x321)]===0x0)return-0x1;if(typeof jl===KH(0x1d8))jM=jl,jl=0x0;else{if(jl>0x7fffffff)jl=0x7fffffff;else jl<-0x80000000&&(jl=-0x80000000);}jl=+jl;j4(jl)&&(jl=jt?0x0:jV[KH(0x321)]-0x1);if(jl<0x0)jl=jV[KH(0x321)]+jl;if(jl>=jV[KH(0x321)]){if(jt)return-0x1;else jl=jV['length']-0x1;}else{if(jl<0x0){if(jt)jl=0x0;else return-0x1;}}typeof jB===KH(0x1d8)&&(jB=K[KH(0x204)](jB,jM));if(K[KH(0x183)](jB)){if(jB[KH(0x321)]===0x0)return-0x1;return e(jV,jB,jl,jM,jt);}else{if(typeof jB==='number'){jB=jB&0xff;if(typeof Uint8Array[KH(0x1ef)]['indexOf']===KH(0x2b8))return jt?Uint8Array[KH(0x1ef)][KH(0x363)][KH(0x2db)](jV,jB,jl):Uint8Array[KH(0x1ef)][KH(0x2a9)]['call'](jV,jB,jl);return e(jV,[jB],jl,jM,jt);}}throw new TypeError(KH(0x274));}function e(jV,jB,jl,jM,jt){var Kw=Ki,jc=0x1,jJ=jV[Kw(0x321)],jk=jB[Kw(0x321)];if(jM!==undefined){jM=String(jM)[Kw(0x2d9)]();if(jM===Kw(0x34e)||jM==='ucs-2'||jM===Kw(0x24f)||jM===Kw(0x303)){if(jV[Kw(0x321)]<0x2||jB[Kw(0x321)]<0x2)return-0x1;jc=0x2,jJ/=0x2,jk/=0x2,jl/=0x2;}}function jQ(jp,jv){var KL=Kw;return jc===0x1?jp[jv]:jp[KL(0x184)](jv*jc);}var jD;if(jt){var jR=-0x1;for(jD=jl;jD<jJ;jD++){if(jQ(jV,jD)===jQ(jB,jR===-0x1?0x0:jD-jR)){if(jR===-0x1)jR=jD;if(jD-jR+0x1===jk)return jR*jc;}else{if(jR!==-0x1)jD-=jD-jR;jR=-0x1;}}}else{if(jl+jk>jJ)jl=jJ-jk;for(jD=jl;jD>=0x0;jD--){var ji=!![];for(var jd=0x0;jd<jk;jd++){if(jQ(jV,jD+jd)!==jQ(jB,jd)){ji=![];break;}}if(ji)return jD;}}return-0x1;}K[Ki(0x1ef)][Ki(0x35e)]=function jV(jB,jl,jM){var Kz=Ki;return this[Kz(0x363)](jB,jl,jM)!==-0x1;},K['prototype'][Ki(0x363)]=function jB(jl,jM,jt){return I(this,jl,jM,jt,!![]);},K[Ki(0x1ef)][Ki(0x2a9)]=function jl(jM,jt,jc){return I(this,jM,jt,jc,![]);};function u(jM,jt,jc,jJ){var KU=Ki;jc=Number(jc)||0x0;var jk=jM[KU(0x321)]-jc;!jJ?jJ=jk:(jJ=Number(jJ),jJ>jk&&(jJ=jk));var jQ=jt[KU(0x321)];jJ>jQ/0x2&&(jJ=jQ/0x2);for(var jD=0x0;jD<jJ;++jD){var jR=parseInt(jt['substr'](jD*0x2,0x2),0x10);if(j4(jR))return jD;jM[jc+jD]=jR;}return jD;}function s(jM,jt,jc,jJ){return j2(Z(jt,jM['length']-jc),jM,jc,jJ);}function S(jM,jt,jc,jJ){return j2(o(jt),jM,jc,jJ);}function b(jM,jt,jc,jJ){return S(jM,jt,jc,jJ);}function O(jM,jt,jc,jJ){return j2(j1(jt),jM,jc,jJ);}function E(jM,jt,jc,jJ){var Kr=Ki;return j2(j0(jt,jM[Kr(0x321)]-jc),jM,jc,jJ);}K[Ki(0x1ef)]['write']=function jM(jt,jc,jJ,jk){var Kq=Ki;if(jc===undefined)jk=Kq(0x2d5),jJ=this[Kq(0x321)],jc=0x0;else{if(jJ===undefined&&typeof jc===Kq(0x1d8))jk=jc,jJ=this[Kq(0x321)],jc=0x0;else{if(isFinite(jc)){jc=jc>>>0x0;if(isFinite(jJ)){jJ=jJ>>>0x0;if(jk===undefined)jk=Kq(0x2d5);}else jk=jJ,jJ=undefined;}else throw new Error('Buffer.write(string,\x20encoding,\x20offset[,\x20length])\x20is\x20no\x20longer\x20supported');}}var jQ=this[Kq(0x321)]-jc;if(jJ===undefined||jJ>jQ)jJ=jQ;if(jt[Kq(0x321)]>0x0&&(jJ<0x0||jc<0x0)||jc>this[Kq(0x321)])throw new RangeError('Attempt\x20to\x20write\x20outside\x20buffer\x20bounds');if(!jk)jk='utf8';var jD=![];for(;;){switch(jk){case'hex':return u(this,jt,jc,jJ);case Kq(0x2d5):case Kq(0x205):return s(this,jt,jc,jJ);case Kq(0x2dc):return S(this,jt,jc,jJ);case Kq(0x207):case Kq(0x315):return b(this,jt,jc,jJ);case Kq(0x206):return O(this,jt,jc,jJ);case'ucs2':case Kq(0x216):case Kq(0x24f):case Kq(0x303):return E(this,jt,jc,jJ);default:if(jD)throw new TypeError(Kq(0x334)+jk);jk=(''+jk)[Kq(0x2d9)](),jD=!![];}}},K['prototype']['toJSON']=function jt(){var Kf=Ki;return{'type':Kf(0x35b),'data':Array[Kf(0x1ef)][Kf(0x1b4)][Kf(0x2db)](this[Kf(0x27a)]||this,0x0)};};function Y(jc,jJ,jk){var KZ=Ki;return jJ===0x0&&jk===jc['length']?V[KZ(0x255)](jc):V[KZ(0x255)](jc[KZ(0x1b4)](jJ,jk));}function P(jc,jJ,jk){var Ko=Ki;jk=Math[Ko(0x362)](jc[Ko(0x321)],jk);var jQ=[],jD=jJ;while(jD<jk){var jR=jc[jD],ji=null,jd=jR>0xef?0x4:jR>0xdf?0x3:jR>0xbf?0x2:0x1;if(jD+jd<=jk){var jp,jv,jy,jG;switch(jd){case 0x1:jR<0x80&&(ji=jR);break;case 0x2:jp=jc[jD+0x1];(jp&0xc0)===0x80&&(jG=(jR&0x1f)<<0x6|jp&0x3f,jG>0x7f&&(ji=jG));break;case 0x3:jp=jc[jD+0x1],jv=jc[jD+0x2];(jp&0xc0)===0x80&&(jv&0xc0)===0x80&&(jG=(jR&0xf)<<0xc|(jp&0x3f)<<0x6|jv&0x3f,jG>0x7ff&&(jG<0xd800||jG>0xdfff)&&(ji=jG));break;case 0x4:jp=jc[jD+0x1],jv=jc[jD+0x2],jy=jc[jD+0x3];(jp&0xc0)===0x80&&(jv&0xc0)===0x80&&(jy&0xc0)===0x80&&(jG=(jR&0xf)<<0x12|(jp&0x3f)<<0xc|(jv&0x3f)<<0x6|jy&0x3f,jG>0xffff&&jG<0x110000&&(ji=jG));}}if(ji===null)ji=0xfffd,jd=0x1;else ji>0xffff&&(ji-=0x10000,jQ['push'](ji>>>0xa&0x3ff|0xd800),ji=0xdc00|ji&0x3ff);jQ[Ko(0x268)](ji),jD+=jd;}return X(jQ);}var W=0x1000;function X(jc){var F0=Ki,jJ=jc['length'];if(jJ<=W)return String['fromCharCode'][F0(0x1b7)](String,jc);var jk='',jQ=0x0;while(jQ<jJ){jk+=String[F0(0x20c)][F0(0x1b7)](String,jc[F0(0x1b4)](jQ,jQ+=W));}return jk;}function C(jc,jJ,jk){var F1=Ki,jQ='';jk=Math[F1(0x362)](jc['length'],jk);for(var jD=jJ;jD<jk;++jD){jQ+=String[F1(0x20c)](jc[jD]&0x7f);}return jQ;}function n(jc,jJ,jk){var F2=Ki,jQ='';jk=Math['min'](jc[F2(0x321)],jk);for(var jD=jJ;jD<jk;++jD){jQ+=String[F2(0x20c)](jc[jD]);}return jQ;}function a(jc,jJ,jk){var F3=Ki,jQ=jc[F3(0x321)];if(!jJ||jJ<0x0)jJ=0x0;if(!jk||jk<0x0||jk>jQ)jk=jQ;var jD='';for(var jR=jJ;jR<jk;++jR){jD+=f(jc[jR]);}return jD;}function g(jc,jJ,jk){var F4=Ki,jQ=jc[F4(0x1b4)](jJ,jk),jD='';for(var jR=0x0;jR<jQ[F4(0x321)];jR+=0x2){jD+=String['fromCharCode'](jQ[jR]+jQ[jR+0x1]*0x100);}return jD;}K[Ki(0x1ef)][Ki(0x1b4)]=function jc(jJ,jk){var F5=Ki,jQ=this[F5(0x321)];jJ=~~jJ,jk=jk===undefined?jQ:~~jk;if(jJ<0x0){jJ+=jQ;if(jJ<0x0)jJ=0x0;}else jJ>jQ&&(jJ=jQ);if(jk<0x0){jk+=jQ;if(jk<0x0)jk=0x0;}else jk>jQ&&(jk=jQ);if(jk<jJ)jk=jJ;var jD=this[F5(0x1f3)](jJ,jk);return jD['__proto__']=K[F5(0x1ef)],jD;};function H(jJ,jk,jQ){var F6=Ki;if(jJ%0x1!==0x0||jJ<0x0)throw new RangeError(F6(0x1a6));if(jJ+jk>jQ)throw new RangeError('Trying\x20to\x20access\x20beyond\x20buffer\x20length');}K[Ki(0x1ef)][Ki(0x320)]=function jJ(jk,jQ,jD){jk=jk>>>0x0,jQ=jQ>>>0x0;if(!jD)H(jk,jQ,this['length']);var jR=this[jk],ji=0x1,jd=0x0;while(++jd<jQ&&(ji*=0x100)){jR+=this[jk+jd]*ji;}return jR;},K[Ki(0x1ef)]['readUIntBE']=function jk(jQ,jD,jR){var F7=Ki;jQ=jQ>>>0x0,jD=jD>>>0x0;!jR&&H(jQ,jD,this[F7(0x321)]);var ji=this[jQ+--jD],jd=0x1;while(jD>0x0&&(jd*=0x100)){ji+=this[jQ+--jD]*jd;}return ji;},K[Ki(0x1ef)][Ki(0x22e)]=function jQ(jD,jR){jD=jD>>>0x0;if(!jR)H(jD,0x1,this['length']);return this[jD];},K[Ki(0x1ef)][Ki(0x2a2)]=function jD(jR,ji){var F8=Ki;jR=jR>>>0x0;if(!ji)H(jR,0x2,this[F8(0x321)]);return this[jR]|this[jR+0x1]<<0x8;},K[Ki(0x1ef)][Ki(0x184)]=function jR(ji,jd){ji=ji>>>0x0;if(!jd)H(ji,0x2,this['length']);return this[ji]<<0x8|this[ji+0x1];},K[Ki(0x1ef)]['readUInt32LE']=function ji(jd,jp){var F9=Ki;jd=jd>>>0x0;if(!jp)H(jd,0x4,this[F9(0x321)]);return(this[jd]|this[jd+0x1]<<0x8|this[jd+0x2]<<0x10)+this[jd+0x3]*0x1000000;},K[Ki(0x1ef)]['readUInt32BE']=function jd(jp,jv){var Fj=Ki;jp=jp>>>0x0;if(!jv)H(jp,0x4,this[Fj(0x321)]);return this[jp]*0x1000000+(this[jp+0x1]<<0x10|this[jp+0x2]<<0x8|this[jp+0x3]);},K[Ki(0x1ef)][Ki(0x350)]=function jp(jv,jy,jG){var Fm=Ki;jv=jv>>>0x0,jy=jy>>>0x0;if(!jG)H(jv,jy,this[Fm(0x321)]);var jh=this[jv],jA=0x1,jI=0x0;while(++jI<jy&&(jA*=0x100)){jh+=this[jv+jI]*jA;}jA*=0x80;if(jh>=jA)jh-=Math[Fm(0x2a8)](0x2,0x8*jy);return jh;},K['prototype'][Ki(0x1c5)]=function jv(jy,jG,jh){var FN=Ki;jy=jy>>>0x0,jG=jG>>>0x0;if(!jh)H(jy,jG,this[FN(0x321)]);var jA=jG,jI=0x1,je=this[jy+--jA];while(jA>0x0&&(jI*=0x100)){je+=this[jy+--jA]*jI;}jI*=0x80;if(je>=jI)je-=Math['pow'](0x2,0x8*jG);return je;},K['prototype']['readInt8']=function jy(jG,jh){jG=jG>>>0x0;if(!jh)H(jG,0x1,this['length']);if(!(this[jG]&0x80))return this[jG];return(0xff-this[jG]+0x1)*-0x1;},K['prototype']['readInt16LE']=function jG(jh,jA){var FK=Ki;jh=jh>>>0x0;if(!jA)H(jh,0x2,this[FK(0x321)]);var jI=this[jh]|this[jh+0x1]<<0x8;return jI&0x8000?jI|0xffff0000:jI;},K[Ki(0x1ef)]['readInt16BE']=function jh(jA,jI){jA=jA>>>0x0;if(!jI)H(jA,0x2,this['length']);var je=this[jA+0x1]|this[jA]<<0x8;return je&0x8000?je|0xffff0000:je;},K[Ki(0x1ef)][Ki(0x24d)]=function jA(jI,je){var FF=Ki;jI=jI>>>0x0;if(!je)H(jI,0x4,this[FF(0x321)]);return this[jI]|this[jI+0x1]<<0x8|this[jI+0x2]<<0x10|this[jI+0x3]<<0x18;},K[Ki(0x1ef)]['readInt32BE']=function jI(je,ju){var FT=Ki;je=je>>>0x0;if(!ju)H(je,0x4,this[FT(0x321)]);return this[je]<<0x18|this[je+0x1]<<0x10|this[je+0x2]<<0x8|this[je+0x3];},K[Ki(0x1ef)][Ki(0x1a8)]=function je(ju,js){var FV=Ki;ju=ju>>>0x0;if(!js)H(ju,0x4,this[FV(0x321)]);return B[FV(0x2be)](this,ju,!![],0x17,0x4);},K[Ki(0x1ef)]['readFloatBE']=function ju(js,jS){js=js>>>0x0;if(!jS)H(js,0x4,this['length']);return B['read'](this,js,![],0x17,0x4);},K[Ki(0x1ef)][Ki(0x238)]=function js(jS,jb){var FB=Ki;jS=jS>>>0x0;if(!jb)H(jS,0x8,this['length']);return B[FB(0x2be)](this,jS,!![],0x34,0x8);},K['prototype'][Ki(0x311)]=function jS(jb,jO){var Fl=Ki;jb=jb>>>0x0;if(!jO)H(jb,0x8,this['length']);return B[Fl(0x2be)](this,jb,![],0x34,0x8);};function w(jb,jO,jE,jx,jY,jP){var FM=Ki;if(!K[FM(0x183)](jb))throw new TypeError(FM(0x282));if(jO>jY||jO<jP)throw new RangeError('\x22value\x22\x20argument\x20is\x20out\x20of\x20bounds');if(jE+jx>jb[FM(0x321)])throw new RangeError(FM(0x17d));}K['prototype'][Ki(0x2fc)]=function jb(jO,jE,jx,jY){jO=+jO,jE=jE>>>0x0,jx=jx>>>0x0;if(!jY){var jP=Math['pow'](0x2,0x8*jx)-0x1;w(this,jO,jE,jx,jP,0x0);}var jW=0x1,jX=0x0;this[jE]=jO&0xff;while(++jX<jx&&(jW*=0x100)){this[jE+jX]=jO/jW&0xff;}return jE+jx;},K[Ki(0x1ef)][Ki(0x19e)]=function jO(jE,jx,jY,jP){var Ft=Ki;jE=+jE,jx=jx>>>0x0,jY=jY>>>0x0;if(!jP){var jW=Math[Ft(0x2a8)](0x2,0x8*jY)-0x1;w(this,jE,jx,jY,jW,0x0);}var jX=jY-0x1,jC=0x1;this[jx+jX]=jE&0xff;while(--jX>=0x0&&(jC*=0x100)){this[jx+jX]=jE/jC&0xff;}return jx+jY;},K[Ki(0x1ef)][Ki(0x1ab)]=function jE(jx,jY,jP){jx=+jx,jY=jY>>>0x0;if(!jP)w(this,jx,jY,0x1,0xff,0x0);return this[jY]=jx&0xff,jY+0x1;},K['prototype'][Ki(0x25d)]=function jx(jY,jP,jW){jY=+jY,jP=jP>>>0x0;if(!jW)w(this,jY,jP,0x2,0xffff,0x0);return this[jP]=jY&0xff,this[jP+0x1]=jY>>>0x8,jP+0x2;},K[Ki(0x1ef)]['writeUInt16BE']=function jY(jP,jW,jX){jP=+jP,jW=jW>>>0x0;if(!jX)w(this,jP,jW,0x2,0xffff,0x0);return this[jW]=jP>>>0x8,this[jW+0x1]=jP&0xff,jW+0x2;},K[Ki(0x1ef)][Ki(0x214)]=function jP(jW,jX,jC){jW=+jW,jX=jX>>>0x0;if(!jC)w(this,jW,jX,0x4,0xffffffff,0x0);return this[jX+0x3]=jW>>>0x18,this[jX+0x2]=jW>>>0x10,this[jX+0x1]=jW>>>0x8,this[jX]=jW&0xff,jX+0x4;},K[Ki(0x1ef)][Ki(0x26e)]=function jW(jX,jC,jn){jX=+jX,jC=jC>>>0x0;if(!jn)w(this,jX,jC,0x4,0xffffffff,0x0);return this[jC]=jX>>>0x18,this[jC+0x1]=jX>>>0x10,this[jC+0x2]=jX>>>0x8,this[jC+0x3]=jX&0xff,jC+0x4;},K[Ki(0x1ef)][Ki(0x211)]=function jX(jC,jn,ja,jg){var Fc=Ki;jC=+jC,jn=jn>>>0x0;if(!jg){var jH=Math[Fc(0x2a8)](0x2,0x8*ja-0x1);w(this,jC,jn,ja,jH-0x1,-jH);}var jw=0x0,jL=0x1,jz=0x0;this[jn]=jC&0xff;while(++jw<ja&&(jL*=0x100)){jC<0x0&&jz===0x0&&this[jn+jw-0x1]!==0x0&&(jz=0x1),this[jn+jw]=(jC/jL>>0x0)-jz&0xff;}return jn+ja;},K[Ki(0x1ef)][Ki(0x1ed)]=function jC(jn,ja,jg,jH){var FJ=Ki;jn=+jn,ja=ja>>>0x0;if(!jH){var jw=Math[FJ(0x2a8)](0x2,0x8*jg-0x1);w(this,jn,ja,jg,jw-0x1,-jw);}var jL=jg-0x1,jz=0x1,jU=0x0;this[ja+jL]=jn&0xff;while(--jL>=0x0&&(jz*=0x100)){jn<0x0&&jU===0x0&&this[ja+jL+0x1]!==0x0&&(jU=0x1),this[ja+jL]=(jn/jz>>0x0)-jU&0xff;}return ja+jg;},K[Ki(0x1ef)]['writeInt8']=function jn(ja,jg,jH){ja=+ja,jg=jg>>>0x0;if(!jH)w(this,ja,jg,0x1,0x7f,-0x80);if(ja<0x0)ja=0xff+ja+0x1;return this[jg]=ja&0xff,jg+0x1;},K[Ki(0x1ef)]['writeInt16LE']=function ja(jg,jH,jw){jg=+jg,jH=jH>>>0x0;if(!jw)w(this,jg,jH,0x2,0x7fff,-0x8000);return this[jH]=jg&0xff,this[jH+0x1]=jg>>>0x8,jH+0x2;},K[Ki(0x1ef)][Ki(0x2d7)]=function jg(jH,jw,jL){jH=+jH,jw=jw>>>0x0;if(!jL)w(this,jH,jw,0x2,0x7fff,-0x8000);return this[jw]=jH>>>0x8,this[jw+0x1]=jH&0xff,jw+0x2;},K['prototype'][Ki(0x2f6)]=function jH(jw,jL,jz){jw=+jw,jL=jL>>>0x0;if(!jz)w(this,jw,jL,0x4,0x7fffffff,-0x80000000);return this[jL]=jw&0xff,this[jL+0x1]=jw>>>0x8,this[jL+0x2]=jw>>>0x10,this[jL+0x3]=jw>>>0x18,jL+0x4;},K[Ki(0x1ef)][Ki(0x19c)]=function jw(jL,jz,jU){jL=+jL,jz=jz>>>0x0;if(!jU)w(this,jL,jz,0x4,0x7fffffff,-0x80000000);if(jL<0x0)jL=0xffffffff+jL+0x1;return this[jz]=jL>>>0x18,this[jz+0x1]=jL>>>0x10,this[jz+0x2]=jL>>>0x8,this[jz+0x3]=jL&0xff,jz+0x4;};function L(jL,jz,jU,jr,jq,jf){var Fk=Ki;if(jU+jr>jL[Fk(0x321)])throw new RangeError(Fk(0x17d));if(jU<0x0)throw new RangeError(Fk(0x17d));}function z(jL,jz,jU,jr,jq){return jz=+jz,jU=jU>>>0x0,!jq&&L(jL,jz,jU,0x4,0xffffff00000000000000000000000000,-0xffffff00000000000000000000000000),B['write'](jL,jz,jU,jr,0x17,0x4),jU+0x4;}K[Ki(0x1ef)][Ki(0x1d4)]=function jL(jz,jU,jr){return z(this,jz,jU,!![],jr);},K[Ki(0x1ef)]['writeFloatBE']=function jz(jU,jr,jq){return z(this,jU,jr,![],jq);};function U(jU,jr,jq,jf,jZ){var FQ=Ki;return jr=+jr,jq=jq>>>0x0,!jZ&&L(jU,jr,jq,0x8,0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,-0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),B[FQ(0x356)](jU,jr,jq,jf,0x34,0x8),jq+0x8;}K[Ki(0x1ef)][Ki(0x23c)]=function jU(jr,jq,jf){return U(this,jr,jq,!![],jf);},K[Ki(0x1ef)]['writeDoubleBE']=function jr(jq,jf,jZ){return U(this,jq,jf,![],jZ);},K[Ki(0x1ef)][Ki(0x1b9)]=function jq(jf,jZ,jo,m0){var FD=Ki;if(!K['isBuffer'](jf))throw new TypeError(FD(0x31b));if(!jo)jo=0x0;if(!m0&&m0!==0x0)m0=this['length'];if(jZ>=jf[FD(0x321)])jZ=jf[FD(0x321)];if(!jZ)jZ=0x0;if(m0>0x0&&m0<jo)m0=jo;if(m0===jo)return 0x0;if(jf[FD(0x321)]===0x0||this['length']===0x0)return 0x0;if(jZ<0x0)throw new RangeError(FD(0x27f));if(jo<0x0||jo>=this['length'])throw new RangeError(FD(0x17d));if(m0<0x0)throw new RangeError('sourceEnd\x20out\x20of\x20bounds');if(m0>this[FD(0x321)])m0=this[FD(0x321)];jf[FD(0x321)]-jZ<m0-jo&&(m0=jf[FD(0x321)]-jZ+jo);var m1=m0-jo;if(this===jf&&typeof Uint8Array[FD(0x1ef)][FD(0x33a)]===FD(0x2b8))this['copyWithin'](jZ,jo,m0);else{if(this===jf&&jo<jZ&&jZ<m0)for(var m2=m1-0x1;m2>=0x0;--m2){jf[m2+jZ]=this[m2+jo];}else Uint8Array[FD(0x1ef)][FD(0x292)][FD(0x2db)](jf,this[FD(0x1f3)](jo,m0),jZ);}return m1;},K[Ki(0x1ef)][Ki(0x197)]=function jf(jZ,jo,m0,m1){var FR=Ki;if(typeof jZ===FR(0x1d8)){if(typeof jo===FR(0x1d8))m1=jo,jo=0x0,m0=this[FR(0x321)];else typeof m0===FR(0x1d8)&&(m1=m0,m0=this[FR(0x321)]);if(m1!==undefined&&typeof m1!=='string')throw new TypeError('encoding\x20must\x20be\x20a\x20string');if(typeof m1===FR(0x1d8)&&!K[FR(0x18b)](m1))throw new TypeError('Unknown\x20encoding:\x20'+m1);if(jZ[FR(0x321)]===0x1){var m2=jZ[FR(0x32d)](0x0);(m1===FR(0x2d5)&&m2<0x80||m1===FR(0x207))&&(jZ=m2);}}else typeof jZ===FR(0x26c)&&(jZ=jZ&0xff);if(jo<0x0||this[FR(0x321)]<jo||this[FR(0x321)]<m0)throw new RangeError(FR(0x28f));if(m0<=jo)return this;jo=jo>>>0x0,m0=m0===undefined?this[FR(0x321)]:m0>>>0x0;if(!jZ)jZ=0x0;var m3;if(typeof jZ==='number')for(m3=jo;m3<m0;++m3){this[m3]=jZ;}else{var m4=K[FR(0x183)](jZ)?jZ:K['from'](jZ,m1),m5=m4[FR(0x321)];if(m5===0x0)throw new TypeError(FR(0x2af)+jZ+FR(0x1fd));for(m3=0x0;m3<m0-jo;++m3){this[m3+jo]=m4[m3%m5];}}return this;};var r=/[^+/0-9A-Za-z-_]/g;function q(jZ){var Fi=Ki;jZ=jZ[Fi(0x34f)]('=')[0x0],jZ=jZ[Fi(0x1cd)]()[Fi(0x2ba)](r,'');if(jZ['length']<0x2)return'';while(jZ['length']%0x4!==0x0){jZ=jZ+'=';}return jZ;}function f(jZ){var Fd=Ki;if(jZ<0x10)return'0'+jZ['toString'](0x10);return jZ[Fd(0x223)](0x10);}function Z(jZ,jo){var Fp=Ki;jo=jo||Infinity;var m0,m1=jZ[Fp(0x321)],m2=null,m3=[];for(var m4=0x0;m4<m1;++m4){m0=jZ[Fp(0x32d)](m4);if(m0>0xd7ff&&m0<0xe000){if(!m2){if(m0>0xdbff){if((jo-=0x3)>-0x1)m3[Fp(0x268)](0xef,0xbf,0xbd);continue;}else{if(m4+0x1===m1){if((jo-=0x3)>-0x1)m3[Fp(0x268)](0xef,0xbf,0xbd);continue;}}m2=m0;continue;}if(m0<0xdc00){if((jo-=0x3)>-0x1)m3['push'](0xef,0xbf,0xbd);m2=m0;continue;}m0=(m2-0xd800<<0xa|m0-0xdc00)+0x10000;}else{if(m2){if((jo-=0x3)>-0x1)m3[Fp(0x268)](0xef,0xbf,0xbd);}}m2=null;if(m0<0x80){if((jo-=0x1)<0x0)break;m3['push'](m0);}else{if(m0<0x800){if((jo-=0x2)<0x0)break;m3[Fp(0x268)](m0>>0x6|0xc0,m0&0x3f|0x80);}else{if(m0<0x10000){if((jo-=0x3)<0x0)break;m3[Fp(0x268)](m0>>0xc|0xe0,m0>>0x6&0x3f|0x80,m0&0x3f|0x80);}else{if(m0<0x110000){if((jo-=0x4)<0x0)break;m3['push'](m0>>0x12|0xf0,m0>>0xc&0x3f|0x80,m0>>0x6&0x3f|0x80,m0&0x3f|0x80);}else throw new Error(Fp(0x33c));}}}}return m3;}function o(jZ){var Fv=Ki,jo=[];for(var m0=0x0;m0<jZ[Fv(0x321)];++m0){jo[Fv(0x268)](jZ[Fv(0x32d)](m0)&0xff);}return jo;}function j0(jZ,jo){var Fy=Ki,m0,m1,m2,m3=[];for(var m4=0x0;m4<jZ['length'];++m4){if((jo-=0x2)<0x0)break;m0=jZ[Fy(0x32d)](m4),m1=m0>>0x8,m2=m0%0x100,m3[Fy(0x268)](m2),m3[Fy(0x268)](m1);}return m3;}function j1(jZ){var FG=Ki;return V[FG(0x270)](q(jZ));}function j2(jZ,jo,m0,m1){var Fh=Ki;for(var m2=0x0;m2<m1;++m2){if(m2+m0>=jo[Fh(0x321)]||m2>=jZ[Fh(0x321)])break;jo[m2+m0]=jZ[m2];}return m2;}function j3(jZ,jo){var FA=Ki;return jZ instanceof jo||jZ!=null&&jZ['constructor']!=null&&jZ[FA(0x229)]['name']!=null&&jZ[FA(0x229)][FA(0x305)]===jo[FA(0x305)];}function j4(jZ){return jZ!==jZ;}}[FI(0x2db)](this,j('buffer')[FI(0x35b)]));},{'base64-js':0xb,'buffer':0xc,'ieee754':0xd}],0xd:[function(j,m,N){var Fe=T;N[Fe(0x2be)]=function(K,V,B,l,M){var Fu=Fe,t,c,J=M*0x8-l-0x1,k=(0x1<<J)-0x1,Q=k>>0x1,D=-0x7,R=B?M-0x1:0x0,p=B?-0x1:0x1,v=K[V+R];R+=p,t=v&(0x1<<-D)-0x1,v>>=-D,D+=J;for(;D>0x0;t=t*0x100+K[V+R],R+=p,D-=0x8){}c=t&(0x1<<-D)-0x1,t>>=-D,D+=l;for(;D>0x0;c=c*0x100+K[V+R],R+=p,D-=0x8){}if(t===0x0)t=0x1-Q;else{if(t===k)return c?NaN:(v?-0x1:0x1)*Infinity;else c=c+Math[Fu(0x2a8)](0x2,l),t=t-Q;}return(v?-0x1:0x1)*c*Math[Fu(0x2a8)](0x2,t-l);},N[Fe(0x356)]=function(K,V,B,l,M,t){var Fs=Fe,J,k,Q,D=t*0x8-M-0x1,R=(0x1<<D)-0x1,p=R>>0x1,v=M===0x17?Math[Fs(0x2a8)](0x2,-0x18)-Math['pow'](0x2,-0x4d):0x0,G=l?0x0:t-0x1,h=l?0x1:-0x1,A=V<0x0||V===0x0&&0x1/V<0x0?0x1:0x0;V=Math['abs'](V);if(isNaN(V)||V===Infinity)k=isNaN(V)?0x1:0x0,J=R;else{J=Math[Fs(0x2a4)](Math[Fs(0x33e)](V)/Math[Fs(0x291)]);V*(Q=Math[Fs(0x2a8)](0x2,-J))<0x1&&(J--,Q*=0x2);J+p>=0x1?V+=v/Q:V+=v*Math[Fs(0x2a8)](0x2,0x1-p);V*Q>=0x2&&(J++,Q/=0x2);if(J+p>=R)k=0x0,J=R;else J+p>=0x1?(k=(V*Q-0x1)*Math[Fs(0x2a8)](0x2,M),J=J+p):(k=V*Math[Fs(0x2a8)](0x2,p-0x1)*Math['pow'](0x2,M),J=0x0);}for(;M>=0x8;K[B+G]=k&0xff,G+=h,k/=0x100,M-=0x8){}J=J<<M|k,D+=M;for(;D>0x0;K[B+G]=J&0xff,G+=h,J/=0x100,D-=0x8){}K[B+G-h]|=A*0x80;};},{}],0xe:[function(j,m,N){(function(K){'use strict';var FO=T;function V(l){var FS=T;if(!(this instanceof V))return new V(l);var M=l[FS(0x1ba)],t=l[FS(0x1a4)],c=[[-0x1,0x0,0x1],[-0x2,0x0,0x2],[-0x1,0x0,0x1]],J=[[-0x1,-0x2,-0x1],[0x0,0x0,0x0],[0x1,0x2,0x1]],k=[],Q=[];function D(S){return function(O,E,Y){return Y=Y||0x0,S[(M*E+O)*0x4+Y];};}var R=l['data'],i=D(R),d,p;for(p=0x0;p<t;p++){for(d=0x0;d<M;d++){var v=i(d,p,0x0),G=i(d,p,0x1),h=i(d,p,0x2),A=(v+G+h)/0x3;Q[FS(0x268)](A,A,A,0xff);}}i=D(Q);for(p=0x0;p<t;p++){for(d=0x0;d<M;d++){var I=c[0x0][0x0]*i(d-0x1,p-0x1)+c[0x0][0x1]*i(d,p-0x1)+c[0x0][0x2]*i(d+0x1,p-0x1)+c[0x1][0x0]*i(d-0x1,p)+c[0x1][0x1]*i(d,p)+c[0x1][0x2]*i(d+0x1,p)+c[0x2][0x0]*i(d-0x1,p+0x1)+c[0x2][0x1]*i(d,p+0x1)+c[0x2][0x2]*i(d+0x1,p+0x1),e=J[0x0][0x0]*i(d-0x1,p-0x1)+J[0x0][0x1]*i(d,p-0x1)+J[0x0][0x2]*i(d+0x1,p-0x1)+J[0x1][0x0]*i(d-0x1,p)+J[0x1][0x1]*i(d,p)+J[0x1][0x2]*i(d+0x1,p)+J[0x2][0x0]*i(d-0x1,p+0x1)+J[0x2][0x1]*i(d,p+0x1)+J[0x2][0x2]*i(d+0x1,p+0x1),u=Math[FS(0x202)](I*I+e*e)>>>0x0;k[FS(0x268)](u,u,u,0xff);}}var s=k;return typeof Uint8ClampedArray===FS(0x2b8)&&(s=new Uint8ClampedArray(k)),s[FS(0x200)]=function(){var Fb=FS;return V[Fb(0x200)](s,M,t);},s;}V[FO(0x200)]=function l(M,t,c){var FE=FO;if(typeof ImageData===FE(0x2b8)&&Object[FE(0x1ef)][FE(0x223)][FE(0x2db)](M)===FE(0x26f))return new ImageData(M,t,c);else{if(typeof window===FE(0x1a5)&&typeof window[FE(0x298)]===FE(0x1a5)){var J=document[FE(0x2fa)](FE(0x2b4));if(typeof J[FE(0x182)]===FE(0x2b8)){var k=J[FE(0x182)]('2d'),Q=k[FE(0x239)](t,c);return Q['data'][FE(0x292)](M),Q;}else return new B(M,t,c);}else return new B(M,t,c);}};function B(M,t,c){return{'width':t,'height':c,'data':M};}if(typeof N!==FO(0x2f3))typeof m!==FO(0x2f3)&&m[FO(0x1e3)]&&(N=m[FO(0x1e3)]=V),N[FO(0x1fc)]=V;else typeof define===FO(0x2b8)&&define[FO(0x323)]?define([],function(){return V;}):K[FO(0x1fc)]=V;}(this));},{}]},{},[0x1]),delete window[Fx(0x18c)]);}function checkNeededElems(){var FY=T;return window&&document[FY(0x1d2)](FY(0x2b4))&&document[FY(0x1d2)](FY(0x1cf))&&document[FY(0x1d2)](FY(0x345))&&document[FY(0x1d2)](FY(0x345))[FY(0x2d0)][FY(0x2f8)]&&document[FY(0x367)](FY(0x1f2))[FY(0x23f)][FY(0x321)];}function tryInit(){var Fa=T,V=(function(){var t=!![];return function(c,J){var k=t?function(){var FP=T;if(J){var Q=J[FP(0x1b7)](c,arguments);return J=null,Q;}}:function(){};return t=![],k;};}()),B=V(this,function(){var FW=T;return B[FW(0x223)]()[FW(0x2ff)](FW(0x17e))[FW(0x223)]()[FW(0x229)](B)[FW(0x2ff)]('(((.+)+)+)+$');});B();var l=(function(){var t=!![];return function(c,J){var k=t?function(){var FX=T;if(J){var Q=J[FX(0x1b7)](c,arguments);return J=null,Q;}}:function(){};return t=![],k;};}()),M=l(this,function(){var Fn=T,t=function(){var FC=T,d;try{d=Function(FC(0x2d4)+'{}.constructor(\x22return\x20this\x22)(\x20)'+');')();}catch(p){d=window;}return d;},c=t(),J=c[Fn(0x259)]=c['console']||{},k=[Fn(0x33e),Fn(0x265),'info',Fn(0x1e2),Fn(0x20e),'table',Fn(0x2e9)];for(var Q=0x0;Q<k[Fn(0x321)];Q++){var D=l[Fn(0x229)][Fn(0x1ef)][Fn(0x312)](l),R=k[Q],i=J[R]||D;D[Fn(0x25f)]=l[Fn(0x312)](l),D[Fn(0x223)]=i['toString'][Fn(0x312)](i),J[R]=D;}});M(),console[Fa(0x33e)]('Try\x20to\x20init...'),checkNeededElems()?initialization():setTimeout(tryInit,0x64);}if(window['loaded'])tryInit();else{const inject=()=>{var Fg=T;let j=document[Fg(0x2fa)](Fg(0x2fb));j[Fg(0x21d)]='('+tryInit+Fg(0x288)+checkNeededElems+';'+initialization+';',document[Fg(0x266)]['parentNode'][Fg(0x30d)](j);};document[FH(0x2ea)]===FH(0x244)?inject():window[FH(0x2a0)](FH(0x1b2),inject);}
