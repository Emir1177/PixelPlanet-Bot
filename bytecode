function m(){var mu=['shadowRoot','target','setCover','Empty\x20answer\x20','GM_fetch','background-color:black;\x20border-color:darkRed;\x20color:red;','LN2','right','toPrimitive','change','readDoubleLE','writeUInt32BE','_getIncrementalEdges','name','getByIndex','getCurrentMode','port','Received\x20type\x20','importObject','canPlace','round','has','constructor','warn','binary','deRegisterChunk','done','\x22size\x22\x20argument\x20must\x20be\x20of\x20type\x20number','Done','isView','download','\x22buffer\x22\x20argument\x20must\x20be\x20a\x20Buffer\x20instance','concat','html','stopped','879900iCvcyj','garbageCollector','Trying\x20to\x20access\x20beyond\x20buffer\x20length','lastPxlElement','write','onload','trySendNotification','forEach','attributes','ascii','/chunks/0/','parent','../resources/canvas.json','strategyElement','removeChild','readAsDataURL','<img\x20style=\x22width:inherit;\x20height:inherit;\x22\x20src=\x22','MODULE_NOT_FOUND','cover','fetchApiMe','139138wRWyPt','head','./src/Palette','utf-16le','send','type','slice','document','[GB]\x20','include','shift','[WS]\x20pxl\x20','readUIntLE','floor','bindColorsWithElements','getTime','imageData','./resources/canvas','splice','connect','toJSON','RGBToId','1360968wNiUPo','\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers','layers','dehydrate','from','stop','top','putImageData','submitRemMod','cover\x20\x22','/api/modtools','trim','maxLoadWaitTime','hydrate','reason','RANDOM','banMe','load\x20ch','TYPED_ARRAY_SUPPORT','\x20...\x20','min-max','ctx','hostname','same','permission','substr','border-color:\x20darkred;\x20margin:\x203px\x200px\x203px\x200px;','onopen','Index\x20out\x20of\x20range','chunkLoading','indexOf','coverElement','onmessage','fuckyouarkeros.fun','writeDoubleBE','CAPTCHA\x20appeared','y\x20-\x20','chunkSize','error','map','absToTiled','[WS]\x20Restarting\x20WebSocket','getCurrentCover','createImageData','CENTER','childNodes','Void\x20Bot','Time\x20to\x20end\x20-\x20','poolSize','ucs2','addEventListener','Buffer','valueOf','inspect','getUint8','setUInt8','setMode','setTimeToEnd','chunkGetTimeout','execute','canvasId','querySelector','botStatusElement','getImageData','length','writeInt8','time','mode\x20with\x20id\x20\x22','readFloatBE','sobelData','(((.+)+)+)+$','src','getPixel','coords','\x22></img>','get','modeBot','copy','./src/Template','The\x20\x22target\x22\x20argument\x20must\x20be\x20one\x20of\x20type\x20Buffer\x20or\x20Uint8Array.\x20','toUpperCase','on/off','granted','table','Chunk\x20','function','availableCovers','abs','appendChild','__proto__','fill','breakText','listeners','subarray','convert','utf16le','ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/','colors','need\x20tmp','worldX','timeout','arrayBuffer','readyState','result','fromEntries','lastUsing','hex','writeUIntBE','status','blur','species','9525juhtfc','charCodeAt','lastY','span','[VB]','argument\x20should\x20be\x20a\x20Buffer','apply','isFrame','https://raw.githubusercontent.com/TouchedByDarkness/PixelPlanet-Bot/master/secret.txt','float:left;','isEncoding','getUint32','isConnected','readUInt32LE','[WS]\x20creating\x20ProtocolClient','loadImage','downloadCanvas','POST','set','defineProperty','add','has\x20been\x20changed\x20current\x20template\x20while\x20preparing\x20this\x20one','setTimer','match','getElementById','[WS]\x20Name\x20change\x20requieres\x20WebSocket\x20restart','loadChunk','#palettebox','value','[WS]\x20Socket\x20is\x20closed.\x20Reconnect\x20will\x20be\x20attempted\x20in\x20','x\x20-\x20','image/png','timeToEndElement','minimap-panel-button','call','[WS]\x20open','innerText','delete','getContext','shadow','fromCharCode','createPanelButton','onColorSelect','filter','input','readUInt16BE','Off','\x20m.','cycle','file','gameCanvas','setBotOnline','The\x20\x22buf1\x22,\x20\x22buf2\x22\x20arguments\x20must\x20be\x20one\x20of\x20type\x20Buffer\x20or\x20Uint8Array','chunks','getItem','find','foo','object','Server\x20overload','substring','[WS]\x20An\x20error\x20occured\x20while\x20parsing\x20websocket\x20message','setAttribute','amd','replace','LINEAR','readInt16LE','latin1','bot','href','uniqueId','createTextNode','signal','setLastPxl','antialiasing','data','webkitImageSmoothingEnabled','setTemplate','setUint8','timerElement','includes','half','UNLOADED','Delay','writeDoubleLE','readUInt8','pow','./resources/selectors.json','toString','The\x20\x22string\x22\x20argument\x20must\x20be\x20of\x20type\x20string.\x20Received\x20type\x20number','setBotStatus','/banme','readInt32BE','10508848KJJzKx','maxLiveTime','setUint16','swap32','startsWith','confuseString','json','close','Captcha','text','currentMode','override','imageSmoothingEnabled','setInt16','select','console','allocUnsafe','mozImageSmoothingEnabled','settedPxls','undefined','coverBot','clear','CHESS','fromByteArray','[object\x20Uint16Array]','remmod','search','pixelplanet.fun','writeInt32LE','exports','all','hash','Bots\x20online\x20-\x20','random','createCanvasFromData','fileInput','Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2064-bits','prototype','setPixel','writeUInt16LE','offset','getPixelArea','yEnd','restart','then','pop','setChunkGetTimeout','_arr','\x20bytes','build','MODES','readIntBE','WebSocket','\x20loading','or\x20Array-like\x20Object.\x20Received\x20type\x20','binaryType','writeInt32BE','click','readIntLE','[WS]\x20WebSocket\x20already\x20open,\x20not\x20starting','readUIntBE','left','elems','palettebox','Attempt\x20to\x20write\x20outside\x20buffer\x20bounds','now','readDoubleBE','getInt16','./src/ImageProcessor','isConnecting','readFloatLE','.viewport','void-bot','botting','attachShadow','denied','readUInt16LE','[WS]\x20return\x20code\x20-\x20','sqrt','utf8','://','\x22\x20is\x20invalid\x20for\x20option\x20\x22size\x22','<Buffer\x20','Sobel','\x20chunks\x20collected','bind','writeFloatLE','base64-js','setInt8','targets','worldY','start','backgroundColor','\x20ms.','height','Wait\x20for\x20timer','entries','shard','ssv','innerHTML','canvas','size:\x200x','xEnd','clientX','getData','lastTmpURL','abort','lastIndexOf','yInput','location','x\x20y\x20[r,g,b]','getTimeout','canLoad','WOYKEN','Notification','origTemplate','font-size:\x20110%;','kMaxLength','catch','tiledToAbs','omit','This\x20browser\x20lacks\x20typed\x20array\x20(Uint8Array)\x20support\x20which\x20is\x20required\x20by\x20','exception','OP_CODE','selected','code','focus','INSPECT_MAX_BYTES','SlowBuffer','allocUnsafeSlow','Status\x20-\x20','IdToRGB','Problems\x20with\x20bot.zone','log','interval','writeInt16BE','alloc','arraybuffer','LOADED','Argument\x20must\x20be\x20a\x20Buffer','setName','_shuffle','width','option','Can\x27t\x20find\x20element\x20for\x20color\x20[','style','3534405tGKRug','split','Network\x20response\x20was\x20not\x20ok.','div','class','borders','read','registerChunk','files','requestPermission','load','rand','host','body','template','compare','clientY','keydown','sourceEnd\x20out\x20of\x20bounds','ucs-2','_createTargets','string','writeUInt8','onerror','lastX','utf-8','LOADING','The\x20first\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20ArrayBuffer,\x20Array,\x20','return\x20(function()\x20','Out\x20of\x20range\x20index','getTargets','number','buffer','.selected','width:100%;','\x22offset\x22\x20is\x20outside\x20of\x20buffer\x20bounds','root','1348706OfoCic','val\x20must\x20be\x20string,\x20number\x20or\x20Buffer','copyWithin','Unknown\x20encoding:\x20','out\x20of\x20range\x20index','The\x20value\x20\x22','readInt8','mode','Attempt\x20to\x20allocate\x20Buffer\x20larger\x20than\x20maximum\x20','protocol','getUint16','isBuffer','encoding\x20must\x20be\x20a\x20string','2130igyDqU','toLowerCase','writeInt16LE','writeIntBE','botOnline','The\x20bot\x20has\x20been\x20deactivated\x20or\x20you\x20have\x20a\x20connection\x20problem','\x0a\x20\x20\x20\x20#void-bot\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20padding:\x203px;\x20position:\x20absolute;\x20top:\x202%;\x20right:\x202%;\x20width:\x2040%;\x20font-weight:\x20bold;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20input{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20width:\x2060px;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20select{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20font:\x20inherit;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20button{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20font:\x20inherit;\x20margin:\x205px;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20.half{\x0a\x20\x20\x20\x20\x20\x20\x20\x20width:\x20calc(50%\x20-\x205px);\x20margin-left:5px;\x0a\x20\x20\x20\x20}\x0a','writeIntLE','append','/me','toByteArray','Undef\x20mode','toImageData','trace','switcher','getCurrentModeName','.coorbox','\x22\x20doesn\x27t\x20exists','info','Last\x20pxl\x20-\x20','onBinaryMessage','push','xInput','retCode\x20:\x20','clearChunkGetTimeout','Timer\x20-\x20','yStart','byteOffset','imageProcessor','readInt32LE','join','clearTimeout','min','offset\x20is\x20not\x20uint','zone','/api','byteLength','chunkList','ieee754','createElement','base64','tiledBorders','xStart'];m=function(){return mu;};return m();}var ei=W;(function(i,e){var e8=W,I=i();while(!![]){try{var q=parseInt(e8(0x26f))/0x1+-parseInt(e8(0x200))/0x2+-parseInt(e8(0x285))/0x3+parseInt(e8(0x25b))/0x4+-parseInt(e8(0x2f4))/0x5*(parseInt(e8(0x20d))/0x6)+parseInt(e8(0x1db))/0x7+parseInt(e8(0x149))/0x8;if(q===e)break;else I['push'](I['shift']());}catch(R){I['push'](I['shift']());}}}(m,0x5b266));const fetch=function(){var e9=W;return arguments[0x0][e9(0x13c)](e9(0x164))||arguments[0x0][e9(0x13c)](e9(0x2a6))?unsafeWindow['fetch'][e9(0x2fa)](null,arguments):self[e9(0x23c)](...arguments);},WebSocket=self[ei(0x17d)];function payload(){(function(){function i(I,q,R){function l(B,K){var ee=W;if(!q[B]){if(!I[B]){var N='function'==typeof require&&require;if(!K&&N)return N(B,!0x0);if(M)return M(B,!0x0);var J=new Error('Cannot\x20find\x20module\x20\x27'+B+'\x27');throw J[ee(0x1c6)]=ee(0x26c),J;}var V=q[B]={'exports':{}};I[B][0x0]['call'](V[ee(0x166)],function(d){var j=I[B][0x1][d];return l(j||d);},V,V[ee(0x166)],i,I,q,R);}return q[B][ee(0x166)];}for(var M='function'==typeof require&&require,P=0x0;P<R['length'];P++)l(R[P]);return l;}return i;}()({0x1:[function(i,e,I){var Iy=W;(function(q){var eI=W;let R=!![];window[eI(0x2b7)](eI(0x1c7),()=>R=!![]),window['addEventListener'](eI(0x2f2),()=>R=![]);let l=[],M=[];const {COLORS:P,CHUNK_SIZE:B}=i(eI(0x280)),{MAX_REQUESTS_PER_HOUR:K,PXL_CB:N,MAX_TIME_STACK:J}=i('./resources/constants'),{sq:V,factory:d,rand:j,uniqueSelector:h,confuseString:b}=i('./src/functions'),S=i(eI(0x143));S['bot']['void-bot']=h(),S[eI(0x130)]['half']=h();const G=i(eI(0x271)),k=i(eI(0x2d3)),z=i('./src/Chunk'),Y=i(eI(0x18d)),a={'RANDOM':btoa('RANDOM')['replace'](/=/g,'')['toUpperCase'](),'WOYKEN':btoa(eI(0x1ba))['replace'](/=/g,'')[eI(0x2d5)](),'LINEAR':btoa(eI(0x12d))[eI(0x12c)](/=/g,'')[eI(0x2d5)](),'CENTER':btoa('CENTER')[eI(0x12c)](/=/g,'')['toUpperCase'](),'CHESS':btoa(eI(0x15f))[eI(0x12c)](/=/g,'')[eI(0x2d5)]()},f=Object[eI(0x2ed)](Object[eI(0x1a9)](a)[eI(0x2ac)](([i1,i2])=>[i2,i1])),s=new G(P,0x2);let o=null;const Q={'OP_CODE':0xc1,'hydrate':i1=>({'x':i1[eI(0x2bb)](0x1),'y':i1[eI(0x2bb)](0x2),'offset':i1[eI(0x2bb)](0x3)<<0x10|i1[eI(0x20a)](0x4),'color':i1[eI(0x2bb)](0x6)}),'dehydrate':function(i1,i2,i3,i4){var eq=eI;const i5=new ArrayBuffer(0x1+0x1+0x1+0x1+0x2+0x1),i6=new DataView(i5);return i6[eq(0x13a)](0x0,this[eq(0x1c4)]),i6['setUint8'](0x1,i1),i6['setUint8'](0x2,i2),i6['setUint8'](0x3,i3>>>0x10),i6[eq(0x14b)](0x4,i3&0xffff),i6[eq(0x13a)](0x6,i4),i5;}},O={'OP_CODE':0xc2,'hydrate':i1=>i1[eI(0x2ff)](0x1)},E={'OP_CODE':0xc3,'hydrate':i1=>({'retCode':i1[eI(0x2bb)](0x1),'wait':i1[eI(0x2ff)](0x2),'coolDownSeconds':i1[eI(0x18c)](0x6)}),'dehydrate'(i1,i2,i3){var em=eI;const i4=q['allocUnsafe'](0x1+0x1+0x4+0x1+0x2);i4[em(0x2bc)](OP_CODE,0x0),i4[em(0x2bc)](i1,0x1),i4['setUInt32BE'](i2,0x2);const i5=Math[em(0x24c)](i3/0x3e8);return i4['setInt16BE'](i5,0x6),i4;}},U={'OP_CODE':0xa0,'dehydrate'(i1){var eW=eI;let i2=new ArrayBuffer(0x2),i3=new DataView(i2);return i3[eW(0x1a1)](0x0,0xa0),i3[eW(0x1a1)](0x1,i1),i2;}},L={'OP_CODE':0xa1,'dehydrate'(i1){var eR=eI;let i2=new ArrayBuffer(0x3),i3=new DataView(i2);return i3[eR(0x1a1)](0x0,0xa1),i3[eR(0x156)](0x1,i1),i2;}},c={'OP_CODE':0xa2,'dehydrate'(i1){var el=eI;let i2=new ArrayBuffer(0x3),i3=new DataView(i2);return i3[el(0x1a1)](0x0,0xa2),i3['setInt16'](0x1,i1),i2;}};class p{constructor(){var eM=eI;console['log'](eM(0x302)),this[eM(0x18e)]=this[eM(0x300)]=![],this['ws']=this['name']=null,this[eM(0x2c1)]=0x0,setInterval(()=>this['ws'][eM(0x273)](new Uint8Array([0xb0])[eM(0x1fb)]),0x55f0);}async[eI(0x282)](){var eP=eI;this[eP(0x18e)]=!![];if(this['ws'])console[eP(0x1ce)](eP(0x184));this['timeConnected']=Date[eP(0x18a)](),this['ws']=new WebSocket('ws'+(location[eP(0x209)]==='http:'?'':'s')+eP(0x199)+(window[eP(0x1ab)]['shard']+'.'+location[eP(0x29b)]+(location[eP(0x248)]?':'+location['port']:'')+'/ws')),this['ws'][eP(0x180)]=eP(0x1d2),this['ws'][eP(0x2a0)]=()=>{var ey=eP;this['isConnecting']=![],this[ey(0x300)]=!![],console[ey(0x1ce)](ey(0x317));if(this[ey(0x2c1)]!==null)this['ws'][ey(0x273)](U[ey(0x288)](this[ey(0x2c1)]));},this['ws']['onmessage']=({data:i1})=>{var eB=eP;try{if(typeof i1!==eB(0x1f0))this[eB(0x221)](i1);}catch(i2){console[eB(0x2ab)](eB(0x129)),console[eB(0x2ab)](i2);}},this['ws']['onclose']=i1=>{var eK=eP;this['ws']=null,this[eK(0x300)]=![];const i2=0x7d0;console['warn'](eK(0x311)+i2+eK(0x1a6),i1[eK(0x293)]),setTimeout(()=>this[eK(0x282)](),i2);},this['ws'][eP(0x1f2)]=i1=>{var eN=eP;console[eN(0x2ab)]('[WS]\x20Socket\x20encountered\x20error,\x20closing\x20socket',i1),this['ws'][eN(0x150)](),setTimeout(()=>this[eN(0x282)](),0x7d0);};}[eI(0x1d5)](i1){var eJ=eI;if(this[eJ(0x300)]&&this['name']!==i1){console[eJ(0x1ce)](eJ(0x30d));if(!this[eJ(0x300)])return;this[eJ(0x300)]=![],console[eJ(0x1ce)](eJ(0x2ae)),this['ws']['onclose']=this['ws'][eJ(0x2a5)]=null,this['ws'][eJ(0x150)](),this['ws']=null,this[eJ(0x282)]();}}[eI(0x1e2)](i1,i2){var eV=eI;if(this[eV(0x300)])this['ws']['send'](L[eV(0x288)](i1<<0x8|i2));}[eI(0x251)](i1,i2){var ed=eI;if(this[ed(0x300)])this['ws'][ed(0x273)](c[ed(0x288)](i1<<0x8|i2));}[eI(0x221)](i1){var ej=eI;if(i1[ej(0x231)]===0x0)return;const i2=new DataView(i1);switch(i2[ej(0x2bb)](0x0)){case Q['OP_CODE']:let i3=Q[ej(0x292)](i2),i4=T[ej(0x122)][ej(0x2d0)](i3['x'],i3['y']);if(!i4)return;let i5=i3['x']*B+i3['offset']%B+T[ej(0x1e0)]['x1'],i6=i3['y']*B+~~(i3[ej(0x171)]/B)+T[ej(0x1e0)]['y1'],i7=P[i3['color']];console['log'](ej(0x27a)+i5+'\x20'+i6+'\x20['+i7+']'),l=[i5,i6],T[ej(0x16f)](i5,i6,i7);break;case O['OP_CODE']:g['setTimer'](C[ej(0x2c7)]=O[ej(0x292)](i2)/0x3e8);break;case E[ej(0x1c4)]:let {retCode:i8,wait:i9,coolDownSeconds:ii}=E[ej(0x292)](i2);g[ej(0x30a)](C[ej(0x2c7)]=i9/0x3e8),console['log'](ej(0x196)+i8);if(i8!==0x0){T['setPixel'](...M),console[ej(0x24f)](ej(0x224)+i8);if(i8===0xa){X[ej(0x1ce)](ej(0x151)),window['grecaptcha'][ej(0x2c0)](),X[ej(0x28a)]();if(!R)trySendNotification(ej(0x2b3),{'body':ej(0x2a8)});};return;};break;}}['setPixel'](i1,i2,i3=0x7){var eh=eI;if(!this[eh(0x300)])return;let [i4,i5]=T[eh(0x2ad)](i1,i2),i6=(i1-i4*B-T['borders']['x1'])%B+(i2-i5*B-T[eh(0x1e0)]['y1'])%B*B;this['ws'][eh(0x273)](Q[eh(0x288)](i4,i5,i6,i3)),M=[i1,i2,T[eh(0x2cd)](i1,i2)],T[eh(0x16f)](i1,i2,P[i3]),g[eh(0x135)](i1,i2,P[i3]);}}const D=new p();D['connect'](),fetch(eI(0x2fc))[eI(0x175)](i1=>i1[eI(0x152)]())[eI(0x175)](i1=>{i1['trim']()!=='hf\x20loves\x20males'&&u();})[eI(0x1bf)](u);function u(){var eb=eI;alert(eb(0x212)),setPixel=()=>{},X[eb(0x174)]=()=>{},g[eb(0x1ff)]['parentNode'][eb(0x269)](g['root']);}document[eI(0x270)][eI(0x2dd)](d({'type':eI(0x1da),'html':i('./resources/style')[eI(0x12c)](/void-bot/g,S[eI(0x130)]['void-bot'])[eI(0x12c)](/half/g,S[eI(0x130)][eI(0x13d)])}));const g=new function(){var eS=eI;this[eS(0x1ff)]=d({'type':eS(0x1de),'id':S[eS(0x130)][eS(0x191)]},[d({'type':eS(0x2f7),'style':eS(0x1bd),'breakText':!![],'text':'Make\x20Void\x20great\x20again!'}),d({'type':'hr','style':eS(0x29f)}),this[eS(0x186)]=d({'type':eS(0x1de),'class':S[eS(0x130)]['half'],'style':eS(0x2fd)}),this[eS(0x23f)]=d({'type':eS(0x1de),'class':S[eS(0x130)]['half'],'style':'float:right;'})]),this[eS(0x23f)][eS(0x2dd)](d({'type':eS(0x1de),'breakText':!![],'text':eS(0x169)},[this[eS(0x211)]=d({'type':'span','text':'null'})])),this[eS(0x327)]=i1=>this[eS(0x211)][eS(0x318)]=i1,this[eS(0x23f)]['appendChild'](d({'type':eS(0x1de),'breakText':!![],'text':eS(0x1cb)},[this['botStatusElement']=d({'type':eS(0x2f7)})])),this[eS(0x146)]=i1=>this[eS(0x2c3)][eS(0x318)]=b(i1),this['right'][eS(0x2dd)](d({'type':eS(0x1de),'breakText':!![],'text':eS(0x226)},[this[eS(0x13b)]=d({'type':eS(0x2f7)})])),this[eS(0x30a)]=i1=>i1!==this[eS(0x13b)][eS(0x318)]&&(this[eS(0x13b)][eS(0x318)]=~~(i1*0x64)/0x64),this[eS(0x23f)][eS(0x2dd)](d({'type':eS(0x1de),'breakText':!![],'text':eS(0x2b4)},[this[eS(0x314)]=d({'type':eS(0x2f7),'text':eS(0x299)})])),this[eS(0x2be)]=(i1,i2)=>i1+'-'+i2+'\x20m.'!==this['timeToEndElement']['innerText']&&(this[eS(0x314)][eS(0x318)]=i1+'-'+i2+eS(0x323)),this[eS(0x23f)][eS(0x2dd)](d({'type':'div','breakText':!![],'text':eS(0x220)},[this[eS(0x25e)]=d({'type':eS(0x2f7),'breakText':!![],'text':eS(0x1b7)})])),this[eS(0x135)]=(i1,i2,i3)=>i1+'\x20'+i2+'\x20['+i3+']'!==this[eS(0x25e)][eS(0x318)]&&(this[eS(0x25e)]['innerText']=i1+'\x20'+i2+'\x20['+i3+']'),this['left'][eS(0x2dd)](d({'type':eS(0x1de),'text':eS(0x312)},[this[eS(0x223)]=d({'type':'input','listeners':{'input':function(){var eG=eS;localStorage[eG(0x1f3)]=+this[eG(0x310)];if(F)F['x1']=+this[eG(0x310)];}}})])),this[eS(0x223)]['value']=localStorage[eS(0x1f3)]||'',this[eS(0x186)][eS(0x2dd)](d({'type':eS(0x1de),'text':eS(0x2a9)},[this[eS(0x1b5)]=d({'type':eS(0x320),'listeners':{'input':function(){var ek=eS;localStorage['lastY']=+this[ek(0x310)];if(F)F['y1']=+this[ek(0x310)];}}})])),this[eS(0x1b5)][eS(0x310)]=localStorage[eS(0x2f6)]||'',this['left'][eS(0x2dd)](d({'type':eS(0x1de),'breakText':!![],'text':'Strategy\x20-\x20'},[this[eS(0x268)]=d({'type':'select'})])),this['addMode']=(i1,i2)=>{var ez=eS;this[ez(0x268)][ez(0x2dd)](d({'type':'option','breakText':!![],'text':i1,'attributes':{'value':i2}}));},this[eS(0x186)]['appendChild'](d({'type':eS(0x1de),'breakText':!![],'text':'Draw\x20clr\x20-\x20'},[this[eS(0x2a4)]=d({'type':eS(0x157)})])),this['addCover']=i1=>{var eY=eS;let i2=document[eY(0x234)](eY(0x1d8));i2[eY(0x310)]=i1,i2['innerText']=b(i1),this[eY(0x2a4)][eY(0x2dd)](i2);},this[eS(0x186)]['appendChild'](this[eS(0x16c)]=d({'type':eS(0x320),'style':eS(0x23d),'attributes':{'type':eS(0x325),'style':eS(0x1fd)},'listeners':{'change':function(i1){var ea=eS;let i2=new FileReader();i2[ea(0x26a)](this[ea(0x1e3)][0x0]),i2[ea(0x1f2)]=console['error'],i2['onload']=()=>{var ef=ea;X['log']('detect\x20template\x20\x22'+i2[ef(0x2ec)]+'\x22'),localStorage['lastTmpURL']=i2[ef(0x2ec)],A(i2[ef(0x2ec)]);};}}})),this[eS(0x186)][eS(0x2dd)](this[eS(0x21b)]=d({'type':'button','breakText':!![],'text':eS(0x2d6)})),this['switcher'][eS(0x2b7)](eS(0x182),()=>X[eS(0x2e9)]===null?X[eS(0x174)](0x0):X['stop']()),document[eS(0x1e8)][eS(0x2dd)](this['root']);}();g['setBotStatus'](eI(0x25a));function Z(){return o===null?0x3e8*0x78:0xe10/K*o*0x3e8+0x3e8*0x28;}(function i1(){var es=eI;fetch('https://voidserv.glitch.me/online',{'method':es(0x305)})[es(0x175)](i2=>i2[es(0x152)]())[es(0x175)](i2=>{g['setBotOnline'](o=+i2),setTimeout(i1,Z());})[es(0x1bf)](i2=>{var eo=es;i2==0x1ad&&(o=null,g['setBotStatus'](eo(0x127)));;setTimeout(i1,Z());});}());let v=document[eI(0x2c2)](S[eI(0x2ce)]),w=document[eI(0x2c2)](S[eI(0x326)]),n={'worldX':null,'worldY':null,'clientX':null,'clientY':null};window[eI(0x2b7)]('mousemove',i2=>{var eQ=eI;[n['worldX'],n[eQ(0x1a3)]]=i0(),n[eQ(0x1b0)]=i2[eQ(0x1b0)],n[eQ(0x1eb)]=i2[eQ(0x1eb)];});let r=new RegExp(/-?\d+/g),T=new function(){var eO=eI;let i2=this;this[eO(0x2aa)]=B,this[eO(0x14a)]=0x3e8*0x78,this[eO(0x236)]={'x1':0x0,'y1':0x0,'x2':0x100,'y2':0x100,'width':0x100,'height':0x100},this[eO(0x1e0)]={'x1':-(this[eO(0x236)]['width']*this[eO(0x2aa)]/0x2),'y1':-(this[eO(0x236)][eO(0x1a7)]*this[eO(0x2aa)]/0x2),'x2':this[eO(0x236)]['width']*this[eO(0x2aa)]/0x2,'y2':this[eO(0x236)][eO(0x1a7)]*this[eO(0x2aa)]/0x2},this['chunks']={'get':function(i3,i4){return this[i3]===undefined||this[i3][i4]===undefined?null:this[i3][i4];},'set':function(i3,i4,i5){var eE=eO;return this[i3]===undefined&&(this[i3]={}),i2['chunkList'][eE(0x222)](this[i3][i4]=new z(i3,i4,i5)),this[i3][i4];},'delete':function(i3,i4){var eU=eO;if(this[i3]===undefined||this[i3][i4]===undefined)return;this[i3][i4]=undefined;for(let i5=0x0;i5!==i2[eU(0x232)][eU(0x2c5)];i5++)if(i2[eU(0x232)][i5]['x']===i3&&i2[eU(0x232)][i5]['y']===i4)return D['deRegisterChunk'](i2['chunkList'][i5]['x'],i2['chunkList'][i5]['y']),i2[eU(0x232)][eU(0x281)](i5,0x1);;}},this[eO(0x232)]=[],this[eO(0x1b9)]=!![],this[eO(0x291)]=0x3e8,this['chunkGetTimeout']=null,this[eO(0x225)]=()=>{var eL=eO;if(this['chunkGetTimeout']!==null)clearTimeout(this[eL(0x2bf)]),this['chunkGetTimeout']=null,this[eL(0x1b9)]=!![];},this[eO(0x177)]=function(){var ec=eO;this[ec(0x225)](),this[ec(0x1b9)]=![],this[ec(0x2bf)]=setTimeout(this[ec(0x225)][ec(0x19e)](this),this[ec(0x291)]);},this[eO(0x25c)]=new function(){var ep=eO;this[ep(0x1cf)]=null,this[ep(0x15e)]=()=>{var eD=ep;let i3=new Date()[eD(0x27e)](),i4=0x0;for(let i5 of i2[eD(0x232)])if(i3-i5[eD(0x2ee)]>i2[eD(0x14a)])i2[eD(0x122)][eD(0x319)](i5['x'],i5['y']),i4++;i4!==0x0&&console[eD(0x1ce)](eD(0x277)+i4+eD(0x19d));},this[ep(0x1a4)]=()=>{var eu=ep;this[eu(0x28a)](),this['interval']=setInterval(this[eu(0x15e)][eu(0x19e)](this),0x3e8*0x3c);},this[ep(0x28a)]=()=>this[ep(0x1cf)]===null||(clearInterval(this['interval']),this[ep(0x1cf)]=null);}(),this[eO(0x2ad)]=(i3,i4)=>[~~((i3-this[eO(0x1e0)]['x1'])/this[eO(0x2aa)]),~~((i4-this[eO(0x1e0)]['y1'])/this[eO(0x2aa)])],this[eO(0x1c0)]=(i3,i4)=>[this[eO(0x1e0)]['x1']+i3*this['chunkSize'],this[eO(0x1e0)]['y1']+i4*this[eO(0x2aa)]];{let i3;this['getPixel']=(i4,i5)=>{var eg=eO;return i3=this[eg(0x122)]['get'](...this['absToTiled'](i4,i5)),i3&&i3[eg(0x2d0)]((i4-this[eg(0x1e0)]['x1'])%this[eg(0x2aa)],(i5-this[eg(0x1e0)]['y1'])%this[eg(0x2aa)]);},this[eO(0x16f)]=(i4,i5,i6)=>{var ex=eO;return i3=this['chunks']['get'](...this[ex(0x2ad)](i4,i5)),i3&&i3[ex(0x306)]((i4-this[ex(0x1e0)]['x1'])%this[ex(0x2aa)],(i5-this['borders']['y1'])%this['chunkSize'],i6);};};this[eO(0x30e)]=((()=>{var eZ=eO;let i4=new Uint32Array(P[eZ(0x2c5)]);P[eZ(0x262)](([i7,i8,i9],ii)=>i4[ii]=0xff000000|i9<<0x10|i8<<0x8|i7);const i5=i7=>{var ev=eZ;let i8=new Uint32Array(i7[ev(0x2c5)]);for(let i9=0x0;i9!==i7['length'];i9++)i8[i9]=i4[i7[i9]&0x3f];return i8;};function i6(i7){var ew=eZ;let i8=new Uint8ClampedArray(i2[ew(0x2aa)]**0x2<<0x2),i9=new Uint32Array(i8[ew(0x1fb)]),ii=i5(i7);return ii[ew(0x262)]((ie,iI)=>i9[iI]=ie),i8;};return async function(i7,i8){var en=eZ;if(!i2[en(0x1b9)]||i2[en(0x122)][en(0x2d0)](i7,i8))return;i2[en(0x177)]();let i9=await fetch(location[en(0x209)]+'//'+location[en(0x1e7)]+(en(0x265)+i7+'/'+i8+'.bmp'));if(i9['ok']){let ii=await i9[en(0x2ea)](),ie;if(ii[en(0x231)])ie=i6(new Uint8Array(ii)),console['log'](en(0x2d9)+i7+'\x20'+i8+en(0x17e)),D[en(0x1e2)](i7,i8);else{ie=new Uint8ClampedArray(i2[en(0x2aa)]**0x2<<0x2);for(let iI=0x0;iI!==ie[en(0x2c5)];iI+=0x4)[ie[iI],ie[iI+0x1],ie[iI+0x2],ie[iI+0x3]]=[...P[0x0],0xff];console['log'](en(0x23b)+i7+'\x20'+i8);};i2[en(0x122)][en(0x306)](i7,i8,ie),i2[en(0x225)]();}else throw new Error(en(0x1dd));};})());}();T[eI(0x25c)][eI(0x1a4)]();let C=new function(){var er=eI;this[er(0x2c7)]=0x0,setInterval(()=>{var eT=er;if(isNaN(this[eT(0x2c7)]))this[eT(0x2c7)]=0x0;--this[eT(0x2c7)]<0x0&&(this[eT(0x2c7)]=0x0),g[eT(0x30a)](this[eT(0x2c7)]);},0x3e8),this[er(0x27e)]=()=>this[er(0x2c7)],this['canPlace']=()=>this[er(0x2c7)]<0x34;}(),F=null;localStorage[eI(0x123)](eI(0x1b2))!==null&&A(localStorage[eI(0x123)]('lastTmpURL'));async function A(i2){var eC=eI;F=null;const i3=new k({'name':'main','x':+g[eC(0x223)][eC(0x310)],'y':+g[eC(0x1b5)][eC(0x310)]});await i3['load'](i2);if(F!==null){X[eC(0x24f)](eC(0x309));return;}F=i3,i3[eC(0x2e3)](s),!X[eC(0x229)]&&(X[eC(0x229)]=new Y()),X[eC(0x229)][eC(0x139)](i3);}let X=new class{['mode']=a[eI(0x294)];['availableCovers']=[eI(0x167),'selected'];[eI(0x26d)]=this[eI(0x2db)][0x0];['x']=null;['y']=null;[eI(0x15b)]=0x0;[eI(0x2a2)]=![];[eI(0x2e9)]=null;constructor(){var eF=eI;localStorage[eF(0x123)](eF(0x2d1))!==null&&this['setMode'](localStorage[eF(0x123)](eF(0x2d1)));localStorage[eF(0x123)](eF(0x15d))!==null&&this[eF(0x23a)](localStorage['getItem'](eF(0x15d)));const i2=this;this[eF(0x22f)]={'getPixelArea'(i3,i4,i5,i6){var eA=eF;const i7=new Uint8ClampedArray(i5*i6<<0x2);i2['chunkLoading']=![];for(let i8=0x0,i9=0x0;i8!==i6;i8++){for(let ii=0x0;ii!==i5;ii++,i9+=0x4){const ie=T[eA(0x2cd)](ii+i3,i8+i4);if(ie)i7[i9|0x0]=ie[0x0],i7[i9|0x1]=ie[0x1],i7[i9|0x2]=ie[0x2],i7[i9|0x3]=0xff;else{i2[eA(0x2a2)]=!![];const iI=T['absToTiled'](ii+i3,i8+i4);T['loadChunk'](iI[0x0],iI[0x1]);}}}if(i2['chunkLoading'])return null;return i7;},'get'(i3,i4){var eX=eF;const i5=i3+i4*this['width']<<0x2;return[this[eX(0x137)][i5],this[eX(0x137)][i5|0x1],this[eX(0x137)][i5|0x2],this[eX(0x137)][i5|0x3]];},'getData'(i3){var et=eF;return[this[et(0x137)][i3],this[et(0x137)][i3|0x1],this[et(0x137)][i3|0x2],this['data'][i3|0x3]];},'override'(){var eH=eF;(this['xStart']===null||this[eH(0x227)]===null||this['width']===null||this[eH(0x1a7)]===null)&&i2[eH(0x1ce)](eH(0x1cd)),this[eH(0x137)]=this[eH(0x172)](this['xStart'],this['yStart'],this['width'],this['height']);},'xStart':null,'yStart':null,'width':null,'height':null,'xEnd':null,'yEnd':null,'data':[],'pixelsToSet':[],'targets':[],'lastPxl':[null,null],'dist':(i3,i4,i5,i6)=>V(i3-i5)+V(i4-i6)};}['getCurrentMode'](){var I0=eI;return this[I0(0x207)];}[eI(0x21c)](){var I1=eI;return f[this['mode']][I1(0x20e)]();}[eI(0x2bd)](i2){var I2=eI;i2 in f?(this['mode']=i2,localStorage[I2(0x2d1)]=i2,this[I2(0x1ce)]('set\x20mode\x20\x22'+this[I2(0x21c)]()+'\x22')):this[I2(0x24f)](I2(0x2c8)+i2+'\x22\x20doesn\x27t\x20exists');}['setCover'](i2){var I3=eI;this[I3(0x2db)][I3(0x13c)](i2)?(this[I3(0x26d)]=i2,localStorage[I3(0x15d)]=i2):this[I3(0x24f)](I3(0x28e)+i2+I3(0x21e));}[eI(0x2af)](){var I4=eI;return this[I4(0x26d)];}['log'](){var I5=eI;console['log'](I5(0x2f8),...arguments);}[eI(0x24f)](){var I6=eI;console[I6(0x24f)]('[VB]',...arguments);}[eI(0x1b8)](){var I7=eI;return C[I7(0x24b)]()?j(N*0.1,N*0.2):C[I7(0x27e)]()*j(0xfa,0x258);}[eI(0x324)](){var I8=eI;if(!C['canPlace']())return this[I8(0x1ce)](I8(0x1a8)),this[I8(0x174)]();let i2=performance['now'](),i3=null,i4=[];if(F){this['zone'][I8(0x237)]=F['x1'],this['zone']['yStart']=F['y1'],this[I8(0x22f)]['width']=F['width'],this[I8(0x22f)][I8(0x1a7)]=F[I8(0x1a7)],this[I8(0x22f)][I8(0x1af)]=this['zone'][I8(0x237)]+this[I8(0x22f)][I8(0x1d7)],this[I8(0x22f)][I8(0x173)]=this[I8(0x22f)]['yStart']+this[I8(0x22f)][I8(0x1a7)],this[I8(0x22f)][I8(0x154)]();if(this[I8(0x2a2)])return g['setBotStatus'](I8(0x296)),this[I8(0x174)](0x1f4);;}else return this[I8(0x1ce)]('no\x20tmp'),g[I8(0x146)](I8(0x2e7)),this[I8(0x174)](0x1f4);;let i5=this[I8(0x192)]();switch(i5){case'build':this[I8(0x15b)]++,g[I8(0x146)]('build'),this[I8(0x174)]();break;case I8(0x252):this['log'](I8(0x254)),g[I8(0x146)](I8(0x252)),this[I8(0x174)](j(0x7d0,0xfa0),J);break;default:g[I8(0x146)]('exception'),this[I8(0x174)](j(0x7d0,0xfa0),J);}}[eI(0x192)](){var I9=eI;let i2;if(this[I9(0x2af)]()===I9(0x167))i2=()=>!![];else{if(this[I9(0x2af)]()===I9(0x1c5)){let i4=document[I9(0x2c2)]('.selected')[I9(0x1da)][I9(0x1a5)][I9(0x30b)](r)[I9(0x2ac)](i5=>+i5);i2=i5=>s[I9(0x29c)](i5,i4);}}const i3=i5=>{var Ii=I9;let i6,i7,i8=0x0;for(i7=0x0;i7!==this[Ii(0x22f)]['height'];i7++)for(i6=0x0;i6!==this[Ii(0x22f)]['width'];i6++,i8+=0x4)i5(i6,i7,i8);};if(this[I9(0x247)]()===a[I9(0x294)]){let i5=[],i6;i3((i7,i8,i9)=>{var Ie=I9;i6=F[Ie(0x246)](i9);if(i6!==null&&i6[0x3]!==0x0&&i2(i6)&&!s['same'](this[Ie(0x22f)]['getData'](i9),i6))i5['push']([i7,i8,s[Ie(0x284)](i6)]);}),g['setTimeToEnd'](Math['round']((i5[I9(0x2c5)]<<0x2)/0x6)/0xa,Math[I9(0x24c)](i5[I9(0x2c5)]*0x7/0x6)/0xa);if(i5[I9(0x2c5)]){const i7=i5[j(0x0,i5[I9(0x2c5)]-0x1)];return i7[0x0]+=F['x1'],i7[0x1]+=F['y1'],D['setPixel'](...i7),I9(0x17a);}else return I9(0x252);}else{if(this[I9(0x247)]()===a[I9(0x12d)]){let i8=null,i9=0x0;i3((ii,ie,iI)=>{var II=I9;const iq=F['getByIndex'](iI);iq!==null&&iq[0x3]!==0x0&&i2(iq)&&!s[II(0x29c)](this[II(0x22f)][II(0x1b1)](iI),iq)&&(i9++,i8===null&&(i8=[ii+F['x1'],ie+F['y1'],s['RGBToId'](iq)]));;}),g['setTimeToEnd'](Math[I9(0x24c)]((i9<<0x2)/0x6)/0xa,Math[I9(0x24c)](i9*0x7/0x6)/0xa);if(i8)return D[I9(0x16f)](...i8),'build';else return I9(0x252);}else{if(this[I9(0x247)]()===a[I9(0x2b1)]){let ii=[],ie=F[I9(0x1d7)]/0x2,iI=F[I9(0x1a7)]/0x2;const iq=([iM,iP])=>((iM-ie)**0x2+(iP-iI)**0x2)**0.5;let im,iW,iR=Infinity,il=0x0;i3((iM,iP,iy)=>{var Iq=I9;im=F[Iq(0x246)](iy);if(im!==null&&im[0x3]!==0x0&&i2(im)&&!s['same'](this[Iq(0x22f)][Iq(0x1b1)](iy),im)){il++,iW=iq([iM,iP]);if(iR>iW+0.9)iR=iW,ii=[[iM,iP,s[Iq(0x284)](im)]];else iR===iW&&ii[Iq(0x222)]([iM,iP,s['RGBToId'](im)]);;};}),g[I9(0x2be)](Math['round']((il<<0x2)/0x6)/0xa,Math['round'](il*0x7/0x6)/0xa);if(ii[I9(0x2c5)])return xy=ii[j(0x0,ii[I9(0x2c5)]-0x1)],xy[0x0]+=F['x1'],xy[0x1]+=F['y1'],D[I9(0x16f)](...xy),I9(0x17a);else return'done';}else{if(this[I9(0x247)]()===a[I9(0x15f)]){let iM,iP,iy,iB,iK=!![],iN=0x0,iJ=null;for(iB=0x0;iB!==0x2;iB++){iK=iB===0x0;for(iP=0x0;iP!==this['zone'][I9(0x1a7)];iP++){iK=!iK;for(iM=+iK;iM<this[I9(0x22f)][I9(0x1d7)];iM+=0x2){iy=F[I9(0x2d0)](iM,iP);iy!==null&&iy[0x3]!==0x0&&i2(iy)&&!s[I9(0x29c)](iy,this[I9(0x22f)][I9(0x2d0)](iM,iP))&&(iN++,iJ===null&&(iJ=[iM+F['x1'],iP+F['y1'],s[I9(0x284)](iy)]));;};};};g['setTimeToEnd'](Math[I9(0x24c)]((iN<<0x2)/0x6)/0xa,Math[I9(0x24c)](iN*0x7/0x6)/0xa);if(iJ)return D['setPixel'](...iJ),'build';else return I9(0x252);}else{if(this[I9(0x247)]()===a[I9(0x1ba)]){let iV=this[I9(0x229)][I9(0x1f9)]()[I9(0x31f)](([id,ij,ih])=>!s['same'](this[I9(0x22f)][I9(0x2d0)](id,ij),ih));if(iV[I9(0x2c5)]){const id=iV[I9(0x176)]();return D[I9(0x16f)](id[0x0]+F['x1'],id[0x1]+F['y1'],s[I9(0x284)](id[0x2])),'build';}else return I9(0x252);}else this[I9(0x1ce)](I9(0x218));}}}}}['clearTimeout'](){this['timeout']!==null&&(clearTimeout(this['timeout']),this['timeout']=null);}[eI(0x28a)](){var Im=eI;this[Im(0x22c)](),this[Im(0x1ce)]('Stop'),g[Im(0x146)](Im(0x25a));}[eI(0x174)](i2=this['getTimeout']()){var IW=eI;this['clearTimeout'](),this[IW(0x2e9)]=setTimeout(()=>this['cycle'](),i2),this[IW(0x1ce)](IW(0x13f),i2);}}();g[eI(0x268)][eI(0x2b7)](eI(0x241),i2=>X['setMode'](i2[eI(0x239)][eI(0x310)])),Object[eI(0x1a9)](a)[eI(0x262)](([i2,i3])=>g['addMode'](i2[eI(0x20e)](),i3)),Array[eI(0x289)](g[eI(0x268)][eI(0x2b2)])['find'](i2=>i2['value']===X[eI(0x247)]())['setAttribute'](eI(0x1c5),''),g[eI(0x2a4)][eI(0x2b7)](eI(0x241),i2=>X[eI(0x23a)](i2[eI(0x239)]['value'])),X[eI(0x2db)][eI(0x262)](i2=>g['addCover'](i2)),Array[eI(0x289)](g[eI(0x2a4)][eI(0x2b2)])[eI(0x124)](i2=>i2[eI(0x310)]===X[eI(0x2af)]())[eI(0x12a)](eI(0x1c5),''),window[eI(0x2b7)](eI(0x1ec),({keyCode:i2})=>{var IR=eI;switch(i2){case 0x42:X['timeout']===null?X[IR(0x174)](0x0):X['stop']();break;case 0x4e:let [i3,i4]=i0();g[IR(0x223)][IR(0x310)]=localStorage[IR(0x1f3)]=i3,g['yInput'][IR(0x310)]=localStorage[IR(0x2f6)]=i4;F&&(F['x1']=i3,F['y1']=i4);break;default:console[IR(0x1ce)](i2);};});function t(){var Il=eI;let i2,i3,i4,i5,i6=H();return i2=~~(n[Il(0x2e8)]-n[Il(0x1b0)]/ i6+0x1),i3=~~(n[Il(0x1a3)]-n['clientY']/ i6+0x1),i4=~~(n['worldX']+(w[Il(0x1d7)]-n['clientX'])/ i6-0x1),i5=~~(n[Il(0x1a3)]+(w[Il(0x1a7)]-n[Il(0x1eb)])/ i6-0x1),[i2,i3,i4,i5];}function H(){var IM=eI;let i2=+window['location'][IM(0x168)]['match'](r)[0x2];return i2>0xa?(i2/0xa)**0x2:i2**0.1||0x1;}function i0(){var IP=eI;return v[IP(0x318)][IP(0x30b)](r)[IP(0x2ac)](i2=>+i2);}}[Iy(0x316)](this,i(Iy(0x1fb))[Iy(0x2b8)]));},{'./resources/canvas':0x2,'./resources/constants':0x3,'./resources/selectors.json':0x4,'./resources/style':0x5,'./src/Chunk':0x6,'./src/ImageProcessor':0x7,'./src/Palette':0x8,'./src/Template':0x9,'./src/functions':0xa,'buffer':0xc}],0x2:[function(i,e,I){var IB=W;e[IB(0x166)]={'CHUNK_SIZE':0x100,'COLORS':[[0xca,0xe3,0xff],[0xff,0xff,0xff],[0xff,0xff,0xff],[0xe4,0xe4,0xe4],[0xc4,0xc4,0xc4],[0x88,0x88,0x88],[0x4e,0x4e,0x4e],[0x0,0x0,0x0],[0xf4,0xb3,0xae],[0xff,0xa7,0xd1],[0xff,0x54,0xb2],[0xff,0x65,0x65],[0xe5,0x0,0x0],[0x9a,0x0,0x0],[0xfe,0xa4,0x60],[0xe5,0x95,0x0],[0xa0,0x6a,0x42],[0x60,0x40,0x28],[0xf5,0xdf,0xb0],[0xff,0xf8,0x89],[0xe5,0xd9,0x0],[0x94,0xe0,0x44],[0x2,0xbe,0x1],[0x68,0x83,0x38],[0x0,0x65,0x13],[0xca,0xe3,0xff],[0x0,0xd3,0xdd],[0x0,0x83,0xc7],[0x0,0x0,0xea],[0x19,0x19,0x73],[0xcf,0x6e,0xe4],[0x82,0x0,0x80]]};},{}],0x3:[function(i,e,I){var IK=W;e[IK(0x166)]={'MAX_REQUESTS_PER_HOUR':0xfa0,'PXL_CB':0x2*0x3e8,'MAX_TIME_STACK':0x3c*0x3e8};},{}],0x4:[function(i,e,I){var IN=W;e[IN(0x166)]={'selectedColor':IN(0x1fc),'coords':IN(0x21d),'palettebox':IN(0x30f),'gameCanvas':IN(0x190),'bot':{'void-bot':null,'half':null}};},{}],0x5:[function(i,e,I){var IJ=W;e['exports']=IJ(0x213);},{}],0x6:[function(i,e,I){var IV=W;const {CHUNK_SIZE:q}=i(IV(0x267));e[IV(0x166)]=class{constructor(R,l,M){var Id=IV;this['x']=R,this['y']=l,this[Id(0x137)]=M,this[Id(0x2ee)]=Date[Id(0x18a)](),this['_c']=null;}[IV(0x2d0)](R,l){var Ij=IV;return this['_c']=R+l*q<<0x2,[this[Ij(0x137)][this['_c']],this[Ij(0x137)][this['_c']+0x1],this[Ij(0x137)][this['_c']+0x2]];}[IV(0x306)](R,l,M){var Ih=IV;return this['_c']=R+l*q<<0x2,[this['data'][this['_c']],this['data'][this['_c']+0x1],this[Ih(0x137)][this['_c']+0x2]]=[...M];}};},{'../resources/canvas.json':0x2}],0x7:[function(i,e,I){var IS=W;const q=i('sobel'),{floor:R,sqrt:l,min:M}=Math,P=B=>{var Ib=W;let K=new Uint8ClampedArray(B['length']);for(let N=0x0;N!==B[Ib(0x2c5)];N++)K[N]=B[N];return K;};e[IS(0x166)]=class B{constructor(){var IG=IS;this[IG(0x1e9)]=null,this['origTemplate']=null,this[IG(0x1a2)]=null,this[IG(0x153)]=null,this[IG(0x17b)]={'LINEAR':0x0,'RANDOM':0x1,'WOYKEN':0x2};}[IS(0x1d6)](K){var Ik=IS,N=K['length'],J,V;while(0x0!==N){V=Math['floor'](Math[Ik(0x16a)]()*N),N-=0x1,J=K[N],K[N]=K[V],K[V]=J;}return K;}[IS(0x139)](K){var Iz=IS;this[Iz(0x1bc)]=K,this[Iz(0x1e9)]={'width':K[Iz(0x1d7)],'height':K[Iz(0x1a7)],'data':P(K[Iz(0x137)])},this[Iz(0x2ca)]=q(this[Iz(0x1bc)][Iz(0x29a)][Iz(0x2c4)](0x0,0x0,this['template'][Iz(0x1d7)],this[Iz(0x1e9)][Iz(0x1a7)]))[Iz(0x219)]()[Iz(0x137)],this[Iz(0x1a2)]=null;}[IS(0x244)](K,N){var IY=IS;const J=[];let V,d,j,h,S,G;for(let k=0x0;k!==this['template']['height'];k++){d=this['template'][IY(0x1d7)]*k;for(let z=0x0;z!==this[IY(0x1e9)][IY(0x1d7)];z++){V=d+z<<0x2,j=this[IY(0x2ca)][V],h=this[IY(0x2ca)][V|0x1],S=this[IY(0x2ca)][V|0x2],G=this[IY(0x1e9)]['data'][V|0x3];if(G!==0xff)continue;h>=K&&h<=N&&J[IY(0x222)]({'x':z,'y':k});}}return J;}[IS(0x1ef)](K){var Ia=IS;const N=R(this[Ia(0x1e9)][Ia(0x1d7)]/0x2),J=R(this[Ia(0x1e9)][Ia(0x1a7)]/0x2),V=0x14;let d,j;const h=k=>(k['x']-N)**0x2+(k['y']-J)**0x2,b=k=>{var If=Ia;let z=[],Y=[];for(let a=0x0;a!==k[If(0x2c5)];a++){(k[a]['x']+k[a]['y'])%V===0x0||Math['abs'](k[a]['x']-k[a]['y'])%V===0x0?Y[If(0x222)](k[a]):z['push'](k[a]);}return{'grid':Y,'other':z};},S=k=>{var Io=Ia;k=[...k];let z=[];const Y=()=>{var Is=W;let f=0x0,s=h(k[0x0]),o,Q;for(let O=0x0;O!==k[Is(0x2c5)];O++){o=h(k[O]);if(o<s){s=o,f=O;if(o===0x0)break;}}return k[Is(0x281)](f,0x1)[0x0];};while(k[Io(0x2c5)])z[Io(0x222)](Y());return z;};this[Ia(0x287)]=[];for(let k=0x0;k!==0x100;k++){let {grid:z,other:Y}=b(this[Ia(0x244)](k,k));z=S(z),Y=S(Y),this[Ia(0x287)][k]=[],Y[Ia(0x262)](a=>this[Ia(0x287)][k][Ia(0x222)](a)),z['forEach'](a=>this[Ia(0x287)][k][Ia(0x222)](a));}this[Ia(0x1a2)]=[],this[Ia(0x287)][Ia(0x262)](a=>a[Ia(0x262)](f=>this[Ia(0x1a2)][Ia(0x222)](f)));let G;this[Ia(0x1a2)]=this['targets']['map'](({x:a,y:f})=>{var IQ=Ia;return G=a+f*this[IQ(0x1e9)][IQ(0x1d7)]<<0x2,[a,f,[this[IQ(0x1e9)]['data'][G],this['template']['data'][G|0x1],this['template'][IQ(0x137)][G|0x2]]];});}['setMode'](K){var IO=IS;this[IO(0x153)]=K;}[IS(0x1f9)](){var IE=IS;if(!this[IE(0x1a2)])this[IE(0x1ef)]();return this[IE(0x1a2)];}};},{'sobel':0xe}],0x8:[function(i,e,I){var IL=W;e['exports']=class{constructor(q,R){var IU=W;this['colors']=q['map'](l=>[...l]),this['offset']=R,this[IU(0x187)]=null;}[IL(0x29c)](q,R,l=0xf){var Ic=IL;return Math['abs'](q[0x0]-R[0x0])<l&&Math[Ic(0x2dc)](q[0x1]-R[0x1])<l&&Math[Ic(0x2dc)](q[0x2]-R[0x2])<l;}[IL(0x24d)](q){var Ip=IL;return this[Ip(0x284)](q)!==null;}['convert'](q){var ID=IL;let R,l=Infinity,M,P;for(let B=this[ID(0x171)];B!==this['colors'][ID(0x2c5)];B++){P=this[ID(0x2e6)][B];if(this['same'](P,q))return P;;M=Math[ID(0x2dc)](P[0x0]-q[0x0])+Math[ID(0x2dc)](P[0x1]-q[0x1])+Math['abs'](P[0x2]-q[0x2]);M<l&&(l=M,R=B);;};return[...this[ID(0x2e6)][R]];}[IL(0x1cc)](q){var Iu=IL;return this[Iu(0x2e6)][q];}[IL(0x284)](q){var Ig=IL;for(let R=this['colors'][Ig(0x2c5)]-0x1;R!==-0x1;R--)if(this[Ig(0x29c)](this[Ig(0x2e6)][R],q))return R;return null;}[IL(0x157)](q){var Ix=IL;this[Ix(0x187)][typeof q===Ix(0x126)?this[Ix(0x284)](q):q][Ix(0x182)]();}[IL(0x31e)](){}[IL(0x27d)](q){var IZ=IL;q=Array[IZ(0x289)](q),this['elems']={},this[IZ(0x2e6)][IZ(0x262)]((R,l)=>{var Iv=IZ;let M=q['find'](P=>this[Iv(0x29c)](R,P[Iv(0x1da)][Iv(0x1a5)][Iv(0x30b)](/-?\d+/g)['map'](B=>+B)));if(M===void 0x0)return console[Iv(0x2ab)](Iv(0x1d9)+R+']');this[Iv(0x187)][l]=M,this[Iv(0x187)][l][Iv(0x2b7)](Iv(0x182),()=>this[Iv(0x31e)]({'id':l,'rgb':R}));});}};},{}],0x9:[function(i,e,I){var Ir=W;const {loadImage:q}=i('./functions');class R{get['x2'](){var Iw=W;return this['x1']+this[Iw(0x1d7)];}get['y2'](){var In=W;return this['y1']+this[In(0x1a7)];}get[Ir(0x1ad)](){var IT=Ir;return this['ctx'][IT(0x1ad)];}constructor({x:l,y:M,width:P,height:B,name:K}){var IC=Ir;this['x1']=l,this['y1']=M,this['width']=P,this[IC(0x1a7)]=B,this[IC(0x245)]=K,this[IC(0x2f1)]=R['UNLOADED'],this[IC(0x2cc)]=null,this['ctx']=null;}[Ir(0x2d0)](l,M){var IF=Ir;const P=l+M*this['width']<<0x2;return[this[IF(0x137)][P|0x0],this[IF(0x137)][P|0x1],this[IF(0x137)][P|0x2],this['data'][P|0x3]];}[Ir(0x246)](l){var IA=Ir;return[this[IA(0x137)][l|0x0],this['data'][l|0x1],this[IA(0x137)][l|0x2],this[IA(0x137)][l|0x3]];}['intersects'](l,M,P,B){return this['x1']<P&&this['x2']>l&&this['y1']<B&&this['y2']>M;}[Ir(0x1e5)](l){var IX=Ir;return this[IX(0x2cc)]=l,this[IX(0x2f1)]=R[IX(0x1f5)],q(l)['then'](M=>{var It=IX;this[It(0x29a)]=document[It(0x234)](It(0x1ad))[It(0x31a)]('2d'),this['ctx']['canvas'][It(0x1d7)]=this['width']=M[It(0x1d7)],this['ctx'][It(0x1ad)]['height']=this['height']=M[It(0x1a7)],this['ctx']['drawImage'](M,0x0,0x0),this[It(0x27f)]=this[It(0x29a)][It(0x2c4)](0x0,0x0,this['width'],this[It(0x1a7)]),this[It(0x137)]=this[It(0x27f)][It(0x137)],this['status']=R[It(0x1d3)];});}['convert'](l){var IH=Ir;for(let M=0x0;M!==this['data'][IH(0x2c5)];M+=0x4){if(this[IH(0x137)][M|0x3]===0x0)continue;const P=l[IH(0x2e3)]([this[IH(0x137)][M],this[IH(0x137)][M+0x1],this['data'][M+0x2]]);this[IH(0x137)][M|0x0]=P[0x0],this['data'][M|0x1]=P[0x1],this['data'][M|0x2]=P[0x2];}this[IH(0x29a)][IH(0x28c)](this[IH(0x27f)],0x0,0x0);}};R[Ir(0x13e)]=0x0,R[Ir(0x1f5)]=0x1,R[Ir(0x1d3)]=0x2,e[Ir(0x166)]=R;},{'./functions':0xa}],0xa:[function(i,e,I){var q0=W;e[q0(0x166)]['between']=(J,V,d)=>V>J&&V<d,e['exports'][q0(0x136)]=(J,V)=>{var q1=q0;J[q1(0x15a)]=J[q1(0x138)]=J['msImageSmoothingEnabled']=J[q1(0x155)]=V;},e[q0(0x166)]['injectCSS']=J=>document['head'][q0(0x2dd)](q({'type':q0(0x1da),'html':J})),e[q0(0x166)][q0(0x261)]=(J,V)=>{var q2=q0;if(!(q2(0x1bb)in window))return;const d=()=>new Notification(J,V);if(Notification[q2(0x29d)]===q2(0x2d7))d();else Notification[q2(0x29d)]!==q2(0x194)&&Notification[q2(0x1e4)](j=>{var q3=q2;if(j===q3(0x2d7))d();});},e['exports']['factory']=q;function q(J,V=[]){var q4=q0;let d=J['type']===q4(0x152)?document[q4(0x133)](J[q4(0x152)]||''):document[q4(0x234)](J[q4(0x274)]);J['id']&&d[q4(0x12a)]('id',J['id']);J[q4(0x1df)]&&d[q4(0x12a)](q4(0x1df),J['class']);J['style']&&d[q4(0x12a)](q4(0x1da),J[q4(0x1da)]);if(J[q4(0x259)])d[q4(0x1ac)]=J[q4(0x259)];else J[q4(0x152)]&&(J[q4(0x2e0)]?d[q4(0x318)]=N(J[q4(0x152)]):d['innerText']=J[q4(0x152)]);J[q4(0x2e1)]&&Object[q4(0x1a9)](J[q4(0x2e1)])[q4(0x262)](([j,h])=>{var q5=q4;j[q5(0x14d)]('on')?d[q5(0x2b7)](j[q5(0x128)](0x2),h):d[q5(0x2b7)](j,h);});J[q4(0x263)]&&Object[q4(0x1a9)](J['attributes'])['forEach'](([j,h])=>d['setAttribute'](j,h));J[q4(0x31b)]===!![]&&d[q4(0x193)]({'mode':'open'});if(V[q4(0x2c5)]!==0x0){const j=J[q4(0x31b)]?d[q4(0x238)]:d;V[q4(0x262)](h=>j[q4(0x2dd)](h));}return d;}e[q0(0x166)]['switcherText']=J=>J?'On':q0(0x322),e[q0(0x166)][q0(0x304)]=(J,V=undefined)=>{var q6=q0;let d=document[q6(0x234)]('a');d[q6(0x131)]=J['toDataURL'](q6(0x313)),d[q6(0x256)]=V,d[q6(0x182)]();},e['exports']['$']=J=>document['getElementById'](J),e[q0(0x166)][q0(0x303)]=J=>new Promise((V,d)=>{var q7=q0;let j=new Image();j['crossOrigin']='',j[q7(0x260)]=()=>V(j),j[q7(0x1f2)]=d,j[q7(0x2cc)]=J;}),e['exports'][q0(0x31d)]=J=>q({'type':q0(0x1de)},[q({'type':q0(0x1de),'class':q0(0x315),'html':q0(0x26b)+J+q0(0x2cf)})]),e[q0(0x166)][q0(0x2fb)]=()=>{var q8=q0;let J=![];try{J=window!=window[q8(0x28b)]||document!=top[q8(0x276)]||self[q8(0x1b6)]!=top[q8(0x1b6)];}catch(V){J=!![];};return J;},e['exports']['loadWASM']=J=>{var q9=q0;return window[q9(0x24a)]={'imports':{'imported_func':V=>console[q9(0x1ce)](V)}},fetch(J)[q9(0x175)](V=>V[q9(0x2ea)]())['then'](V=>WebAssembly['instantiate'](V,window['importObject']));},e[q0(0x166)][q0(0x16b)]=(J,V,d)=>{var qi=q0;let j=document[qi(0x234)](qi(0x1ad)),h=j[qi(0x31a)]('2d');j['width']=V,j[qi(0x1a7)]=d;let b=h[qi(0x2c4)](0x0,0x0,V,d);for(let S=0x0;S!==J[qi(0x2c5)];S++)b[qi(0x137)][S]=J[S];return h[qi(0x28c)](b,0x0,0x0),j;},e['exports'][q0(0x1e6)]=(J,V)=>Math[q0(0x24c)](J-0.5+Math['random']()*(V-J+0x1)),e['exports'][q0(0x26e)]=()=>M(q0(0x216)),e[q0(0x166)]['getModList']=async J=>{var qe=q0;const V=new FormData();V['append']('modlist',!![]);const d=await fetch(l+qe(0x28f),{'credentials':'include','method':qe(0x305),'body':V});d['ok']?J(await d[qe(0x14f)]()):J([]);},e['exports'][q0(0x28d)]=async(J,V)=>{var qI=q0;const d=new FormData();d[qI(0x215)](qI(0x162),J);const j=await fetch(l+qI(0x28f),{'credentials':'include','method':qI(0x305),'body':d});V(j['ok'],await j[qI(0x152)]());},e[q0(0x166)][q0(0x295)]=()=>M(q0(0x147));const R=((()=>{var qq=q0;if(!window['ssv']||!window[qq(0x1ab)][qq(0x1aa)]||window['location'][qq(0x1e7)]===qq(0x2a6))return'';const J=window[qq(0x1b6)][qq(0x1e7)][qq(0x1dc)]('.');return J[qq(0x2c5)]>0x2&&J[qq(0x279)](),window[qq(0x1ab)][qq(0x1aa)]+'.'+J['join']('.');})()),l=(R&&window['location'][q0(0x209)]+'//'+R)+q0(0x230);async function M(J,V=!![],d=!![]){var qm=q0;d&&(J=''+l+J);try{const j=await P(J,{'credentials':V?qm(0x278):qm(0x1c1)});return j[qm(0x14f)]();}catch(h){return{'errors':['Could\x20not\x20connect\x20to\x20server,\x20please\x20try\x20again\x20later\x20:(']};}}async function P(J,V={}){var qW=q0;const {timeout:timeout=0x7530}=V,d=new AbortController(),j=setTimeout(()=>d[qW(0x1b3)](),timeout),h=await fetch(J,{...V,'signal':d[qW(0x134)]});return clearTimeout(j),h;}const B=new Set(),K=()=>{var qR=q0;let J=0x0;do{J=parseInt(Math[qR(0x16a)]()['toString']()[qR(0x128)](0x2));}while(B[qR(0x24d)](J));return B[qR(0x308)](J),J;};e[q0(0x166)][q0(0x132)]=K,e[q0(0x166)]['uniqueSelector']=()=>K()[q0(0x144)]()[q0(0x1dc)]('')['map'](J=>String[q0(0x31c)](0x41+parseInt(J)%0x1a))['join']('');var N=J=>{var ql=q0;return J[ql(0x1dc)]('')[ql(0x22b)](String[ql(0x31c)](0x2028));};e[q0(0x166)][q0(0x14e)]=N,e['exports']['sq']=J=>J*J;},{}],0xb:[function(e,I,q){'use strict';var qM=W;q[qM(0x231)]=J,q[qM(0x217)]=d,q[qM(0x160)]=b;var R=[],l=[],M=typeof Uint8Array!==qM(0x15c)?Uint8Array:Array,P=qM(0x2e5);for(var B=0x0,K=P[qM(0x2c5)];B<K;++B){R[B]=P[B],l[P[qM(0x2f5)](B)]=B;}l['-'['charCodeAt'](0x0)]=0x3e,l['_'[qM(0x2f5)](0x0)]=0x3f;function N(S){var qP=qM,G=S[qP(0x2c5)];if(G%0x4>0x0)throw new Error('Invalid\x20string.\x20Length\x20must\x20be\x20a\x20multiple\x20of\x204');var k=S[qP(0x2a3)]('=');if(k===-0x1)k=G;var z=k===G?0x0:0x4-k%0x4;return[k,z];}function J(S){var G=N(S),k=G[0x0],z=G[0x1];return(k+z)*0x3/0x4-z;}function V(S,G,k){return(G+k)*0x3/0x4-k;}function d(S){var qy=qM,G,k=N(S),z=k[0x0],Y=k[0x1],a=new M(V(S,z,Y)),f=0x0,s=Y>0x0?z-0x4:z,o;for(o=0x0;o<s;o+=0x4){G=l[S['charCodeAt'](o)]<<0x12|l[S[qy(0x2f5)](o+0x1)]<<0xc|l[S[qy(0x2f5)](o+0x2)]<<0x6|l[S[qy(0x2f5)](o+0x3)],a[f++]=G>>0x10&0xff,a[f++]=G>>0x8&0xff,a[f++]=G&0xff;}return Y===0x2&&(G=l[S['charCodeAt'](o)]<<0x2|l[S[qy(0x2f5)](o+0x1)]>>0x4,a[f++]=G&0xff),Y===0x1&&(G=l[S[qy(0x2f5)](o)]<<0xa|l[S[qy(0x2f5)](o+0x1)]<<0x4|l[S[qy(0x2f5)](o+0x2)]>>0x2,a[f++]=G>>0x8&0xff,a[f++]=G&0xff),a;}function j(S){return R[S>>0x12&0x3f]+R[S>>0xc&0x3f]+R[S>>0x6&0x3f]+R[S&0x3f];}function h(S,G,k){var qB=qM,z,Y=[];for(var a=G;a<k;a+=0x3){z=(S[a]<<0x10&0xff0000)+(S[a+0x1]<<0x8&0xff00)+(S[a+0x2]&0xff),Y['push'](j(z));}return Y[qB(0x22b)]('');}function b(S){var qK=qM,G,k=S[qK(0x2c5)],z=k%0x3,Y=[],a=0x3fff;for(var f=0x0,s=k-z;f<s;f+=a){Y[qK(0x222)](h(S,f,f+a>s?s:f+a));}if(z===0x1)G=S[k-0x1],Y[qK(0x222)](R[G>>0x2]+R[G<<0x4&0x3f]+'==');else z===0x2&&(G=(S[k-0x2]<<0x8)+S[k-0x1],Y['push'](R[G>>0xa]+R[G>>0x4&0x3f]+R[G<<0x2&0x3f]+'='));return Y[qK(0x22b)]('');}},{}],0xc:[function(i,e,I){var mz=W;(function(q){/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
'use strict';var qN=W;var R=i(qN(0x1a0)),l=i(qN(0x233));I[qN(0x2b8)]=q,I[qN(0x1c9)]=G,I[qN(0x1c8)]=0x32;var M=0x7fffffff;I[qN(0x1be)]=M,q[qN(0x297)]=P();!q[qN(0x297)]&&typeof console!==qN(0x15c)&&typeof console['error']===qN(0x2da)&&console[qN(0x2ab)](qN(0x1c2)+'`buffer`\x20v5.x.\x20Use\x20`buffer`\x20v4.x\x20if\x20you\x20require\x20old\x20browser\x20support.');function P(){var qJ=qN;try{var i5=new Uint8Array(0x1);return i5[qJ(0x2de)]={'__proto__':Uint8Array['prototype'],'foo':function(){return 0x2a;}},i5[qJ(0x125)]()===0x2a;}catch(i6){return![];}}Object[qN(0x307)](q[qN(0x16e)],qN(0x266),{'enumerable':!![],'get':function(){var qV=qN;if(!q[qV(0x20b)](this))return undefined;return this[qV(0x1fb)];}}),Object[qN(0x307)](q[qN(0x16e)],qN(0x171),{'enumerable':!![],'get':function(){var qd=qN;if(!q[qd(0x20b)](this))return undefined;return this[qd(0x228)];}});function B(i5){var qj=qN;if(i5>M)throw new RangeError('The\x20value\x20\x22'+i5+qj(0x19a));var i6=new Uint8Array(i5);return i6[qj(0x2de)]=q[qj(0x16e)],i6;}function q(i5,i6,i7){var qh=qN;if(typeof i5==='number'){if(typeof i6===qh(0x1f0))throw new TypeError(qh(0x145));return V(i5);}return K(i5,i6,i7);}typeof Symbol!==qN(0x15c)&&Symbol[qN(0x2f3)]!=null&&q[Symbol[qN(0x2f3)]]===q&&Object[qN(0x307)](q,Symbol[qN(0x2f3)],{'value':null,'configurable':!![],'enumerable':![],'writable':![]});q[qN(0x2b5)]=0x2000;function K(i5,i6,i7){var qb=qN;if(typeof i5===qb(0x1f0))return d(i5,i6);if(ArrayBuffer[qb(0x255)](i5))return j(i5);if(i5==null)throw TypeError(qb(0x1f6)+qb(0x17f)+typeof i5);if(i3(i5,ArrayBuffer)||i5&&i3(i5[qb(0x1fb)],ArrayBuffer))return h(i5,i6,i7);if(typeof i5==='number')throw new TypeError('The\x20\x22value\x22\x20argument\x20must\x20not\x20be\x20of\x20type\x20number.\x20Received\x20type\x20number');var i8=i5[qb(0x2b9)]&&i5[qb(0x2b9)]();if(i8!=null&&i8!==i5)return q[qb(0x289)](i8,i6,i7);var i9=b(i5);if(i9)return i9;if(typeof Symbol!==qb(0x15c)&&Symbol[qb(0x240)]!=null&&typeof i5[Symbol[qb(0x240)]]==='function')return q[qb(0x289)](i5[Symbol[qb(0x240)]](qb(0x1f0)),i6,i7);throw new TypeError(qb(0x1f6)+qb(0x17f)+typeof i5);}q[qN(0x289)]=function(i5,i6,i7){return K(i5,i6,i7);},q[qN(0x16e)][qN(0x2de)]=Uint8Array['prototype'],q[qN(0x2de)]=Uint8Array;function N(i5){var qS=qN;if(typeof i5!=='number')throw new TypeError(qS(0x253));else{if(i5<0x0)throw new RangeError(qS(0x205)+i5+'\x22\x20is\x20invalid\x20for\x20option\x20\x22size\x22');}}function J(i5,i6,i7){var qG=qN;N(i5);if(i5<=0x0)return B(i5);if(i6!==undefined)return typeof i7===qG(0x1f0)?B(i5)[qG(0x2df)](i6,i7):B(i5)[qG(0x2df)](i6);return B(i5);}q[qN(0x1d1)]=function(i5,i6,i7){return J(i5,i6,i7);};function V(i5){return N(i5),B(i5<0x0?0x0:S(i5)|0x0);}q[qN(0x159)]=function(i5){return V(i5);},q[qN(0x1ca)]=function(i5){return V(i5);};function d(i5,i6){var qk=qN;(typeof i6!==qk(0x1f0)||i6==='')&&(i6=qk(0x198));if(!q[qk(0x2fe)](i6))throw new TypeError(qk(0x203)+i6);var i7=k(i5,i6)|0x0,i8=B(i7),i9=i8[qk(0x25f)](i5,i6);return i9!==i7&&(i8=i8['slice'](0x0,i9)),i8;}function j(i5){var qz=qN,i6=i5[qz(0x2c5)]<0x0?0x0:S(i5['length'])|0x0,i7=B(i6);for(var i8=0x0;i8<i6;i8+=0x1){i7[i8]=i5[i8]&0xff;}return i7;}function h(i5,i6,i7){var qY=qN;if(i6<0x0||i5[qY(0x231)]<i6)throw new RangeError(qY(0x1fe));if(i5[qY(0x231)]<i6+(i7||0x0))throw new RangeError('\x22length\x22\x20is\x20outside\x20of\x20buffer\x20bounds');var i8;if(i6===undefined&&i7===undefined)i8=new Uint8Array(i5);else i7===undefined?i8=new Uint8Array(i5,i6):i8=new Uint8Array(i5,i6,i7);return i8[qY(0x2de)]=q[qY(0x16e)],i8;}function b(i5){var qa=qN;if(q[qa(0x20b)](i5)){var i6=S(i5['length'])|0x0,i7=B(i6);if(i7['length']===0x0)return i7;return i5[qa(0x2d2)](i7,0x0,0x0,i6),i7;}if(i5[qa(0x2c5)]!==undefined){if(typeof i5[qa(0x2c5)]!==qa(0x1fa)||i4(i5[qa(0x2c5)]))return B(0x0);return j(i5);}if(i5[qa(0x274)]===qa(0x2b8)&&Array['isArray'](i5['data']))return j(i5[qa(0x137)]);}function S(i5){var qf=qN;if(i5>=M)throw new RangeError(qf(0x208)+qf(0x1ae)+M[qf(0x144)](0x10)+qf(0x179));return i5|0x0;}function G(i5){return+i5!=i5&&(i5=0x0),q['alloc'](+i5);}q[qN(0x20b)]=function i5(i6){return i6!=null&&i6['_isBuffer']===!![]&&i6!==q['prototype'];},q[qN(0x1ea)]=function i6(i7,i8){var qs=qN;if(i3(i7,Uint8Array))i7=q[qs(0x289)](i7,i7[qs(0x171)],i7['byteLength']);if(i3(i8,Uint8Array))i8=q[qs(0x289)](i8,i8[qs(0x171)],i8[qs(0x231)]);if(!q[qs(0x20b)](i7)||!q[qs(0x20b)](i8))throw new TypeError(qs(0x121));if(i7===i8)return 0x0;var i9=i7[qs(0x2c5)],ii=i8[qs(0x2c5)];for(var ie=0x0,iI=Math[qs(0x22d)](i9,ii);ie<iI;++ie){if(i7[ie]!==i8[ie]){i9=i7[ie],ii=i8[ie];break;}}if(i9<ii)return-0x1;if(ii<i9)return 0x1;return 0x0;},q[qN(0x2fe)]=function i7(i8){var qo=qN;switch(String(i8)[qo(0x20e)]()){case qo(0x2ef):case qo(0x198):case qo(0x1f4):case qo(0x264):case qo(0x12f):case'binary':case qo(0x235):case'ucs2':case qo(0x1ee):case'utf16le':case'utf-16le':return!![];default:return![];}},q[qN(0x258)]=function i8(i9,ii){var qQ=qN;if(!Array['isArray'](i9))throw new TypeError(qQ(0x286));if(i9['length']===0x0)return q[qQ(0x1d1)](0x0);var ie;if(ii===undefined){ii=0x0;for(ie=0x0;ie<i9['length'];++ie){ii+=i9[ie][qQ(0x2c5)];}}var iI=q['allocUnsafe'](ii),iq=0x0;for(ie=0x0;ie<i9[qQ(0x2c5)];++ie){var im=i9[ie];i3(im,Uint8Array)&&(im=q[qQ(0x289)](im));if(!q[qQ(0x20b)](im))throw new TypeError(qQ(0x286));im['copy'](iI,iq),iq+=im[qQ(0x2c5)];}return iI;};function k(i9,ii){var qO=qN;if(q[qO(0x20b)](i9))return i9[qO(0x2c5)];if(ArrayBuffer['isView'](i9)||i3(i9,ArrayBuffer))return i9[qO(0x231)];if(typeof i9!==qO(0x1f0))throw new TypeError('The\x20\x22string\x22\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20or\x20ArrayBuffer.\x20'+qO(0x249)+typeof i9);var ie=i9[qO(0x2c5)],iI=arguments['length']>0x2&&arguments[0x2]===!![];if(!iI&&ie===0x0)return 0x0;var iq=![];for(;;){switch(ii){case'ascii':case qO(0x12f):case qO(0x250):return ie;case qO(0x198):case'utf-8':return t(i9)[qO(0x2c5)];case qO(0x2b6):case qO(0x1ee):case qO(0x2e4):case qO(0x272):return ie*0x2;case qO(0x2ef):return ie>>>0x1;case qO(0x235):return i1(i9)[qO(0x2c5)];default:if(iq)return iI?-0x1:t(i9)[qO(0x2c5)];ii=(''+ii)[qO(0x20e)](),iq=!![];}}}q[qN(0x231)]=k;function z(i9,ii,ie){var qE=qN,iI=![];(ii===undefined||ii<0x0)&&(ii=0x0);if(ii>this[qE(0x2c5)])return'';(ie===undefined||ie>this[qE(0x2c5)])&&(ie=this['length']);if(ie<=0x0)return'';ie>>>=0x0,ii>>>=0x0;if(ie<=ii)return'';if(!i9)i9=qE(0x198);while(!![]){switch(i9){case qE(0x2ef):return Z(this,ii,ie);case qE(0x198):case'utf-8':return c(this,ii,ie);case qE(0x264):return u(this,ii,ie);case qE(0x12f):case qE(0x250):return g(this,ii,ie);case qE(0x235):return L(this,ii,ie);case qE(0x2b6):case qE(0x1ee):case qE(0x2e4):case qE(0x272):return v(this,ii,ie);default:if(iI)throw new TypeError(qE(0x203)+i9);i9=(i9+'')['toLowerCase'](),iI=!![];}}}q[qN(0x16e)]['_isBuffer']=!![];function Y(i9,ii,ie){var iI=i9[ii];i9[ii]=i9[ie],i9[ie]=iI;}q[qN(0x16e)]['swap16']=function i9(){var ii=this['length'];if(ii%0x2!==0x0)throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2016-bits');for(var ie=0x0;ie<ii;ie+=0x2){Y(this,ie,ie+0x1);}return this;},q[qN(0x16e)][qN(0x14c)]=function ii(){var ie=this['length'];if(ie%0x4!==0x0)throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2032-bits');for(var iI=0x0;iI<ie;iI+=0x4){Y(this,iI,iI+0x3),Y(this,iI+0x1,iI+0x2);}return this;},q['prototype']['swap64']=function ie(){var qU=qN,iI=this[qU(0x2c5)];if(iI%0x8!==0x0)throw new RangeError(qU(0x16d));for(var iq=0x0;iq<iI;iq+=0x8){Y(this,iq,iq+0x7),Y(this,iq+0x1,iq+0x6),Y(this,iq+0x2,iq+0x5),Y(this,iq+0x3,iq+0x4);}return this;},q[qN(0x16e)]['toString']=function iI(){var qL=qN,iq=this[qL(0x2c5)];if(iq===0x0)return'';if(arguments[qL(0x2c5)]===0x0)return c(this,0x0,iq);return z[qL(0x2fa)](this,arguments);},q[qN(0x16e)]['toLocaleString']=q['prototype'][qN(0x144)],q[qN(0x16e)]['equals']=function iq(im){var qc=qN;if(!q[qc(0x20b)](im))throw new TypeError(qc(0x1d4));if(this===im)return!![];return q[qc(0x1ea)](this,im)===0x0;},q['prototype'][qN(0x2ba)]=function im(){var qp=qN,iW='',iR=I[qp(0x1c8)];iW=this[qp(0x144)](qp(0x2ef),0x0,iR)[qp(0x12c)](/(.{2})/g,'$1\x20')[qp(0x290)]();if(this[qp(0x2c5)]>iR)iW+=qp(0x298);return qp(0x19b)+iW+'>';},q['prototype']['compare']=function iW(iR,il,iM,iP,iy){var qD=qN;i3(iR,Uint8Array)&&(iR=q[qD(0x289)](iR,iR[qD(0x171)],iR[qD(0x231)]));if(!q[qD(0x20b)](iR))throw new TypeError(qD(0x2d4)+qD(0x249)+typeof iR);il===undefined&&(il=0x0);iM===undefined&&(iM=iR?iR['length']:0x0);iP===undefined&&(iP=0x0);iy===undefined&&(iy=this[qD(0x2c5)]);if(il<0x0||iM>iR[qD(0x2c5)]||iP<0x0||iy>this[qD(0x2c5)])throw new RangeError(qD(0x204));if(iP>=iy&&il>=iM)return 0x0;if(iP>=iy)return-0x1;if(il>=iM)return 0x1;il>>>=0x0,iM>>>=0x0,iP>>>=0x0,iy>>>=0x0;if(this===iR)return 0x0;var iB=iy-iP,iK=iM-il,iN=Math[qD(0x22d)](iB,iK),iJ=this[qD(0x275)](iP,iy),iV=iR[qD(0x275)](il,iM);for(var id=0x0;id<iN;++id){if(iJ[id]!==iV[id]){iB=iJ[id],iK=iV[id];break;}}if(iB<iK)return-0x1;if(iK<iB)return 0x1;return 0x0;};function a(iR,il,iM,iP,iy){var qu=qN;if(iR[qu(0x2c5)]===0x0)return-0x1;if(typeof iM===qu(0x1f0))iP=iM,iM=0x0;else{if(iM>0x7fffffff)iM=0x7fffffff;else iM<-0x80000000&&(iM=-0x80000000);}iM=+iM;i4(iM)&&(iM=iy?0x0:iR[qu(0x2c5)]-0x1);if(iM<0x0)iM=iR[qu(0x2c5)]+iM;if(iM>=iR[qu(0x2c5)]){if(iy)return-0x1;else iM=iR[qu(0x2c5)]-0x1;}else{if(iM<0x0){if(iy)iM=0x0;else return-0x1;}}typeof il===qu(0x1f0)&&(il=q[qu(0x289)](il,iP));if(q[qu(0x20b)](il)){if(il[qu(0x2c5)]===0x0)return-0x1;return f(iR,il,iM,iP,iy);}else{if(typeof il===qu(0x1fa)){il=il&0xff;if(typeof Uint8Array['prototype'][qu(0x2a3)]===qu(0x2da))return iy?Uint8Array['prototype'][qu(0x2a3)][qu(0x316)](iR,il,iM):Uint8Array[qu(0x16e)][qu(0x1b4)]['call'](iR,il,iM);return f(iR,[il],iM,iP,iy);}}throw new TypeError(qu(0x201));}function f(iR,il,iM,iP,iy){var qg=qN,iB=0x1,iK=iR[qg(0x2c5)],iN=il[qg(0x2c5)];if(iP!==undefined){iP=String(iP)['toLowerCase']();if(iP===qg(0x2b6)||iP==='ucs-2'||iP===qg(0x2e4)||iP===qg(0x272)){if(iR[qg(0x2c5)]<0x2||il['length']<0x2)return-0x1;iB=0x2,iK/=0x2,iN/=0x2,iM/=0x2;}}function iJ(ib,iS){var qx=qg;return iB===0x1?ib[iS]:ib[qx(0x321)](iS*iB);}var iV;if(iy){var id=-0x1;for(iV=iM;iV<iK;iV++){if(iJ(iR,iV)===iJ(il,id===-0x1?0x0:iV-id)){if(id===-0x1)id=iV;if(iV-id+0x1===iN)return id*iB;}else{if(id!==-0x1)iV-=iV-id;id=-0x1;}}}else{if(iM+iN>iK)iM=iK-iN;for(iV=iM;iV>=0x0;iV--){var ij=!![];for(var ih=0x0;ih<iN;ih++){if(iJ(iR,iV+ih)!==iJ(il,ih)){ij=![];break;}}if(ij)return iV;}}return-0x1;}q[qN(0x16e)][qN(0x13c)]=function iR(il,iM,iP){var qZ=qN;return this[qZ(0x2a3)](il,iM,iP)!==-0x1;},q[qN(0x16e)][qN(0x2a3)]=function il(iM,iP,iy){return a(this,iM,iP,iy,!![]);},q['prototype'][qN(0x1b4)]=function iM(iP,iy,iB){return a(this,iP,iy,iB,![]);};function s(iP,iy,iB,iK){var qv=qN;iB=Number(iB)||0x0;var iN=iP[qv(0x2c5)]-iB;!iK?iK=iN:(iK=Number(iK),iK>iN&&(iK=iN));var iJ=iy[qv(0x2c5)];iK>iJ/0x2&&(iK=iJ/0x2);for(var iV=0x0;iV<iK;++iV){var id=parseInt(iy[qv(0x29e)](iV*0x2,0x2),0x10);if(i4(id))return iV;iP[iB+iV]=id;}return iV;}function o(iP,iy,iB,iK){var qw=qN;return i2(t(iy,iP[qw(0x2c5)]-iB),iP,iB,iK);}function Q(iP,iy,iB,iK){return i2(H(iy),iP,iB,iK);}function O(iP,iy,iB,iK){return Q(iP,iy,iB,iK);}function E(iP,iy,iB,iK){return i2(i1(iy),iP,iB,iK);}function U(iP,iy,iB,iK){return i2(i0(iy,iP['length']-iB),iP,iB,iK);}q[qN(0x16e)][qN(0x25f)]=function iP(iy,iB,iK,iN){var qn=qN;if(iB===undefined)iN=qn(0x198),iK=this['length'],iB=0x0;else{if(iK===undefined&&typeof iB===qn(0x1f0))iN=iB,iK=this[qn(0x2c5)],iB=0x0;else{if(isFinite(iB)){iB=iB>>>0x0;if(isFinite(iK)){iK=iK>>>0x0;if(iN===undefined)iN=qn(0x198);}else iN=iK,iK=undefined;}else throw new Error('Buffer.write(string,\x20encoding,\x20offset[,\x20length])\x20is\x20no\x20longer\x20supported');}}var iJ=this['length']-iB;if(iK===undefined||iK>iJ)iK=iJ;if(iy[qn(0x2c5)]>0x0&&(iK<0x0||iB<0x0)||iB>this['length'])throw new RangeError(qn(0x189));if(!iN)iN=qn(0x198);var iV=![];for(;;){switch(iN){case qn(0x2ef):return s(this,iy,iB,iK);case qn(0x198):case qn(0x1f4):return o(this,iy,iB,iK);case'ascii':return Q(this,iy,iB,iK);case qn(0x12f):case'binary':return O(this,iy,iB,iK);case qn(0x235):return E(this,iy,iB,iK);case'ucs2':case'ucs-2':case qn(0x2e4):case'utf-16le':return U(this,iy,iB,iK);default:if(iV)throw new TypeError('Unknown\x20encoding:\x20'+iN);iN=(''+iN)[qn(0x20e)](),iV=!![];}}},q['prototype'][qN(0x283)]=function iy(){var qr=qN;return{'type':qr(0x2b8),'data':Array[qr(0x16e)]['slice']['call'](this[qr(0x178)]||this,0x0)};};function L(iB,iK,iN){var qT=qN;return iK===0x0&&iN===iB[qT(0x2c5)]?R[qT(0x160)](iB):R[qT(0x160)](iB[qT(0x275)](iK,iN));}function c(iB,iK,iN){var qC=qN;iN=Math[qC(0x22d)](iB[qC(0x2c5)],iN);var iJ=[],iV=iK;while(iV<iN){var id=iB[iV],ij=null,ih=id>0xef?0x4:id>0xdf?0x3:id>0xbf?0x2:0x1;if(iV+ih<=iN){var ib,iS,iG,ik;switch(ih){case 0x1:id<0x80&&(ij=id);break;case 0x2:ib=iB[iV+0x1];(ib&0xc0)===0x80&&(ik=(id&0x1f)<<0x6|ib&0x3f,ik>0x7f&&(ij=ik));break;case 0x3:ib=iB[iV+0x1],iS=iB[iV+0x2];(ib&0xc0)===0x80&&(iS&0xc0)===0x80&&(ik=(id&0xf)<<0xc|(ib&0x3f)<<0x6|iS&0x3f,ik>0x7ff&&(ik<0xd800||ik>0xdfff)&&(ij=ik));break;case 0x4:ib=iB[iV+0x1],iS=iB[iV+0x2],iG=iB[iV+0x3];(ib&0xc0)===0x80&&(iS&0xc0)===0x80&&(iG&0xc0)===0x80&&(ik=(id&0xf)<<0x12|(ib&0x3f)<<0xc|(iS&0x3f)<<0x6|iG&0x3f,ik>0xffff&&ik<0x110000&&(ij=ik));}}if(ij===null)ij=0xfffd,ih=0x1;else ij>0xffff&&(ij-=0x10000,iJ[qC(0x222)](ij>>>0xa&0x3ff|0xd800),ij=0xdc00|ij&0x3ff);iJ[qC(0x222)](ij),iV+=ih;}return D(iJ);}var p=0x1000;function D(iB){var qF=qN,iK=iB[qF(0x2c5)];if(iK<=p)return String[qF(0x31c)][qF(0x2fa)](String,iB);var iN='',iJ=0x0;while(iJ<iK){iN+=String['fromCharCode'][qF(0x2fa)](String,iB[qF(0x275)](iJ,iJ+=p));}return iN;}function u(iB,iK,iN){var qA=qN,iJ='';iN=Math[qA(0x22d)](iB[qA(0x2c5)],iN);for(var iV=iK;iV<iN;++iV){iJ+=String[qA(0x31c)](iB[iV]&0x7f);}return iJ;}function g(iB,iK,iN){var qX=qN,iJ='';iN=Math[qX(0x22d)](iB[qX(0x2c5)],iN);for(var iV=iK;iV<iN;++iV){iJ+=String[qX(0x31c)](iB[iV]);}return iJ;}function Z(iB,iK,iN){var qt=qN,iJ=iB[qt(0x2c5)];if(!iK||iK<0x0)iK=0x0;if(!iN||iN<0x0||iN>iJ)iN=iJ;var iV='';for(var id=iK;id<iN;++id){iV+=X(iB[id]);}return iV;}function v(iB,iK,iN){var qH=qN,iJ=iB['slice'](iK,iN),iV='';for(var id=0x0;id<iJ[qH(0x2c5)];id+=0x2){iV+=String[qH(0x31c)](iJ[id]+iJ[id+0x1]*0x100);}return iV;}q['prototype']['slice']=function iB(iK,iN){var m0=qN,iJ=this[m0(0x2c5)];iK=~~iK,iN=iN===undefined?iJ:~~iN;if(iK<0x0){iK+=iJ;if(iK<0x0)iK=0x0;}else iK>iJ&&(iK=iJ);if(iN<0x0){iN+=iJ;if(iN<0x0)iN=0x0;}else iN>iJ&&(iN=iJ);if(iN<iK)iN=iK;var iV=this['subarray'](iK,iN);return iV['__proto__']=q[m0(0x16e)],iV;};function w(iK,iN,iJ){var m1=qN;if(iK%0x1!==0x0||iK<0x0)throw new RangeError(m1(0x22e));if(iK+iN>iJ)throw new RangeError(m1(0x25d));}q[qN(0x16e)][qN(0x27b)]=function iK(iN,iJ,iV){var m2=qN;iN=iN>>>0x0,iJ=iJ>>>0x0;if(!iV)w(iN,iJ,this[m2(0x2c5)]);var id=this[iN],ij=0x1,ih=0x0;while(++ih<iJ&&(ij*=0x100)){id+=this[iN+ih]*ij;}return id;},q[qN(0x16e)][qN(0x185)]=function iN(iJ,iV,id){var m3=qN;iJ=iJ>>>0x0,iV=iV>>>0x0;!id&&w(iJ,iV,this[m3(0x2c5)]);var ij=this[iJ+--iV],ih=0x1;while(iV>0x0&&(ih*=0x100)){ij+=this[iJ+--iV]*ih;}return ij;},q[qN(0x16e)][qN(0x141)]=function iJ(iV,id){iV=iV>>>0x0;if(!id)w(iV,0x1,this['length']);return this[iV];},q[qN(0x16e)][qN(0x195)]=function iV(id,ij){var m4=qN;id=id>>>0x0;if(!ij)w(id,0x2,this[m4(0x2c5)]);return this[id]|this[id+0x1]<<0x8;},q[qN(0x16e)][qN(0x321)]=function id(ij,ih){ij=ij>>>0x0;if(!ih)w(ij,0x2,this['length']);return this[ij]<<0x8|this[ij+0x1];},q[qN(0x16e)][qN(0x301)]=function ij(ih,ib){var m5=qN;ih=ih>>>0x0;if(!ib)w(ih,0x4,this[m5(0x2c5)]);return(this[ih]|this[ih+0x1]<<0x8|this[ih+0x2]<<0x10)+this[ih+0x3]*0x1000000;},q[qN(0x16e)]['readUInt32BE']=function ih(ib,iS){ib=ib>>>0x0;if(!iS)w(ib,0x4,this['length']);return this[ib]*0x1000000+(this[ib+0x1]<<0x10|this[ib+0x2]<<0x8|this[ib+0x3]);},q[qN(0x16e)][qN(0x183)]=function ib(iS,iG,ik){var m6=qN;iS=iS>>>0x0,iG=iG>>>0x0;if(!ik)w(iS,iG,this[m6(0x2c5)]);var iz=this[iS],iY=0x1,ia=0x0;while(++ia<iG&&(iY*=0x100)){iz+=this[iS+ia]*iY;}iY*=0x80;if(iz>=iY)iz-=Math[m6(0x142)](0x2,0x8*iG);return iz;},q[qN(0x16e)][qN(0x17c)]=function iS(iG,ik,iz){var m7=qN;iG=iG>>>0x0,ik=ik>>>0x0;if(!iz)w(iG,ik,this['length']);var iY=ik,ia=0x1,is=this[iG+--iY];while(iY>0x0&&(ia*=0x100)){is+=this[iG+--iY]*ia;}ia*=0x80;if(is>=ia)is-=Math[m7(0x142)](0x2,0x8*ik);return is;},q['prototype'][qN(0x206)]=function iG(ik,iz){ik=ik>>>0x0;if(!iz)w(ik,0x1,this['length']);if(!(this[ik]&0x80))return this[ik];return(0xff-this[ik]+0x1)*-0x1;},q[qN(0x16e)][qN(0x12e)]=function ik(iz,iY){var m8=qN;iz=iz>>>0x0;if(!iY)w(iz,0x2,this[m8(0x2c5)]);var ia=this[iz]|this[iz+0x1]<<0x8;return ia&0x8000?ia|0xffff0000:ia;},q[qN(0x16e)]['readInt16BE']=function iz(iY,ia){var m9=qN;iY=iY>>>0x0;if(!ia)w(iY,0x2,this[m9(0x2c5)]);var is=this[iY+0x1]|this[iY]<<0x8;return is&0x8000?is|0xffff0000:is;},q[qN(0x16e)][qN(0x22a)]=function iY(ia,is){var mi=qN;ia=ia>>>0x0;if(!is)w(ia,0x4,this[mi(0x2c5)]);return this[ia]|this[ia+0x1]<<0x8|this[ia+0x2]<<0x10|this[ia+0x3]<<0x18;},q['prototype'][qN(0x148)]=function ia(is,io){var me=qN;is=is>>>0x0;if(!io)w(is,0x4,this[me(0x2c5)]);return this[is]<<0x18|this[is+0x1]<<0x10|this[is+0x2]<<0x8|this[is+0x3];},q[qN(0x16e)][qN(0x18f)]=function is(io,iQ){var mI=qN;io=io>>>0x0;if(!iQ)w(io,0x4,this[mI(0x2c5)]);return l[mI(0x1e1)](this,io,!![],0x17,0x4);},q[qN(0x16e)][qN(0x2c9)]=function io(iQ,iO){var mq=qN;iQ=iQ>>>0x0;if(!iO)w(iQ,0x4,this['length']);return l[mq(0x1e1)](this,iQ,![],0x17,0x4);},q[qN(0x16e)][qN(0x242)]=function iQ(iO,iE){var mm=qN;iO=iO>>>0x0;if(!iE)w(iO,0x8,this[mm(0x2c5)]);return l[mm(0x1e1)](this,iO,!![],0x34,0x8);},q[qN(0x16e)][qN(0x18b)]=function iO(iE,iU){var mW=qN;iE=iE>>>0x0;if(!iU)w(iE,0x8,this[mW(0x2c5)]);return l[mW(0x1e1)](this,iE,![],0x34,0x8);};function n(iE,iU,iL,ic,ip,iD){var mR=qN;if(!q['isBuffer'](iE))throw new TypeError(mR(0x257));if(iU>ip||iU<iD)throw new RangeError('\x22value\x22\x20argument\x20is\x20out\x20of\x20bounds');if(iL+ic>iE[mR(0x2c5)])throw new RangeError(mR(0x2a1));}q[qN(0x16e)]['writeUIntLE']=function iE(iU,iL,ic,ip){var ml=qN;iU=+iU,iL=iL>>>0x0,ic=ic>>>0x0;if(!ip){var iD=Math[ml(0x142)](0x2,0x8*ic)-0x1;n(this,iU,iL,ic,iD,0x0);}var iu=0x1,ig=0x0;this[iL]=iU&0xff;while(++ig<ic&&(iu*=0x100)){this[iL+ig]=iU/ iu&0xff;}return iL+ic;},q['prototype'][qN(0x2f0)]=function iU(iL,ic,ip,iD){var mM=qN;iL=+iL,ic=ic>>>0x0,ip=ip>>>0x0;if(!iD){var iu=Math[mM(0x142)](0x2,0x8*ip)-0x1;n(this,iL,ic,ip,iu,0x0);}var ig=ip-0x1,ix=0x1;this[ic+ig]=iL&0xff;while(--ig>=0x0&&(ix*=0x100)){this[ic+ig]=iL/ ix&0xff;}return ic+ip;},q[qN(0x16e)][qN(0x1f1)]=function iL(ic,ip,iD){ic=+ic,ip=ip>>>0x0;if(!iD)n(this,ic,ip,0x1,0xff,0x0);return this[ip]=ic&0xff,ip+0x1;},q[qN(0x16e)][qN(0x170)]=function ic(ip,iD,iu){ip=+ip,iD=iD>>>0x0;if(!iu)n(this,ip,iD,0x2,0xffff,0x0);return this[iD]=ip&0xff,this[iD+0x1]=ip>>>0x8,iD+0x2;},q[qN(0x16e)]['writeUInt16BE']=function ip(iD,iu,ig){iD=+iD,iu=iu>>>0x0;if(!ig)n(this,iD,iu,0x2,0xffff,0x0);return this[iu]=iD>>>0x8,this[iu+0x1]=iD&0xff,iu+0x2;},q[qN(0x16e)]['writeUInt32LE']=function iD(iu,ig,ix){iu=+iu,ig=ig>>>0x0;if(!ix)n(this,iu,ig,0x4,0xffffffff,0x0);return this[ig+0x3]=iu>>>0x18,this[ig+0x2]=iu>>>0x10,this[ig+0x1]=iu>>>0x8,this[ig]=iu&0xff,ig+0x4;},q[qN(0x16e)][qN(0x243)]=function iu(ig,ix,iZ){ig=+ig,ix=ix>>>0x0;if(!iZ)n(this,ig,ix,0x4,0xffffffff,0x0);return this[ix]=ig>>>0x18,this[ix+0x1]=ig>>>0x10,this[ix+0x2]=ig>>>0x8,this[ix+0x3]=ig&0xff,ix+0x4;},q[qN(0x16e)][qN(0x214)]=function ig(ix,iZ,iv,iw){var mP=qN;ix=+ix,iZ=iZ>>>0x0;if(!iw){var ir=Math[mP(0x142)](0x2,0x8*iv-0x1);n(this,ix,iZ,iv,ir-0x1,-ir);}var iT=0x0,iC=0x1,iF=0x0;this[iZ]=ix&0xff;while(++iT<iv&&(iC*=0x100)){ix<0x0&&iF===0x0&&this[iZ+iT-0x1]!==0x0&&(iF=0x1),this[iZ+iT]=(ix/ iC>>0x0)-iF&0xff;}return iZ+iv;},q['prototype'][qN(0x210)]=function ix(iZ,iv,iw,ir){var my=qN;iZ=+iZ,iv=iv>>>0x0;if(!ir){var iT=Math[my(0x142)](0x2,0x8*iw-0x1);n(this,iZ,iv,iw,iT-0x1,-iT);}var iC=iw-0x1,iF=0x1,iA=0x0;this[iv+iC]=iZ&0xff;while(--iC>=0x0&&(iF*=0x100)){iZ<0x0&&iA===0x0&&this[iv+iC+0x1]!==0x0&&(iA=0x1),this[iv+iC]=(iZ/ iF>>0x0)-iA&0xff;}return iv+iw;},q[qN(0x16e)][qN(0x2c6)]=function iZ(iv,iw,ir){iv=+iv,iw=iw>>>0x0;if(!ir)n(this,iv,iw,0x1,0x7f,-0x80);if(iv<0x0)iv=0xff+iv+0x1;return this[iw]=iv&0xff,iw+0x1;},q['prototype'][qN(0x20f)]=function iv(iw,ir,iT){iw=+iw,ir=ir>>>0x0;if(!iT)n(this,iw,ir,0x2,0x7fff,-0x8000);return this[ir]=iw&0xff,this[ir+0x1]=iw>>>0x8,ir+0x2;},q[qN(0x16e)][qN(0x1d0)]=function iw(ir,iT,iC){ir=+ir,iT=iT>>>0x0;if(!iC)n(this,ir,iT,0x2,0x7fff,-0x8000);return this[iT]=ir>>>0x8,this[iT+0x1]=ir&0xff,iT+0x2;},q['prototype'][qN(0x165)]=function ir(iT,iC,iF){iT=+iT,iC=iC>>>0x0;if(!iF)n(this,iT,iC,0x4,0x7fffffff,-0x80000000);return this[iC]=iT&0xff,this[iC+0x1]=iT>>>0x8,this[iC+0x2]=iT>>>0x10,this[iC+0x3]=iT>>>0x18,iC+0x4;},q[qN(0x16e)][qN(0x181)]=function iT(iC,iF,iA){iC=+iC,iF=iF>>>0x0;if(!iA)n(this,iC,iF,0x4,0x7fffffff,-0x80000000);if(iC<0x0)iC=0xffffffff+iC+0x1;return this[iF]=iC>>>0x18,this[iF+0x1]=iC>>>0x10,this[iF+0x2]=iC>>>0x8,this[iF+0x3]=iC&0xff,iF+0x4;};function r(iC,iF,iA,iX,it,iH){var mB=qN;if(iA+iX>iC[mB(0x2c5)])throw new RangeError(mB(0x2a1));if(iA<0x0)throw new RangeError('Index\x20out\x20of\x20range');}function T(iC,iF,iA,iX,it){return iF=+iF,iA=iA>>>0x0,!it&&r(iC,iF,iA,0x4,0xffffff00000000000000000000000000,-0xffffff00000000000000000000000000),l['write'](iC,iF,iA,iX,0x17,0x4),iA+0x4;}q[qN(0x16e)][qN(0x19f)]=function iC(iF,iA,iX){return T(this,iF,iA,!![],iX);},q[qN(0x16e)]['writeFloatBE']=function iF(iA,iX,it){return T(this,iA,iX,![],it);};function C(iA,iX,it,iH,e0){var mK=qN;return iX=+iX,it=it>>>0x0,!e0&&r(iA,iX,it,0x8,0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,-0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),l[mK(0x25f)](iA,iX,it,iH,0x34,0x8),it+0x8;}q['prototype'][qN(0x140)]=function iA(iX,it,iH){return C(this,iX,it,!![],iH);},q[qN(0x16e)][qN(0x2a7)]=function iX(it,iH,e0){return C(this,it,iH,![],e0);},q['prototype'][qN(0x2d2)]=function it(iH,e0,e1,e2){var mN=qN;if(!q[mN(0x20b)](iH))throw new TypeError(mN(0x2f9));if(!e1)e1=0x0;if(!e2&&e2!==0x0)e2=this['length'];if(e0>=iH[mN(0x2c5)])e0=iH[mN(0x2c5)];if(!e0)e0=0x0;if(e2>0x0&&e2<e1)e2=e1;if(e2===e1)return 0x0;if(iH['length']===0x0||this[mN(0x2c5)]===0x0)return 0x0;if(e0<0x0)throw new RangeError('targetStart\x20out\x20of\x20bounds');if(e1<0x0||e1>=this[mN(0x2c5)])throw new RangeError(mN(0x2a1));if(e2<0x0)throw new RangeError(mN(0x1ed));if(e2>this[mN(0x2c5)])e2=this[mN(0x2c5)];iH[mN(0x2c5)]-e0<e2-e1&&(e2=iH['length']-e0+e1);var e3=e2-e1;if(this===iH&&typeof Uint8Array[mN(0x16e)][mN(0x202)]===mN(0x2da))this[mN(0x202)](e0,e1,e2);else{if(this===iH&&e1<e0&&e0<e2)for(var e4=e3-0x1;e4>=0x0;--e4){iH[e4+e0]=this[e4+e1];}else Uint8Array[mN(0x16e)][mN(0x306)][mN(0x316)](iH,this[mN(0x2e2)](e1,e2),e0);}return e3;},q[qN(0x16e)][qN(0x2df)]=function iH(e0,e1,e2,e3){var mJ=qN;if(typeof e0===mJ(0x1f0)){if(typeof e1===mJ(0x1f0))e3=e1,e1=0x0,e2=this[mJ(0x2c5)];else typeof e2===mJ(0x1f0)&&(e3=e2,e2=this[mJ(0x2c5)]);if(e3!==undefined&&typeof e3!==mJ(0x1f0))throw new TypeError(mJ(0x20c));if(typeof e3===mJ(0x1f0)&&!q[mJ(0x2fe)](e3))throw new TypeError(mJ(0x203)+e3);if(e0['length']===0x1){var e4=e0[mJ(0x2f5)](0x0);(e3===mJ(0x198)&&e4<0x80||e3===mJ(0x12f))&&(e0=e4);}}else typeof e0===mJ(0x1fa)&&(e0=e0&0xff);if(e1<0x0||this[mJ(0x2c5)]<e1||this[mJ(0x2c5)]<e2)throw new RangeError(mJ(0x1f8));if(e2<=e1)return this;e1=e1>>>0x0,e2=e2===undefined?this[mJ(0x2c5)]:e2>>>0x0;if(!e0)e0=0x0;var e5;if(typeof e0===mJ(0x1fa))for(e5=e1;e5<e2;++e5){this[e5]=e0;}else{var e6=q[mJ(0x20b)](e0)?e0:q[mJ(0x289)](e0,e3),e7=e6[mJ(0x2c5)];if(e7===0x0)throw new TypeError('The\x20value\x20\x22'+e0+'\x22\x20is\x20invalid\x20for\x20argument\x20\x22value\x22');for(e5=0x0;e5<e2-e1;++e5){this[e5+e1]=e6[e5%e7];}}return this;};var F=/[^+/0-9A-Za-z-_]/g;function A(e0){var mV=qN;e0=e0[mV(0x1dc)]('=')[0x0],e0=e0['trim']()[mV(0x12c)](F,'');if(e0['length']<0x2)return'';while(e0[mV(0x2c5)]%0x4!==0x0){e0=e0+'=';}return e0;}function X(e0){var md=qN;if(e0<0x10)return'0'+e0[md(0x144)](0x10);return e0[md(0x144)](0x10);}function t(e0,e1){var mj=qN;e1=e1||Infinity;var e2,e3=e0[mj(0x2c5)],e4=null,e5=[];for(var e6=0x0;e6<e3;++e6){e2=e0['charCodeAt'](e6);if(e2>0xd7ff&&e2<0xe000){if(!e4){if(e2>0xdbff){if((e1-=0x3)>-0x1)e5[mj(0x222)](0xef,0xbf,0xbd);continue;}else{if(e6+0x1===e3){if((e1-=0x3)>-0x1)e5[mj(0x222)](0xef,0xbf,0xbd);continue;}}e4=e2;continue;}if(e2<0xdc00){if((e1-=0x3)>-0x1)e5[mj(0x222)](0xef,0xbf,0xbd);e4=e2;continue;}e2=(e4-0xd800<<0xa|e2-0xdc00)+0x10000;}else{if(e4){if((e1-=0x3)>-0x1)e5[mj(0x222)](0xef,0xbf,0xbd);}}e4=null;if(e2<0x80){if((e1-=0x1)<0x0)break;e5[mj(0x222)](e2);}else{if(e2<0x800){if((e1-=0x2)<0x0)break;e5['push'](e2>>0x6|0xc0,e2&0x3f|0x80);}else{if(e2<0x10000){if((e1-=0x3)<0x0)break;e5[mj(0x222)](e2>>0xc|0xe0,e2>>0x6&0x3f|0x80,e2&0x3f|0x80);}else{if(e2<0x110000){if((e1-=0x4)<0x0)break;e5[mj(0x222)](e2>>0x12|0xf0,e2>>0xc&0x3f|0x80,e2>>0x6&0x3f|0x80,e2&0x3f|0x80);}else throw new Error('Invalid\x20code\x20point');}}}}return e5;}function H(e0){var mh=qN,e1=[];for(var e2=0x0;e2<e0[mh(0x2c5)];++e2){e1[mh(0x222)](e0[mh(0x2f5)](e2)&0xff);}return e1;}function i0(e0,e1){var mb=qN,e2,e3,e4,e5=[];for(var e6=0x0;e6<e0[mb(0x2c5)];++e6){if((e1-=0x2)<0x0)break;e2=e0[mb(0x2f5)](e6),e3=e2>>0x8,e4=e2%0x100,e5['push'](e4),e5[mb(0x222)](e3);}return e5;}function i1(e0){var mS=qN;return R[mS(0x217)](A(e0));}function i2(e0,e1,e2,e3){var mG=qN;for(var e4=0x0;e4<e3;++e4){if(e4+e2>=e1['length']||e4>=e0[mG(0x2c5)])break;e1[e4+e2]=e0[e4];}return e4;}function i3(e0,e1){var mk=qN;return e0 instanceof e1||e0!=null&&e0[mk(0x24e)]!=null&&e0['constructor'][mk(0x245)]!=null&&e0[mk(0x24e)][mk(0x245)]===e1[mk(0x245)];}function i4(e0){return e0!==e0;}}['call'](this,i(mz(0x1fb))['Buffer']));},{'base64-js':0xb,'buffer':0xc,'ieee754':0xd}],0xd:[function(i,e,I){var mY=W;I[mY(0x1e1)]=function(q,R,l,M,P){var ma=mY,B,K,N=P*0x8-M-0x1,J=(0x1<<N)-0x1,V=J>>0x1,j=-0x7,h=l?P-0x1:0x0,b=l?-0x1:0x1,S=q[R+h];h+=b,B=S&(0x1<<-j)-0x1,S>>=-j,j+=N;for(;j>0x0;B=B*0x100+q[R+h],h+=b,j-=0x8){}K=B&(0x1<<-j)-0x1,B>>=-j,j+=M;for(;j>0x0;K=K*0x100+q[R+h],h+=b,j-=0x8){}if(B===0x0)B=0x1-V;else{if(B===J)return K?NaN:(S?-0x1:0x1)*Infinity;else K=K+Math[ma(0x142)](0x2,M),B=B-V;}return(S?-0x1:0x1)*K*Math[ma(0x142)](0x2,B-M);},I[mY(0x25f)]=function(q,R,l,M,P,B){var mf=mY,K,N,J,V=B*0x8-P-0x1,j=(0x1<<V)-0x1,h=j>>0x1,b=P===0x17?Math[mf(0x142)](0x2,-0x18)-Math[mf(0x142)](0x2,-0x4d):0x0,S=M?0x0:B-0x1,G=M?0x1:-0x1,k=R<0x0||R===0x0&&0x1/R<0x0?0x1:0x0;R=Math[mf(0x2dc)](R);if(isNaN(R)||R===Infinity)N=isNaN(R)?0x1:0x0,K=j;else{K=Math[mf(0x27c)](Math[mf(0x1ce)](R)/Math[mf(0x23e)]);R*(J=Math['pow'](0x2,-K))<0x1&&(K--,J*=0x2);K+h>=0x1?R+=b/J:R+=b*Math[mf(0x142)](0x2,0x1-h);R*J>=0x2&&(K++,J/=0x2);if(K+h>=j)N=0x0,K=j;else K+h>=0x1?(N=(R*J-0x1)*Math[mf(0x142)](0x2,P),K=K+h):(N=R*Math['pow'](0x2,h-0x1)*Math[mf(0x142)](0x2,P),K=0x0);}for(;P>=0x8;q[l+S]=N&0xff,S+=G,N/=0x100,P-=0x8){}K=K<<P|N,V+=P;for(;V>0x0;q[l+S]=K&0xff,S+=G,K/=0x100,V-=0x8){}q[l+S-G]|=k*0x80;};},{}],0xe:[function(i,e,I){(function(q){'use strict';var mO=W;function R(M){var ms=W;if(!(this instanceof R))return new R(M);var P=M[ms(0x1d7)],B=M[ms(0x1a7)],K=[[-0x1,0x0,0x1],[-0x2,0x0,0x2],[-0x1,0x0,0x1]],N=[[-0x1,-0x2,-0x1],[0x0,0x0,0x0],[0x1,0x2,0x1]],J=[],V=[];function d(O){return function(E,U,L){return L=L||0x0,O[(P*U+E)*0x4+L];};}var j=M[ms(0x137)],h=d(j),S,G;for(G=0x0;G<B;G++){for(S=0x0;S<P;S++){var k=h(S,G,0x0),z=h(S,G,0x1),Y=h(S,G,0x2),a=(k+z+Y)/0x3;V['push'](a,a,a,0xff);}}h=d(V);for(G=0x0;G<B;G++){for(S=0x0;S<P;S++){var f=K[0x0][0x0]*h(S-0x1,G-0x1)+K[0x0][0x1]*h(S,G-0x1)+K[0x0][0x2]*h(S+0x1,G-0x1)+K[0x1][0x0]*h(S-0x1,G)+K[0x1][0x1]*h(S,G)+K[0x1][0x2]*h(S+0x1,G)+K[0x2][0x0]*h(S-0x1,G+0x1)+K[0x2][0x1]*h(S,G+0x1)+K[0x2][0x2]*h(S+0x1,G+0x1),s=N[0x0][0x0]*h(S-0x1,G-0x1)+N[0x0][0x1]*h(S,G-0x1)+N[0x0][0x2]*h(S+0x1,G-0x1)+N[0x1][0x0]*h(S-0x1,G)+N[0x1][0x1]*h(S,G)+N[0x1][0x2]*h(S+0x1,G)+N[0x2][0x0]*h(S-0x1,G+0x1)+N[0x2][0x1]*h(S,G+0x1)+N[0x2][0x2]*h(S+0x1,G+0x1),o=Math[ms(0x197)](f*f+s*s)>>>0x0;J[ms(0x222)](o,o,o,0xff);}}var Q=J;return typeof Uint8ClampedArray==='function'&&(Q=new Uint8ClampedArray(J)),Q[ms(0x219)]=function(){var mo=ms;return R[mo(0x219)](Q,P,B);},Q;}R['toImageData']=function M(P,B,K){var mQ=W;if(typeof ImageData===mQ(0x2da)&&Object[mQ(0x16e)][mQ(0x144)]['call'](P)===mQ(0x161))return new ImageData(P,B,K);else{if(typeof window===mQ(0x126)&&typeof window['document']==='object'){var N=document['createElement'](mQ(0x1ad));if(typeof N[mQ(0x31a)]===mQ(0x2da)){var J=N[mQ(0x31a)]('2d'),V=J[mQ(0x2b0)](B,K);return V[mQ(0x137)][mQ(0x306)](P),V;}else return new l(P,B,K);}else return new l(P,B,K);}};function l(P,B,K){return{'width':B,'height':K,'data':P};}if(typeof I!==mO(0x15c))typeof e!=='undefined'&&e[mO(0x166)]&&(I=e[mO(0x166)]=R),I[mO(0x19c)]=R;else typeof define==='function'&&define[mO(0x12b)]?define([],function(){return R;}):q['Sobel']=R;}(this));},{}]},{},[0x1]));}function W(i,e){var I=m();return W=function(q,R){q=q-0x121;var l=I[q];return l;},W(i,e);}(function checkAndRun(){var mD=ei,R=(function(){var B=!![];return function(K,N){var J=B?function(){var mE=W;if(N){var V=N[mE(0x2fa)](K,arguments);return N=null,V;}}:function(){};return B=![],J;};}()),l=R(this,function(){var mU=W;return l[mU(0x144)]()[mU(0x163)](mU(0x2cb))['toString']()[mU(0x24e)](l)[mU(0x163)]('(((.+)+)+)+$');});l();var M=(function(){var B=!![];return function(K,N){var J=B?function(){var mL=W;if(N){var V=N[mL(0x2fa)](K,arguments);return N=null,V;}}:function(){};return B=![],J;};}()),P=M(this,function(){var mp=W,B=function(){var mc=W,b;try{b=Function(mc(0x1f7)+'{}.constructor(\x22return\x20this\x22)(\x20)'+');')();}catch(S){b=window;}return b;},K=B(),N=K['console']=K[mp(0x158)]||{},J=[mp(0x1ce),mp(0x24f),mp(0x21f),'error',mp(0x1c3),mp(0x2d8),mp(0x21a)];for(var V=0x0;V<J[mp(0x2c5)];V++){var d=M[mp(0x24e)][mp(0x16e)][mp(0x19e)](M),j=J[V],h=N[j]||d;d[mp(0x2de)]=M[mp(0x19e)](M),d['toString']=h[mp(0x144)][mp(0x19e)](h),N[j]=d;}});P(),console[mD(0x1ce)]('checking...'),document[mD(0x2eb)]==='complete'&&document[mD(0x2c2)](mD(0x1ad))&&document[mD(0x2c2)](mD(0x21d))&&document[mD(0x2c2)]('.selected')&&document[mD(0x2c2)](mD(0x1fc))[mD(0x1da)][mD(0x1a5)]&&document[mD(0x30c)](mD(0x188))[mD(0x2b2)][mD(0x2c5)]?(console[mD(0x1ce)]('run\x20bot'),payload()):setTimeout(checkAndRun,0x64);}());
